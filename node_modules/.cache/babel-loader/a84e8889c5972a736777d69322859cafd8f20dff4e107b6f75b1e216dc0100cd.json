{"ast":null,"code":"// functionality.js\n// ============================== REGULAR OPS ============================== //\n//                                    xx                                     //\n// ============================== REGULAR OPS ============================== //\n\n// Update the toggleCollapse function\nexport function toggleCollapse(button) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const container = button.closest(\".collapsible-code-container\");\n  if (!container) return;\n  const codeContainer = container.querySelector(\".code-container\");\n  if (!codeContainer) return;\n\n  // Toggle the visibility of the code container\n  codeContainer.classList.toggle(\"visible\");\n\n  // Toggle the expanded state of the button\n  button.classList.toggle(\"expanded\");\n\n  // Update the button text based on the state\n  const buttonText = button.querySelector(\"span\");\n  if (codeContainer.classList.contains(\"visible\")) {\n    buttonText.textContent = \"hide code\";\n  } else {\n    buttonText.textContent = \"show code\";\n  }\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const buttonContainers = document.querySelectorAll(\".button-container\");\n  buttonContainers.forEach(container => {\n    container.addEventListener(\"mouseenter\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.add(\"visible\");\n      }\n    });\n    container.addEventListener(\"mouseleave\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  });\n});\n\n// ======================\n// Theme toggle\n// ======================\nexport function toggleTheme() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const html = document.documentElement;\n  const currentTheme = html.getAttribute(\"data-theme\");\n  const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  html.setAttribute(\"data-theme\", newTheme);\n\n  // Save the selected theme in localStorage\n  localStorage.setItem(\"theme\", newTheme);\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const savedTheme = localStorage.getItem(\"theme\") || \"dark\"; // Default to dark\n  document.documentElement.setAttribute(\"data-theme\", savedTheme);\n});\n\n// ======================\n// Table of Contents toggle\n// ======================\nexport function toggleTOC() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const toc = document.getElementById(\"toc\");\n  if (!toc) return;\n  toc.classList.toggle(\"expanded\");\n  const arrow = document.querySelector(\".toc-header span:first-child\");\n  if (arrow) {\n    arrow.textContent = toc.classList.contains(\"expanded\") ? \"▼\" : \"▶\";\n  }\n}\n\n// ======================\n// Copy code functionality\n// ======================\nlet timeoutId;\nconst PROXIMITY_THRESHOLD = 150; // pixels\n\nexport function handleMouseMove(event, buttonId = null) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const targetButton = buttonId ? document.getElementById(buttonId) : document.querySelector(\".copy-button\");\n  if (!targetButton) return;\n  const rect = targetButton.getBoundingClientRect();\n  const buttonCenterX = rect.left + rect.width / 2;\n  const buttonCenterY = rect.top + rect.height / 2;\n  const distance = Math.sqrt(Math.pow(event.clientX - buttonCenterX, 2) + Math.pow(event.clientY - buttonCenterY, 2));\n  clearTimeout(timeoutId);\n  if (distance <= PROXIMITY_THRESHOLD) {\n    targetButton.classList.add(\"visible\");\n    timeoutId = setTimeout(() => {\n      if (!targetButton.matches(\":hover\")) {\n        targetButton.classList.remove(\"visible\");\n      }\n    }, 1000);\n  } else {\n    targetButton.classList.remove(\"visible\");\n  }\n}\n\n/*\n  Purpose: Copies the content of a code block to the clipboard.\n  Behavior: Finds the closest code block to the clicked button, copies its text,\n  and temporarily adds a copied class to the button for visual feedback.\n*/\nexport function copyCode(event) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  event.preventDefault();\n  const button = event.currentTarget;\n  const codeContainer = button.closest(\".collapsible-code-container\");\n  const codeEl = codeContainer ? codeContainer.querySelector(\"code\") : null;\n  if (!codeEl) return;\n  navigator.clipboard.writeText(codeEl.innerText || \"\").then(() => {\n    button.classList.add(\"copied\");\n    setTimeout(() => {\n      button.classList.remove(\"copied\");\n    }, 500);\n  }).catch(err => {\n    console.error(\"Failed to copy code:\", err);\n  });\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCode);\n  });\n});\n\n// ======================\n// Scroll to top\n// ======================\nwindow.onscroll = function () {\n  // Keep this if used outside React, otherwise remove\n  const scrollButton = document.getElementById(\"scrollToTop\");\n  if (!scrollButton) return;\n  if (document.body.scrollTop > window.innerHeight || document.documentElement.scrollTop > window.innerHeight) {\n    scrollButton.style.opacity = \"1\";\n  } else {\n    scrollButton.style.opacity = \"0\";\n  }\n};\nexport function scrollToTop() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\n\n// ======================\n// Copy citation\n// ======================\nexport function copyCitation(event) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  event.preventDefault();\n  const button = event.currentTarget;\n  const citationContainer = button.closest(\".citation-container\");\n  const citationEl = citationContainer ? citationContainer.querySelector(\"code\") : null;\n  if (!citationEl) return;\n  navigator.clipboard.writeText(citationEl.innerText || \"\").then(() => {\n    button.classList.add(\"copied\");\n    setTimeout(() => {\n      button.classList.remove(\"copied\");\n    }, 500);\n  }).catch(err => {\n    console.error(\"Failed to copy citation:\", err);\n  });\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCode);\n  });\n  const citationCopyButtons = document.querySelectorAll(\"#citation-copy-button\");\n  citationCopyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCitation);\n  });\n});\n\n// ======================\n// DOMContentLoaded\n// ======================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  // ----- Safely bind events on .code-container and .copy-button -----\n  const codeContainer = document.querySelector(\".code-container\");\n  const copyButton = document.querySelector(\".copy-button\");\n  if (codeContainer) {\n    codeContainer.addEventListener(\"mouseleave\", () => {\n      clearTimeout(timeoutId);\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  }\n  if (copyButton) {\n    copyButton.addEventListener(\"mouseenter\", () => {\n      clearTimeout(timeoutId);\n      copyButton.classList.add(\"visible\");\n    });\n    copyButton.addEventListener(\"mouseleave\", () => {\n      if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          copyButton.classList.remove(\"visible\");\n        }, 1000);\n      }\n    });\n  }\n\n  // ----- Sidebar TOC + on-scroll logic -----\n  const sidebarToc = document.getElementById(\"sidebar-toc\");\n  const sidebarLinks = document.querySelector(\".sidebar-toc-links\");\n  const mainToc = document.querySelector(\".toc-container\");\n  let ticking = false;\n  if (sidebarLinks) {\n    sidebarLinks.style.scrollBehavior = \"smooth\";\n  }\n\n  // FUNCTIONALITY.JS (modified handleScroll function)\n  const handleScroll = () => {\n    if (!mainToc || !sidebarToc) {\n      return;\n    }\n    const mainTocRect = mainToc.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const headerHeight = document.querySelector(\".header\").offsetHeight; // Dynamically get header height\n    const headerOffset = headerHeight + 20; // Add a little extra offset if needed\n    const mainTocVisible = mainTocRect.bottom > headerOffset; // Simplified condition - sidebar shows when main TOC bottom is above the offset\n\n    if (mainTocVisible) {\n      sidebarToc.classList.remove(\"visible\");\n    } else {\n      sidebarToc.classList.add(\"visible\");\n      updateActiveTocLink();\n    }\n  };\n  const updateActiveTocLink = () => {\n    if (!sidebarLinks) return;\n\n    // Look for headings with IDs\n    const headings = Array.from(document.querySelectorAll(\"h1[id], h2[id], h3[id], h4[id]\")).filter(heading => heading.id);\n    const scrollPosition = window.scrollY;\n    const headerOffset = 100;\n    let currentActive = null;\n    for (const heading of headings) {\n      if (scrollPosition >= heading.offsetTop - headerOffset) {\n        currentActive = heading;\n      } else {\n        break;\n      }\n    }\n    const allLinks = sidebarLinks.querySelectorAll(\"a\");\n    allLinks.forEach(link => {\n      link.classList.remove(\"active\", \"active-parent\");\n    });\n    if (currentActive) {\n      const activeLink = sidebarLinks.querySelector(`a[href=\"#${currentActive.id}\"]`);\n      if (activeLink) {\n        activeLink.classList.add(\"active\");\n\n        // Highlight parents\n        let parent = activeLink.parentElement;\n        while (parent && parent !== sidebarLinks) {\n          if (parent.tagName === \"LI\") {\n            const parentLink = parent.querySelector(\":scope > a\");\n            if (parentLink) {\n              parentLink.classList.add(\"active-parent\");\n            }\n          }\n          parent = parent.parentElement;\n        }\n\n        // Auto-scroll in TOC if out of view\n        const linkRect = activeLink.getBoundingClientRect();\n        const tocRect = sidebarLinks.getBoundingClientRect();\n        if (linkRect.top < tocRect.top || linkRect.bottom > tocRect.bottom) {\n          activeLink.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\"\n          });\n        }\n      }\n    }\n  };\n  window.addEventListener(\"scroll\", () => {\n    // Keep this if used outside React, otherwise remove\n    console.log(\"Scroll event listener is firing!\"); // <---- ADD THIS LINE\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        handleScroll();\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n\n  // Handle smooth scrolling for sidebar links\n  if (sidebarLinks) {\n    sidebarLinks.querySelectorAll(\"a\").forEach(link => {\n      link.addEventListener(\"click\", e => {\n        e.preventDefault();\n        const targetId = link.getAttribute(\"href\").slice(1);\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          const headerOffset = 80;\n          const elementPosition = targetElement.offsetTop;\n          const offsetPosition = elementPosition - headerOffset;\n          window.scrollTo({\n            top: offsetPosition,\n            behavior: \"smooth\"\n          });\n        }\n      });\n    });\n  }\n\n  // Run initial scroll logic\n  handleScroll();\n}); // Keep this if used outside React, otherwise remove\n\n// ----- Game of Life logic -----\n\n// 1. Random Number Generator\nexport class SeededRandom {\n  // Exported\n  constructor(seed = Date.now()) {\n    this.seed = seed;\n  }\n  next() {\n    this.seed ^= this.seed << 13;\n    this.seed ^= this.seed >> 17;\n    this.seed ^= this.seed << 5;\n    return (this.seed >>> 0) / 0x100000000;\n  }\n}\n\n// 3. Initialize local storage logic (Exported - if needed for external initialization)\nexport function initializeGame(useSeed = false, providedSeed = null) {\n  const seed = providedSeed || Date.now();\n  localStorage.setItem(\"gameOfLifeUseSeed\", useSeed);\n  if (useSeed) {\n    localStorage.setItem(\"gameOfLifeSeed\", seed.toString());\n  }\n  localStorage.removeItem(\"gameOfLifeGrid\");\n  localStorage.removeItem(\"gameOfLifeInitialTimestamp\");\n}\n\n// 4. Get initial timestamp from local storage (Exported - if needed externally)\nexport function getInitialTimestamp() {\n  const stored = localStorage.getItem(\"gameOfLifeInitialTimestamp\");\n  if (!stored) {\n    const timestamp = Date.now();\n    localStorage.setItem(\"gameOfLifeInitialTimestamp\", timestamp.toString());\n    return timestamp;\n  }\n  return parseInt(stored);\n}\n\n// 5. Calculate current generation (Exported - if needed externally)\nexport function calculateCurrentGeneration(initialTimestamp) {\n  const timeElapsed = Date.now() - initialTimestamp;\n  // ~60 generations per second\n  return Math.floor(timeElapsed / (1000 / 60));\n}\n\n// 6. Building the grid (Exported)\nexport function buildGrid(cols, rows, useSeed, seed, SeededRandomClass) {\n  const storedGrid = localStorage.getItem(\"gameOfLifeGrid\");\n  const initialTimestamp = getInitialTimestamp();\n  if (!storedGrid) {\n    let rng;\n    if (useSeed) {\n      rng = new SeededRandomClass(seed); // Use passed SeededRandomClass\n    } else {\n      rng = Math; // Use Math.random if not seeded.\n    }\n\n    // create new grid\n    const newGrid = new Array(cols).fill(null).map(() => new Array(rows).fill(null).map(() => useSeed ? Math.floor(rng.next() * 2) : Math.floor(rng.random() * 2) // Use rng.random() when Math is used.\n    ));\n\n    // Add gliders - keep as is or parameterize glider pattern if needed\n    addGlider(newGrid, 1, 1, cols, rows);\n    addGlider(newGrid, 1, 10, cols, rows);\n    addGlider(newGrid, 1, 20, cols, rows);\n    addGlider(newGrid, 1, 30, cols, rows);\n    localStorage.setItem(\"gameOfLifeGrid\", JSON.stringify(newGrid));\n    return newGrid;\n  }\n\n  // If stored grid exists, forward-simulate\n  let grid = JSON.parse(storedGrid);\n  const targetGeneration = calculateCurrentGeneration(initialTimestamp);\n  for (let i = 0; i < targetGeneration; i++) {\n    grid = nextGen(grid, cols, rows); // Pass cols and rows\n  }\n  return grid;\n}\n\n// 7. Drawing the grid (Exported)\nexport function drawGrid(ctx, grid, resolution, canvasWidth, canvasHeight) {\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Use parameters for width/height\n  for (let col = 0; col < grid.length; col++) {\n    for (let row = 0; row < grid[col].length; row++) {\n      const cell = grid[col][row];\n      ctx.beginPath();\n      ctx.rect(col * resolution, row * resolution, resolution - 1, resolution - 1);\n      ctx.fillStyle = cell ? \"#4a9eff\" : \"transparent\";\n      ctx.fill();\n    }\n  }\n}\n\n// 8. Counting Neighbors (Exported)\nexport function countNeighbors(grid, x, y, cols, rows) {\n  let sum = 0;\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      let col = x + i;\n      let row = y + j;\n\n      // wrap edges\n      if (col < 0) col = cols - 1;\n      if (row < 0) row = rows - 1;\n      if (col < cols && row < rows) {\n        sum += grid[col][row];\n      }\n    }\n  }\n  sum -= grid[x][y];\n  return sum;\n}\n\n// 9. Next Generation Calculation (Exported)\nexport function nextGen(grid, cols, rows) {\n  const nextGrid = grid.map(arr => [...arr]);\n  for (let col = 0; col < grid.length; col++) {\n    for (let row = 0; row < grid[col].length; row++) {\n      const cell = grid[col][row];\n      const neighbors = countNeighbors(grid, col, row, cols, rows); // Pass cols and rows\n\n      if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n        nextGrid[col][row] = 0;\n      } else if (cell === 0 && neighbors === 3) {\n        nextGrid[col][row] = 1;\n      }\n    }\n  }\n  return nextGrid;\n}\n\n// 10. Add Glider Pattern (Exported - if you want to control glider addition from React)\nexport function addGlider(grid, x, y, cols, rows) {\n  const glider = [[0, 1, 0], [0, 0, 1], [1, 1, 1]];\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      let placeX = x + i;\n      let placeY = y + j;\n      if (placeX < 0) placeX = cols - 1;\n      if (placeY < 0) placeY = rows - 1;\n      if (placeX < cols && placeY < rows) {\n        grid[placeX][placeY] = glider[i][j];\n      }\n    }\n  }\n  return grid;\n}\n\n// ======================\n// Run Game of Life (encapsulated function)\n// ======================\nexport function runGameOfLife(canvasId) {\n  const canvas = document.getElementById(canvasId);\n  if (!canvas) {\n    console.error(`Canvas element with id \"${canvasId}\" not found.`);\n    return; // Exit if canvas is not found\n  }\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    const resolution = 10; // You can make resolution an argument if you want to configure it from React\n    const cols = canvas.width / resolution;\n    const rows = canvas.height / resolution;\n\n    // Initialize Game of Life grid using imported functions from functionality.js\n    let grid = buildGrid(cols, rows, false, null, SeededRandom); // Random initialization\n    initializeGame(false); // Initialize local storage\n\n    function update() {\n      grid = nextGen(grid, cols, rows); // Calculate next generation using imported function\n      drawGrid(ctx, grid, resolution, canvas.width, canvas.height); // Draw grid using imported function\n      requestAnimationFrame(update); // Animation loop\n    }\n    update(); // Start the animation loop\n  } else {\n    console.error(\"Canvas context not supported!\");\n  }\n}\n\n// ============================== LIBRARY OPS ============================== //\n//                                    xx                                     //\n// ============================== LIBRARY OPS ============================== //\n\nwindow.hashString = str => {\n  // Keep hashString\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash);\n};\n\n/*\n  Purpose: Returns a color for a given tag based on its type or a hash of the\n  tag name.\n  Behavior: Assigns specific colors for predefined tags (e.g., \"YT\", \"Arxiv\")\n  and generates a unique color for other tags using HSL values derived from the\n  tag's hash.\n*/\nexport const getTagColor = function (tag) {\n  // Changed to export const\n  switch (tag) {\n    case \"YT\":\n      return \"#FF0000\";\n    case \"Arxiv\":\n      return \"#A51C30\";\n    case \"Site\":\n      return \"#F5F5DC\";\n    default:\n      const hash = hashString(tag);\n      const hue = hash % 360;\n      const saturation = 40 + hash % 15;\n      const lightness = 30 + hash % 10;\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  }\n};\nexport const getTextColor = function (tag) {\n  // Changed to export const\n  if (tag === \"Site\") {\n    return \"#000000\";\n  }\n  return \"#FFFFFF\";\n};\n\n/*\n  Purpose: Limits how often a function is called during rapid events\n  (e.g., typing in a search box).\n  Behavior: Delays the execution of the provided function until a specified time\n  (wait) has passed since the last call.\n*/\nexport const debounce = function (func, wait) {\n  // Changed to export const\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n};\nexport const formatDate = function (dateString) {\n  // Changed to export const\n  if (dateString === \"Not specified\") return dateString;\n  const parsed = new Date(dateString);\n  if (isNaN(parsed)) return dateString;\n  return parsed.toLocaleString(\"en-US\", {\n    month: \"short\",\n    year: \"numeric\"\n  });\n};","map":{"version":3,"names":["toggleCollapse","button","container","closest","codeContainer","querySelector","classList","toggle","buttonText","contains","textContent","document","addEventListener","buttonContainers","querySelectorAll","forEach","copyButton","add","remove","toggleTheme","html","documentElement","currentTheme","getAttribute","newTheme","setAttribute","localStorage","setItem","savedTheme","getItem","toggleTOC","toc","getElementById","arrow","timeoutId","PROXIMITY_THRESHOLD","handleMouseMove","event","buttonId","targetButton","rect","getBoundingClientRect","buttonCenterX","left","width","buttonCenterY","top","height","distance","Math","sqrt","pow","clientX","clientY","clearTimeout","setTimeout","matches","copyCode","preventDefault","currentTarget","codeEl","navigator","clipboard","writeText","innerText","then","catch","err","console","error","copyButtons","window","onscroll","scrollButton","body","scrollTop","innerHeight","style","opacity","scrollToTop","scrollTo","behavior","copyCitation","citationContainer","citationEl","citationCopyButtons","sidebarToc","sidebarLinks","mainToc","ticking","scrollBehavior","handleScroll","mainTocRect","viewportHeight","headerHeight","offsetHeight","headerOffset","mainTocVisible","bottom","updateActiveTocLink","headings","Array","from","filter","heading","id","scrollPosition","scrollY","currentActive","offsetTop","allLinks","link","activeLink","parent","parentElement","tagName","parentLink","linkRect","tocRect","scrollIntoView","block","log","requestAnimationFrame","e","targetId","slice","targetElement","elementPosition","offsetPosition","SeededRandom","constructor","seed","Date","now","next","initializeGame","useSeed","providedSeed","toString","removeItem","getInitialTimestamp","stored","timestamp","parseInt","calculateCurrentGeneration","initialTimestamp","timeElapsed","floor","buildGrid","cols","rows","SeededRandomClass","storedGrid","rng","newGrid","fill","map","random","addGlider","JSON","stringify","grid","parse","targetGeneration","i","nextGen","drawGrid","ctx","resolution","canvasWidth","canvasHeight","clearRect","col","length","row","cell","beginPath","fillStyle","countNeighbors","x","y","sum","j","nextGrid","arr","neighbors","glider","placeX","placeY","runGameOfLife","canvasId","canvas","getContext","update","hashString","str","hash","char","charCodeAt","abs","getTagColor","tag","hue","saturation","lightness","getTextColor","debounce","func","wait","timeout","args","apply","formatDate","dateString","parsed","isNaN","toLocaleString","month","year"],"sources":["/Users/benbradley/Desktop/CS_Classwork/bbradz.github.io/src/functionality.js"],"sourcesContent":["// functionality.js\n// ============================== REGULAR OPS ============================== //\n//                                    xx                                     //\n// ============================== REGULAR OPS ============================== //\n\n// Update the toggleCollapse function\nexport function toggleCollapse(button) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const container = button.closest(\".collapsible-code-container\");\n  if (!container) return;\n\n  const codeContainer = container.querySelector(\".code-container\");\n  if (!codeContainer) return;\n\n  // Toggle the visibility of the code container\n  codeContainer.classList.toggle(\"visible\");\n\n  // Toggle the expanded state of the button\n  button.classList.toggle(\"expanded\");\n\n  // Update the button text based on the state\n  const buttonText = button.querySelector(\"span\");\n  if (codeContainer.classList.contains(\"visible\")) {\n    buttonText.textContent = \"hide code\";\n  } else {\n    buttonText.textContent = \"show code\";\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const buttonContainers = document.querySelectorAll(\".button-container\");\n  buttonContainers.forEach((container) => {\n    container.addEventListener(\"mouseenter\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.add(\"visible\");\n      }\n    });\n\n    container.addEventListener(\"mouseleave\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  });\n});\n\n// ======================\n// Theme toggle\n// ======================\nexport function toggleTheme() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const html = document.documentElement;\n  const currentTheme = html.getAttribute(\"data-theme\");\n  const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  html.setAttribute(\"data-theme\", newTheme);\n\n  // Save the selected theme in localStorage\n  localStorage.setItem(\"theme\", newTheme);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const savedTheme = localStorage.getItem(\"theme\") || \"dark\"; // Default to dark\n  document.documentElement.setAttribute(\"data-theme\", savedTheme);\n});\n\n// ======================\n// Table of Contents toggle\n// ======================\nexport function toggleTOC() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const toc = document.getElementById(\"toc\");\n  if (!toc) return;\n  toc.classList.toggle(\"expanded\");\n\n  const arrow = document.querySelector(\".toc-header span:first-child\");\n  if (arrow) {\n    arrow.textContent = toc.classList.contains(\"expanded\") ? \"▼\" : \"▶\";\n  }\n}\n\n// ======================\n// Copy code functionality\n// ======================\nlet timeoutId;\nconst PROXIMITY_THRESHOLD = 150; // pixels\n\nexport function handleMouseMove(event, buttonId = null) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  const targetButton = buttonId\n    ? document.getElementById(buttonId)\n    : document.querySelector(\".copy-button\");\n  if (!targetButton) return;\n\n  const rect = targetButton.getBoundingClientRect();\n  const buttonCenterX = rect.left + rect.width / 2;\n  const buttonCenterY = rect.top + rect.height / 2;\n\n  const distance = Math.sqrt(\n    Math.pow(event.clientX - buttonCenterX, 2) +\n      Math.pow(event.clientY - buttonCenterY, 2)\n  );\n\n  clearTimeout(timeoutId);\n\n  if (distance <= PROXIMITY_THRESHOLD) {\n    targetButton.classList.add(\"visible\");\n    timeoutId = setTimeout(() => {\n      if (!targetButton.matches(\":hover\")) {\n        targetButton.classList.remove(\"visible\");\n      }\n    }, 1000);\n  } else {\n    targetButton.classList.remove(\"visible\");\n  }\n}\n\n/*\n  Purpose: Copies the content of a code block to the clipboard.\n  Behavior: Finds the closest code block to the clicked button, copies its text,\n  and temporarily adds a copied class to the button for visual feedback.\n*/\nexport function copyCode(event) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  event.preventDefault();\n  const button = event.currentTarget;\n  const codeContainer = button.closest(\".collapsible-code-container\");\n  const codeEl = codeContainer ? codeContainer.querySelector(\"code\") : null;\n\n  if (!codeEl) return;\n\n  navigator.clipboard\n    .writeText(codeEl.innerText || \"\")\n    .then(() => {\n      button.classList.add(\"copied\");\n      setTimeout(() => {\n        button.classList.remove(\"copied\");\n      }, 500);\n    })\n    .catch((err) => {\n      console.error(\"Failed to copy code:\", err);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCode);\n  });\n});\n\n// ======================\n// Scroll to top\n// ======================\nwindow.onscroll = function () {\n  // Keep this if used outside React, otherwise remove\n  const scrollButton = document.getElementById(\"scrollToTop\");\n  if (!scrollButton) return;\n\n  if (\n    document.body.scrollTop > window.innerHeight ||\n    document.documentElement.scrollTop > window.innerHeight\n  ) {\n    scrollButton.style.opacity = \"1\";\n  } else {\n    scrollButton.style.opacity = \"0\";\n  }\n};\n\nexport function scrollToTop() {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\",\n  });\n}\n\n// ======================\n// Copy citation\n// ======================\nexport function copyCitation(event) {\n  // Keep export if you want to use this elsewhere, otherwise remove export\n  event.preventDefault();\n  const button = event.currentTarget;\n  const citationContainer = button.closest(\".citation-container\");\n  const citationEl = citationContainer\n    ? citationContainer.querySelector(\"code\")\n    : null;\n\n  if (!citationEl) return;\n\n  navigator.clipboard\n    .writeText(citationEl.innerText || \"\")\n    .then(() => {\n      button.classList.add(\"copied\");\n      setTimeout(() => {\n        button.classList.remove(\"copied\");\n      }, 500);\n    })\n    .catch((err) => {\n      console.error(\"Failed to copy citation:\", err);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCode);\n  });\n\n  const citationCopyButtons = document.querySelectorAll(\n    \"#citation-copy-button\"\n  );\n  citationCopyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCitation);\n  });\n});\n\n// ======================\n// DOMContentLoaded\n// ======================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Keep this if used outside React, otherwise remove\n  // ----- Safely bind events on .code-container and .copy-button -----\n  const codeContainer = document.querySelector(\".code-container\");\n  const copyButton = document.querySelector(\".copy-button\");\n\n  if (codeContainer) {\n    codeContainer.addEventListener(\"mouseleave\", () => {\n      clearTimeout(timeoutId);\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  }\n\n  if (copyButton) {\n    copyButton.addEventListener(\"mouseenter\", () => {\n      clearTimeout(timeoutId);\n      copyButton.classList.add(\"visible\");\n    });\n\n    copyButton.addEventListener(\"mouseleave\", () => {\n      if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          copyButton.classList.remove(\"visible\");\n        }, 1000);\n      }\n    });\n  }\n\n  // ----- Sidebar TOC + on-scroll logic -----\n  const sidebarToc = document.getElementById(\"sidebar-toc\");\n  const sidebarLinks = document.querySelector(\".sidebar-toc-links\");\n  const mainToc = document.querySelector(\".toc-container\");\n  let ticking = false;\n\n  if (sidebarLinks) {\n    sidebarLinks.style.scrollBehavior = \"smooth\";\n  }\n\n  // FUNCTIONALITY.JS (modified handleScroll function)\n  const handleScroll = () => {\n    if (!mainToc || !sidebarToc) {\n      return;\n    }\n\n    const mainTocRect = mainToc.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const headerHeight = document.querySelector(\".header\").offsetHeight; // Dynamically get header height\n    const headerOffset = headerHeight + 20; // Add a little extra offset if needed\n    const mainTocVisible = mainTocRect.bottom > headerOffset; // Simplified condition - sidebar shows when main TOC bottom is above the offset\n\n    if (mainTocVisible) {\n      sidebarToc.classList.remove(\"visible\");\n    } else {\n      sidebarToc.classList.add(\"visible\");\n      updateActiveTocLink();\n    }\n  };\n\n  const updateActiveTocLink = () => {\n    if (!sidebarLinks) return;\n\n    // Look for headings with IDs\n    const headings = Array.from(\n      document.querySelectorAll(\"h1[id], h2[id], h3[id], h4[id]\")\n    ).filter((heading) => heading.id);\n\n    const scrollPosition = window.scrollY;\n    const headerOffset = 100;\n\n    let currentActive = null;\n    for (const heading of headings) {\n      if (scrollPosition >= heading.offsetTop - headerOffset) {\n        currentActive = heading;\n      } else {\n        break;\n      }\n    }\n\n    const allLinks = sidebarLinks.querySelectorAll(\"a\");\n    allLinks.forEach((link) => {\n      link.classList.remove(\"active\", \"active-parent\");\n    });\n\n    if (currentActive) {\n      const activeLink = sidebarLinks.querySelector(\n        `a[href=\"#${currentActive.id}\"]`\n      );\n\n      if (activeLink) {\n        activeLink.classList.add(\"active\");\n\n        // Highlight parents\n        let parent = activeLink.parentElement;\n        while (parent && parent !== sidebarLinks) {\n          if (parent.tagName === \"LI\") {\n            const parentLink = parent.querySelector(\":scope > a\");\n            if (parentLink) {\n              parentLink.classList.add(\"active-parent\");\n            }\n          }\n          parent = parent.parentElement;\n        }\n\n        // Auto-scroll in TOC if out of view\n        const linkRect = activeLink.getBoundingClientRect();\n        const tocRect = sidebarLinks.getBoundingClientRect();\n        if (linkRect.top < tocRect.top || linkRect.bottom > tocRect.bottom) {\n          activeLink.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n          });\n        }\n      }\n    }\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    // Keep this if used outside React, otherwise remove\n    console.log(\"Scroll event listener is firing!\"); // <---- ADD THIS LINE\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        handleScroll();\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n\n  // Handle smooth scrolling for sidebar links\n  if (sidebarLinks) {\n    sidebarLinks.querySelectorAll(\"a\").forEach((link) => {\n      link.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const targetId = link.getAttribute(\"href\").slice(1);\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          const headerOffset = 80;\n          const elementPosition = targetElement.offsetTop;\n          const offsetPosition = elementPosition - headerOffset;\n\n          window.scrollTo({\n            top: offsetPosition,\n            behavior: \"smooth\",\n          });\n        }\n      });\n    });\n  }\n\n  // Run initial scroll logic\n  handleScroll();\n}); // Keep this if used outside React, otherwise remove\n\n// ----- Game of Life logic -----\n\n// 1. Random Number Generator\nexport class SeededRandom {\n  // Exported\n  constructor(seed = Date.now()) {\n    this.seed = seed;\n  }\n  next() {\n    this.seed ^= this.seed << 13;\n    this.seed ^= this.seed >> 17;\n    this.seed ^= this.seed << 5;\n    return (this.seed >>> 0) / 0x100000000;\n  }\n}\n\n// 3. Initialize local storage logic (Exported - if needed for external initialization)\nexport function initializeGame(useSeed = false, providedSeed = null) {\n  const seed = providedSeed || Date.now();\n  localStorage.setItem(\"gameOfLifeUseSeed\", useSeed);\n  if (useSeed) {\n    localStorage.setItem(\"gameOfLifeSeed\", seed.toString());\n  }\n  localStorage.removeItem(\"gameOfLifeGrid\");\n  localStorage.removeItem(\"gameOfLifeInitialTimestamp\");\n}\n\n// 4. Get initial timestamp from local storage (Exported - if needed externally)\nexport function getInitialTimestamp() {\n  const stored = localStorage.getItem(\"gameOfLifeInitialTimestamp\");\n  if (!stored) {\n    const timestamp = Date.now();\n    localStorage.setItem(\"gameOfLifeInitialTimestamp\", timestamp.toString());\n    return timestamp;\n  }\n  return parseInt(stored);\n}\n\n// 5. Calculate current generation (Exported - if needed externally)\nexport function calculateCurrentGeneration(initialTimestamp) {\n  const timeElapsed = Date.now() - initialTimestamp;\n  // ~60 generations per second\n  return Math.floor(timeElapsed / (1000 / 60));\n}\n\n// 6. Building the grid (Exported)\nexport function buildGrid(cols, rows, useSeed, seed, SeededRandomClass) {\n  const storedGrid = localStorage.getItem(\"gameOfLifeGrid\");\n  const initialTimestamp = getInitialTimestamp();\n\n  if (!storedGrid) {\n    let rng;\n\n    if (useSeed) {\n      rng = new SeededRandomClass(seed); // Use passed SeededRandomClass\n    } else {\n      rng = Math; // Use Math.random if not seeded.\n    }\n\n    // create new grid\n    const newGrid = new Array(cols).fill(null).map(() =>\n      new Array(rows).fill(null).map(\n        () =>\n          useSeed ? Math.floor(rng.next() * 2) : Math.floor(rng.random() * 2) // Use rng.random() when Math is used.\n      )\n    );\n\n    // Add gliders - keep as is or parameterize glider pattern if needed\n    addGlider(newGrid, 1, 1, cols, rows);\n    addGlider(newGrid, 1, 10, cols, rows);\n    addGlider(newGrid, 1, 20, cols, rows);\n    addGlider(newGrid, 1, 30, cols, rows);\n\n    localStorage.setItem(\"gameOfLifeGrid\", JSON.stringify(newGrid));\n    return newGrid;\n  }\n\n  // If stored grid exists, forward-simulate\n  let grid = JSON.parse(storedGrid);\n  const targetGeneration = calculateCurrentGeneration(initialTimestamp);\n\n  for (let i = 0; i < targetGeneration; i++) {\n    grid = nextGen(grid, cols, rows); // Pass cols and rows\n  }\n\n  return grid;\n}\n\n// 7. Drawing the grid (Exported)\nexport function drawGrid(ctx, grid, resolution, canvasWidth, canvasHeight) {\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Use parameters for width/height\n  for (let col = 0; col < grid.length; col++) {\n    for (let row = 0; row < grid[col].length; row++) {\n      const cell = grid[col][row];\n\n      ctx.beginPath();\n      ctx.rect(\n        col * resolution,\n        row * resolution,\n        resolution - 1,\n        resolution - 1\n      );\n      ctx.fillStyle = cell ? \"#4a9eff\" : \"transparent\";\n      ctx.fill();\n    }\n  }\n}\n\n// 8. Counting Neighbors (Exported)\nexport function countNeighbors(grid, x, y, cols, rows) {\n  let sum = 0;\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      let col = x + i;\n      let row = y + j;\n\n      // wrap edges\n      if (col < 0) col = cols - 1;\n      if (row < 0) row = rows - 1;\n\n      if (col < cols && row < rows) {\n        sum += grid[col][row];\n      }\n    }\n  }\n  sum -= grid[x][y];\n  return sum;\n}\n\n// 9. Next Generation Calculation (Exported)\nexport function nextGen(grid, cols, rows) {\n  const nextGrid = grid.map((arr) => [...arr]);\n\n  for (let col = 0; col < grid.length; col++) {\n    for (let row = 0; row < grid[col].length; row++) {\n      const cell = grid[col][row];\n      const neighbors = countNeighbors(grid, col, row, cols, rows); // Pass cols and rows\n\n      if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n        nextGrid[col][row] = 0;\n      } else if (cell === 0 && neighbors === 3) {\n        nextGrid[col][row] = 1;\n      }\n    }\n  }\n  return nextGrid;\n}\n\n// 10. Add Glider Pattern (Exported - if you want to control glider addition from React)\nexport function addGlider(grid, x, y, cols, rows) {\n  const glider = [\n    [0, 1, 0],\n    [0, 0, 1],\n    [1, 1, 1],\n  ];\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      let placeX = x + i;\n      let placeY = y + j;\n\n      if (placeX < 0) placeX = cols - 1;\n      if (placeY < 0) placeY = rows - 1;\n\n      if (placeX < cols && placeY < rows) {\n        grid[placeX][placeY] = glider[i][j];\n      }\n    }\n  }\n  return grid;\n}\n\n// ======================\n// Run Game of Life (encapsulated function)\n// ======================\nexport function runGameOfLife(canvasId) {\n  const canvas = document.getElementById(canvasId);\n  if (!canvas) {\n    console.error(`Canvas element with id \"${canvasId}\" not found.`);\n    return; // Exit if canvas is not found\n  }\n  const ctx = canvas.getContext(\"2d\");\n\n  if (ctx) {\n    const resolution = 10; // You can make resolution an argument if you want to configure it from React\n    const cols = canvas.width / resolution;\n    const rows = canvas.height / resolution;\n\n    // Initialize Game of Life grid using imported functions from functionality.js\n    let grid = buildGrid(cols, rows, false, null, SeededRandom); // Random initialization\n    initializeGame(false); // Initialize local storage\n\n    function update() {\n      grid = nextGen(grid, cols, rows); // Calculate next generation using imported function\n      drawGrid(ctx, grid, resolution, canvas.width, canvas.height); // Draw grid using imported function\n      requestAnimationFrame(update); // Animation loop\n    }\n\n    update(); // Start the animation loop\n  } else {\n    console.error(\"Canvas context not supported!\");\n  }\n}\n\n// ============================== LIBRARY OPS ============================== //\n//                                    xx                                     //\n// ============================== LIBRARY OPS ============================== //\n\nwindow.hashString = (str) => {\n  // Keep hashString\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash);\n};\n\n/*\n  Purpose: Returns a color for a given tag based on its type or a hash of the\n  tag name.\n  Behavior: Assigns specific colors for predefined tags (e.g., \"YT\", \"Arxiv\")\n  and generates a unique color for other tags using HSL values derived from the\n  tag's hash.\n*/\nexport const getTagColor = function (tag) {\n  // Changed to export const\n  switch (tag) {\n    case \"YT\":\n      return \"#FF0000\";\n    case \"Arxiv\":\n      return \"#A51C30\";\n    case \"Site\":\n      return \"#F5F5DC\";\n    default:\n      const hash = hashString(tag);\n      const hue = hash % 360;\n      const saturation = 40 + (hash % 15);\n      const lightness = 30 + (hash % 10);\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  }\n};\n\nexport const getTextColor = function (tag) {\n  // Changed to export const\n  if (tag === \"Site\") {\n    return \"#000000\";\n  }\n  return \"#FFFFFF\";\n};\n\n/*\n  Purpose: Limits how often a function is called during rapid events\n  (e.g., typing in a search box).\n  Behavior: Delays the execution of the provided function until a specified time\n  (wait) has passed since the last call.\n*/\nexport const debounce = function (func, wait) {\n  // Changed to export const\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n};\n\nexport const formatDate = function (dateString) {\n  // Changed to export const\n  if (dateString === \"Not specified\") return dateString;\n  const parsed = new Date(dateString);\n  if (isNaN(parsed)) return dateString;\n  return parsed.toLocaleString(\"en-US\", {\n    month: \"short\",\n    year: \"numeric\",\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}