{"ast":null,"code":"// library.js - DEBUGGING VERSION - PLEASE RUN THIS AND CHECK CONSOLE\nimport React,{useState,useRef,useEffect,useCallback,useMemo}from\"react\";import{Link}from\"react-router-dom\";import*as d3 from\"d3\";import{runGameOfLife,getTagColor,getTextColor,formatDate}from\"../functionality.js\";import sourcesRawData from\"../input.json\";import similaritiesRawData from\"../document_similarities.json\";import\"../css/library.css\";// ===================== Tag Component =====================\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Tag=/*#__PURE__*/React.memo(_ref=>{let{tag,onTagFilter}=_ref;return/*#__PURE__*/_jsx(\"span\",{\"data-type\":tag,onClick:()=>onTagFilter(tag),style:{backgroundColor:getTagColor(tag),color:getTextColor(tag),cursor:\"pointer\",marginRight:\"4px\",padding:\"2px 6px\",borderRadius:\"3px\",fontSize:\"0.85em\"},children:tag},tag);});Tag.displayName=\"Tag\";// ===================== ReadingListItem Component =====================\nconst ReadingListItem=/*#__PURE__*/React.memo(_ref2=>{let{item,onTagFilter}=_ref2;return/*#__PURE__*/_jsxs(\"li\",{\"data-release\":item.releaseDate,\"data-time\":item.readTime,\"data-read\":String(item.isRead),children:[item.isRead?/*#__PURE__*/_jsx(\"span\",{className:\"read-indicator\",children:\"\\u2713\"}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"item-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-title\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\\"\",item.title,\"\\\" by \",item.author]}),/*#__PURE__*/_jsxs(\"span\",{className:\"meta\",children:[item.isRead?\"Read: \":null,formatDate(item.releaseDate),\" |\",/*#__PURE__*/_jsxs(\"span\",{className:\"no-break\",children:[\"Est. Time \",item.readTime,\" hours\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tags\",children:item.tags.map(tag=>/*#__PURE__*/_jsx(Tag,{tag:tag,onTagFilter:onTagFilter},tag))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:item.description}),item.downloadLink?/*#__PURE__*/_jsx(\"a\",{className:\"download-link\",href:item.downloadLink,download:true,children:\"Source\"}):null]});});ReadingListItem.displayName=\"ReadingListItem\";// ===================== Library Component =====================\nfunction Library(){console.log(\"Library Component RENDER\");// --- State Declarations ---\nconst[theme,setTheme]=useState(\"dark\");const scrollToTopButtonRef=useRef(null);const[readingListData,setReadingListData]=useState([]);const[graphData,setGraphData]=useState([]);// Keep graphData state\nconst[displayedReadingListData,setDisplayedReadingListData]=useState([]);// New state for list display\nconst originalSourcesRawData=useRef(null);// Ref to store initial data\nconst[activeTagFilters,setActiveTagFilters]=useState([]);const[readFilterState,setReadFilterState]=useState(0);const toggleTheme=()=>{setTheme(current=>current===\"dark\"?\"light\":\"dark\");};const scrollToTop=()=>{window.scrollTo({top:0,behavior:\"smooth\"});};useEffect(()=>{document.body.setAttribute(\"data-theme\",theme);},[theme]);useEffect(()=>{runGameOfLife(\"gameOfLife\");},[]);// --- 1st useEffect: Load raw data only ---\nuseEffect(()=>{try{const initialReadingListData=sourcesRawData.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index}));originalSourcesRawData.current=[...initialReadingListData];console.log(\"1st useEffect - sourcesRawData loaded:\",sourcesRawData);}catch(error){console.error(\"Library useEffect (data load) - Error importing reading list data:\",error);}},[]);// Empty dependency array - runs only once on mount\n// --- 2nd useEffect: Apply initial filters and set states based on loaded data ---\nuseEffect(()=>{if(originalSourcesRawData.current){// Ensure data is loaded\nconsole.log(\"2nd useEffect - originalSourcesRawData.current is now available, applying initial filters.\");let filteredData=applyTagFilters(originalSourcesRawData.current);// Pass data explicitly\nfilteredData=filterByType(\"all\",filteredData);// Ensure \"all\" types are shown initially, pass data\nfilteredData=filterReadStatus(undefined,filteredData);// Ensure all read statuses are shown initially, pass data\nconsole.log(\"2nd useEffect - finalFilteredData after initial filters:\",filteredData);setReadingListData(filteredData);// Set readingListData with final filtered data\nsetGraphData(filteredData);// *Now* set graphData using the *same* final filtered data\nsetDisplayedReadingListData([...filteredData]);// Initialize displayed list as a copy\nconsole.log(\"2nd useEffect - readingListData, graphData, and displayedReadingListData states updated.\");}else{console.log(\"2nd useEffect - originalSourcesRawData.current is not yet available.\");}},[originalSourcesRawData]);// Dependency on originalSourcesRawData - runs after data loads\nconst debounceFunc=(func,wait)=>{let timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeout);timeout=setTimeout(()=>func.apply(this,args),wait);};};const performSearch=(query,data)=>{if(!query)return data;return data.filter(item=>item.title.toLowerCase().includes(query.toLowerCase()));};const handleSearchInput=e=>{const query=e.target.value;const filteredData=performSearch(query,originalSourcesRawData.current.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index})));console.log(\"handleSearchInput - Before setReadingListData, readingListData:\",readingListData);console.log(\"handleSearchInput - Before setGraphData, graphData:\",graphData);console.log(\"graphData state before setGraphData in handleSearchInput:\",graphData);// DEBUG LOG\nsetReadingListData(filteredData);setGraphData(filteredData);// Update graph data on search\nsetDisplayedReadingListData([...filteredData]);// Update displayed list as a copy\nconsole.log(\"graphData state after setGraphData in handleSearchInput:\",graphData);// DEBUG LOG\nconsole.log(\"handleSearchInput - After setReadingListData, readingListData:\",readingListData);console.log(\"handleSearchInput - After setGraphData, graphData:\",graphData);};const sortReadingList=(sortBy,sortOrder)=>{let sortedData=[...displayedReadingListData];// Sort based on displayed list\nsortedData.sort((a,b)=>{let comparison=0;if(sortBy===\"release\"){const dateA=new Date(a.releaseDate);const dateB=new Date(b.releaseDate);comparison=dateA-dateB;}else if(sortBy===\"time\"){comparison=a.readTime-b.readTime;}return sortOrder===\"asc\"?comparison:comparison*-1;});console.log(\"sortReadingList - Before setDisplayedReadingListData, displayedReadingListData:\",displayedReadingListData);console.log(\"graphData state in sortReadingList:\",graphData);// DEBUG LOG\nsetDisplayedReadingListData(sortedData);// Update ONLY displayed list\nconsole.log(\"sortReadingList - After setDisplayedReadingListData, displayedReadingListData:\",sortedData);// DO NOT UPDATE graphData or readingListData\n};const filterByType=(filterType,currentData)=>{// Modified: Accepts currentData\nconst dataToFilter=currentData||originalSourcesRawData.current;// Use currentData or original\nlet filteredData;if(filterType===\"all\"){filteredData=dataToFilter.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index}));}else{filteredData=dataToFilter.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index})).filter(item=>item.tags.includes(filterType));}console.log(\"filterByType - Before setReadingListData, readingListData:\",readingListData);console.log(\"filterByType - Before setGraphData, graphData:\",graphData);console.log(\"graphData state before setGraphData in filterByType:\",graphData);// DEBUG LOG\nsetReadingListData(filteredData);setGraphData(filteredData);// Update graph data on type filter\nsetDisplayedReadingListData([...filteredData]);// Update displayed list as a copy\nconsole.log(\"graphData state after setGraphData in filterByType:\",graphData);// DEBUG LOG\nconsole.log(\"filterByType - After setReadingListData, readingListData:\",filteredData);console.log(\"filterByType - After setGraphData, graphData:\",graphData);return filteredData;// Modified: Return filteredData\n};const filterReadStatus=(onlyUnread,currentData)=>{// Modified: Accepts currentData\nconst dataToFilter=currentData||originalSourcesRawData.current;// Use currentData or original\nlet filteredData;if(onlyUnread===true){filteredData=dataToFilter.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index})).filter(item=>!item.isRead);}else if(onlyUnread===false){filteredData=dataToFilter.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index})).filter(item=>item.isRead);}else{filteredData=dataToFilter.map((item,index)=>({...item,embedding:item.embedding||[],originalIndex:index}));}console.log(\"filterReadStatus - Before setReadingListData, readingListData:\",readingListData);console.log(\"filterReadStatus - Before setGraphData, graphData:\",graphData);console.log(\"graphData state before setGraphData in filterReadStatus:\",graphData);// DEBUG LOG\nsetReadingListData(filteredData);setGraphData(filteredData);// Update graph data on read status filter\nsetDisplayedReadingListData([...filteredData]);// Update displayed list as a copy\nconsole.log(\"graphData state after setGraphData in filterReadStatus:\",graphData);// DEBUG LOG\nconsole.log(\"filterReadStatus - After setReadingListData, readingListData:\",filteredData);console.log(\"filterReadStatus - After setGraphData, graphData:\",graphData);return filteredData;// Modified: Return filteredData\n};const handleTagFilter=tag=>{let newActiveTagFilters=[...activeTagFilters];if(newActiveTagFilters.includes(tag)){newActiveTagFilters=newActiveTagFilters.filter(activeTag=>activeTag!==tag);}else{newActiveTagFilters=[...newActiveTagFilters,tag];}setActiveTagFilters(newActiveTagFilters);};useEffect(()=>{if(originalSourcesRawData.current){// Ensure data is loaded before applying tag filters\napplyTagFilters(originalSourcesRawData.current);}},[activeTagFilters,originalSourcesRawData]);// Added originalSourcesRawData dependency\nconst applyTagFilters=()=>{// Modified: No arguments needed - always uses original data\nconst dataToFilter=originalSourcesRawData.current;// Always filter against original data\nif(!dataToFilter)return[];// Handle no data case\nlet filteredData=dataToFilter.map((item,index)=>({// Filter original data\n...item,embedding:item.embedding||[],originalIndex:index}));if(activeTagFilters.length>0){filteredData=filteredData.filter(item=>{return activeTagFilters.every(filterTag=>item.tags.includes(filterTag));});}console.log(\"applyTagFilters - Before setReadingListData, readingListData:\",readingListData);console.log(\"applyTagFilters - Before setGraphData, graphData:\",graphData);console.log(\"graphData state before setGraphData in applyTagFilters:\",graphData);// DEBUG LOG\nsetReadingListData(filteredData);setGraphData(filteredData);// Update graph data on tag filter change\nsetDisplayedReadingListData([...filteredData]);// Update displayed list as a copy\nconsole.log(\"graphData state after setGraphData in applyTagFilters:\",graphData);// DEBUG LOG\nconsole.log(\"applyTagFilters - After setReadingListData, readingListData:\",filteredData);console.log(\"applyTagFilters - After setGraphData, graphData:\",graphData);return filteredData;};const toggleReadFilter=button=>{setReadFilterState(prevState=>(prevState+1)%3);};useEffect(()=>{if(originalSourcesRawData.current){// Ensure data is loaded before applying read filter\nlet filteredData=applyTagFilters(originalSourcesRawData.current);// Start with tag-filtered data\nif(readFilterState===1){filteredData=filterReadStatus(false,filteredData);// Pass tag-filtered data\n}else if(readFilterState===2){filteredData=filterReadStatus(true,filteredData);// Pass tag-filtered data\n}else{filteredData=filterByType(\"all\",filteredData);// Get data from filterByType, pass tag-filtered data\n// filteredData = applyTagFilters(filteredData); // Then refine by tags, get data - redundant, remove this line - already tag filtered\n}console.log(\"useEffect [readFilterState] - filteredData before setGraphData:\",filteredData);setGraphData(filteredData);// Update graph data on read filter change\nsetDisplayedReadingListData([...filteredData]);// Update displayed list as a copy\n}},[readFilterState,originalSourcesRawData,activeTagFilters]);// Added originalSourcesRawData and activeTagFilters dependencies\nconst toggleSort=(button,criteria)=>{const currentOrder=button.dataset.order||\"unsorted\";let newOrder;if(currentOrder===\"unsorted\"){newOrder=\"asc\";}else if(currentOrder===\"asc\"){newOrder=\"desc\";}else{newOrder=\"unsorted\";}const buttons=document.querySelectorAll(\".sort-bar button\");buttons.forEach(btn=>{btn.classList.remove(\"active\");const arrowSpan=btn.querySelector(\".sort-arrow\");if(arrowSpan)arrowSpan.textContent=\"\";});if(newOrder!==\"unsorted\"){button.classList.add(\"active\");button.dataset.order=newOrder;const arrowSpan=button.querySelector(\".sort-arrow\");if(arrowSpan){arrowSpan.textContent=newOrder===\"asc\"?\"↑\":\"↓\";}sortReadingList(criteria,newOrder);}else{button.dataset.order=\"unsorted\";setDisplayedReadingListData([...readingListData]);// Reset displayed list using copy from readingListData\n}};const toggleFilterType=(button,type)=>{const isActive=button.classList.contains(\"active\");const buttons=document.querySelectorAll(\".sort-bar button\");buttons.forEach(btn=>{if(btn!==document.getElementById(\"filter-read\")){btn.classList.remove(\"active\");btn.style.removeProperty(\"--active-color\");btn.style.removeProperty(\"--active-text-color\");}});if(!isActive){button.classList.add(\"active\");switch(type){case\"YT\":button.style.setProperty(\"--active-color\",\"#FF0000\");button.style.setProperty(\"--active-text-color\",\"#FFFFFF\");break;case\"Arxiv\":button.style.setProperty(\"--active-color\",\"#A51C30\");button.style.setProperty(\"--active-text-color\",\"#FFFFFF\");break;case\"Site\":button.style.setProperty(\"--active-color\",\"#F5F5DC\");button.style.setProperty(\"--active-text-color\",\"#000000\");break;default:break;}filterByType(type);}else{button.style.removeProperty(\"--active-color\");button.style.removeProperty(\"--active-text-color\");filterByType(\"all\");}};// Memoize graphData to prevent unnecessary re-renders of DocumentGraph\nconst memoizedGraphData=useMemo(()=>{console.log(\"memoizedGraphData useMemo called, graphData:\",graphData);// DEBUG LOG\nreturn graphData;},[graphData]);// ===================== DocumentGraph Component =====================\nconst DocumentGraph=/*#__PURE__*/React.memo(_ref3=>{let{width,height,graphDisplayData,documentSimilaritiesData}=_ref3;console.count(\"DocumentGraph RENDER\");// <--- Add render counter\nconsole.log(\"DocumentGraph RENDER - graphDisplayData prop received:\",graphDisplayData);const containerRef=useRef(null);const[error,setError]=useState(null);const[isSmallScreen,setIsSmallScreen]=useState(false);const svgRef=useRef(null);const simulationRef=useRef(null);const nodeTitleGroupRef=useRef(null);const prevGraphDataRef=useRef(graphDisplayData);// Ref to store previous prop\nuseEffect(()=>{if(JSON.stringify(graphDisplayData)!==JSON.stringify(prevGraphDataRef.current)){console.log(\"DocumentGraph useEffect - graphDisplayData prop CHANGED:\",graphDisplayData);prevGraphDataRef.current=graphDisplayData;// Update previous prop\n}else{console.log(\"DocumentGraph useEffect - graphDisplayData prop UNCHANGED (shallowly equal):\",graphDisplayData);}},[graphDisplayData]);const checkScreenSize=()=>{setIsSmallScreen(window.innerWidth<=768);};const debouncedCheckScreenSize=debounceFunc(checkScreenSize,100);useEffect(()=>{checkScreenSize();window.addEventListener(\"resize\",debouncedCheckScreenSize);return()=>{window.removeEventListener(\"resize\",debouncedCheckScreenSize);};},[]);useEffect(()=>{console.log(\"DocumentGraph useEffect - graphDisplayData prop in useEffect:\",graphDisplayData);// Log renamed prop\nif(!documentSimilaritiesData){console.log(\"DocumentGraph useEffect - No documentSimilaritiesData, returning early.\");return;}if(!isSmallScreen&&graphDisplayData&&graphDisplayData.length>0){// Use graphDisplayData\nconsole.log(\"DocumentGraph useEffect - Initializing graph with graphDisplayData:\",graphDisplayData);initializeGraph(graphDisplayData);// Use graphDisplayData\n}else if(!isSmallScreen&&(!graphDisplayData||graphDisplayData.length===0)// Use graphDisplayData\n){console.log(\"DocumentGraph useEffect - Cleaning up graph - No data or small screen.\");cleanupGraph();if(svgRef.current){const svg=d3.select(svgRef.current);svg.selectAll(\"*\").remove();svg.append(\"rect\").attr(\"width\",\"100%\").attr(\"height\",\"100%\").attr(\"fill\",\"var(--graph-background)\");const textGroup=svg.append(\"g\").attr(\"transform\",`translate(${width/2}, ${height/2})`);textGroup.append(\"text\").attr(\"text-anchor\",\"middle\").attr(\"fill\",\"var(--text-color)\").text(\"No documents to display\");}}else{console.log(\"DocumentGraph useEffect - Condition not met - No graph update.\");}},[isSmallScreen,width,height,documentSimilaritiesData,memoizedGraphData// Re-add memoizedGraphData dependency as it should trigger graph updates when filters/search change\n]);const cleanupGraph=useCallback(()=>{if(simulationRef.current){simulationRef.current.stop();simulationRef.current=null;}if(containerRef.current){const container=d3.select(containerRef.current);container.selectAll(\"*\").remove();}},[]);const initializeGraph=async visibleDocsForGraph=>{if(!containerRef.current)return;if(!documentSimilaritiesData)return;cleanupGraph();try{const container=d3.select(containerRef.current);const svg=container.append(\"svg\").attr(\"width\",width).attr(\"height\",height).attr(\"className\",\"rounded-lg\");svgRef.current=svg;svg.append(\"rect\").attr(\"width\",\"100%\").attr(\"height\",\"100%\").attr(\"fill\",\"var(--graph-background)\");if(!visibleDocsForGraph.length){const textGroup=svg.append(\"g\").attr(\"transform\",`translate(${width/2}, ${height/2})`);textGroup.append(\"text\").attr(\"text-anchor\",\"middle\").attr(\"fill\",\"var(--text-color)\").text(\"No documents to display\");return;}const initialTranslateX=width/3-25;const initialTranslateY=height/4+10;const initialScale=0.45;const g=svg.append(\"g\");const zoom=d3.zoom().scaleExtent([initialScale,3]).translateExtent([[0,0],[width,height]]).on(\"zoom\",event=>{g.attr(\"transform\",event.transform);});svg.call(zoom.transform,d3.zoomIdentity.translate(initialTranslateX,initialTranslateY).scale(initialScale));svg.call(zoom);const visibleDocIndicesMap={};visibleDocsForGraph.forEach((doc,index)=>{visibleDocIndicesMap[doc.originalIndex]=index;});const nodes=visibleDocsForGraph.map((doc,i)=>({id:String(i),title:doc.title,fullText:doc.description,tags:doc.tags,readTime:doc.readTime,releaseDate:doc.releaseDate,isRead:doc.isRead}));let links=documentSimilaritiesData.filter(link=>{return link.source in visibleDocIndicesMap&&link.target in visibleDocIndicesMap;}).map(link=>({...link,source:String(visibleDocIndicesMap[link.source]),target:String(visibleDocIndicesMap[link.target])}));if(!links||links.length===0){links=[];}initializeSimulation(nodes,links,width,height,g,svg,visibleDocsForGraph.map(doc=>doc.readTime));}catch(error){setError(\"Error initializing graph. See console for details.\");}};const initializeSimulation=(nodes,links,width,height,g,svg,readTimes)=>{nodes.forEach(node=>{node.x=width/2+(Math.random()-0.5)*40;node.y=height/2+(Math.random()-0.5)*40;});simulationRef.current=d3.forceSimulation().nodes(nodes).force(\"link\",d3.forceLink(links).id(d=>d.id).distance(50).strength(0.5)).force(\"charge\",d3.forceManyBody().strength(-300)).force(\"center\",d3.forceCenter(width/2,height/2)).force(\"x\",d3.forceX(width/2).strength(0.1)).force(\"y\",d3.forceY(height/2).strength(0.1)).force(\"collision\",d3.forceCollide().strength(0.1).radius(d=>normalizeReadTime(d.readTime,Math.min(...readTimes),Math.max(...readTimes))+10)).force(\"boundary\",forceBoundary(width,height,nodes)).alpha(0.3).velocityDecay(0.4).alphaDecay(0.05).alphaMin(0.001);const link=g.append(\"g\").selectAll(\"line\").data(links).join(\"line\").attr(\"stroke\",\"var(--edge-color)\").attr(\"stroke-width\",d=>d.width).attr(\"stroke-opacity\",\"var(--edge-opacity)\");const nodeGroup=g.append(\"g\").attr(\"className\",\"nodes\");const node=nodeGroup.selectAll(\"g\").data(nodes).join(\"g\").attr(\"transform\",d=>`translate(${d.x},${d.y})`).call(d3.drag().on(\"start\",dragstarted).on(\"drag\",dragged).on(\"end\",dragended));node.append(\"circle\").attr(\"r\",d=>normalizeReadTime(d.readTime,Math.min(...readTimes),Math.max(...readTimes))).attr(\"fill\",d=>d.isRead?\"#4a9eff\":\"var(--node-color)\").attr(\"stroke\",\"var(--node-stroke-color)\").on(\"mouseover\",function(event,d){d3.select(this).attr(\"fill\",\"#8ACE00\");link.attr(\"stroke\",l=>l.source.id===d.id||l.target.id===d.id?\"#8ACE00\":\"var(--edge-color)\").attr(\"stroke-width\",l=>l.source.id===d.id||l.target.id===d.id?3:l.width);const titleGroup=nodeGroup.append(\"g\").attr(\"className\",\"node-title-group\").attr(\"transform\",`translate(${d.x},${d.y})`);nodeTitleGroupRef.current=titleGroup;titleGroup.append(\"text\").attr(\"className\",\"node-title\").attr(\"x\",10).attr(\"y\",5).attr(\"fill\",\"var(--text-color)\").text(d.title);}).on(\"mouseout\",function(event,d){d3.select(this).attr(\"fill\",d=>d.isRead?\"#4a9eff\":\"var(--node-color)\");link.attr(\"stroke\",\"var(--edge-color)\").attr(\"stroke-width\",l=>l.width);if(nodeTitleGroupRef.current){nodeTitleGroupRef.current.remove();nodeTitleGroupRef.current=null;}});simulationRef.current.on(\"tick\",()=>{link.attr(\"x1\",d=>boundPosition(d.source.x,width,-200)).attr(\"y1\",d=>boundPosition(d.source.y,height,-200)).attr(\"x2\",d=>boundPosition(d.target.x,width,-200)).attr(\"y2\",d=>boundPosition(d.target.y,height,-200));node.attr(\"transform\",d=>{const x=boundPosition(d.x,width,-200);const y=boundPosition(d.y,height,-200);return`translate(${x},${y})`;});});};const dragstarted=(event,d)=>{if(!event.active)simulationRef.current.alphaTarget(0.01).restart();d.fx=d.x;d.fy=d.y;simulationRef.current.force(\"link\").strength(0.8);simulationRef.current.alphaTarget(0.3).restart();};const dragged=(event,d)=>{simulationRef.current.alphaTarget(0.01);d.fx=boundPosition(event.x,width,-200);d.fy=boundPosition(event.y,height,-200);};const dragended=(event,d)=>{if(!event.active)simulationRef.current.alphaTarget(0.01);d.fx=null;d.fy=null;};const forceBoundary=(width,height,nodes)=>{const padding=4;const xMin=padding;const xMax=width-padding;const yMin=padding;const yMax=height-padding;const strength=0.05;function force(alpha){nodes.forEach(node=>{if(node.x<xMin)node.vx+=(xMin-node.x)*strength*alpha;if(node.x>xMax)node.vx+=(xMax-node.x)*strength*alpha;if(node.y<yMin)node.vy+=(yMin-node.y)*strength*alpha;if(node.y>yMax)node.vy+=(yMax-node.y)*strength*alpha;});}return force;};const boundPosition=(position,dimension,padding)=>{return Math.max(padding,Math.min(dimension-padding,position));};const normalizeReadTime=(readTime,minReadTime,maxReadTime)=>{const minRadius=5;const maxRadius=20;if(maxReadTime===minReadTime)return(minRadius+maxRadius)/2;const logMin=Math.log(minReadTime+1);const logMax=Math.log(maxReadTime+1);const logReadTime=Math.log(readTime+1);return(logReadTime-logMin)/(logMax-logMin)*(maxRadius-minRadius)+minRadius;};if(isSmallScreen)return null;if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-32 rounded-lg\",style:{backgroundColor:\"var(--graph-background)\",color:\"var(--text-color)\"},children:/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600\",children:error})});}return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"w-full h-full\"});});DocumentGraph.displayName=\"DocumentGraph\";// --- useEffect for Scroll to Top Button Visibility ---\nuseEffect(()=>{const button=scrollToTopButtonRef.current;const handleScroll=()=>{if(window.scrollY>300){// Adjust scroll threshold as needed\nbutton.classList.remove(\"opacity-0\");button.classList.add(\"opacity-100\");}else{button.classList.remove(\"opacity-100\");button.classList.add(\"opacity-0\");}};window.addEventListener(\"scroll\",handleScroll);handleScroll();// Initial check on mount\nreturn()=>window.removeEventListener(\"scroll\",handleScroll);// Cleanup on unmount\n},[]);// --- JSX Markup ---\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"meta\",{charSet:\"UTF-8\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"viewport\",content:\"width=device-width, initial-scale=1.0\"}),/*#__PURE__*/_jsx(\"title\",{children:\"bb.radz\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"gameOfLife\",className:\"game-of-life\",width:\"200\",height:\"400\"}),/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo-section\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"logo\",children:\"BBradz\"}),/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleTheme,\"aria-label\":\"Toggle theme\"})]}),/*#__PURE__*/_jsxs(\"nav\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/posts\",className:\"nav-link\",children:\"Posts\"}),/*#__PURE__*/_jsx(Link,{to:\"/library\",className:\"nav-link\",children:\"Library\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-link\",children:\"About Me\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reading-list-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lib-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"name\",style:{marginBottom:\"10px\"},children:\"Library\"}),/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"search\",placeholder:\"Search by term...\",onInput:handleSearchInput})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sort-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sort-bar-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{id:\"sort-release\",onClick:event=>toggleSort(event.target,\"release\"),children:[\"Sort by Release Date \",/*#__PURE__*/_jsx(\"span\",{className:\"sort-arrow\"})]}),/*#__PURE__*/_jsxs(\"button\",{id:\"sort-time\",onClick:event=>toggleSort(event.target,\"time\"),children:[\"Sort by Time to Read \",/*#__PURE__*/_jsx(\"span\",{className:\"sort-arrow\"})]}),/*#__PURE__*/_jsxs(\"button\",{id:\"filter-read\",onClick:toggleReadFilter,children:[\"Filter:\",\" \",readFilterState===0?\"All\":readFilterState===1?\"Read\":\"Unread\"]}),/*#__PURE__*/_jsx(\"button\",{id:\"filter-YT\",onClick:event=>toggleFilterType(event.target,\"YT\"),children:\"YT\"}),/*#__PURE__*/_jsx(\"button\",{id:\"filter-Arxiv\",onClick:event=>toggleFilterType(event.target,\"Arxiv\"),children:\"Arxiv\"}),/*#__PURE__*/_jsx(\"button\",{id:\"filter-Site\",onClick:event=>toggleFilterType(event.target,\"Site\"),children:\"Site\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"active-tags\",className:\"active-tag\",children:activeTagFilters.map(tag=>/*#__PURE__*/_jsx(Tag,{tag:tag,onTagFilter:handleTagFilter},tag))})]}),/*#__PURE__*/_jsxs(\"ul\",{id:\"reading-list\",children:[console.log(\"displayedReadingListData before render:\",displayedReadingListData),displayedReadingListData.map((item// Use displayedReadingListData here\n)=>/*#__PURE__*/_jsx(ReadingListItem,{item:item,onTagFilter:handleTagFilter},item.originalIndex))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-container\",children:/*#__PURE__*/_jsx(\"div\",{id:\"root\",className:\"graph-inner\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[console.log(\"Before DocumentGraph - memoizedGraphData:\",memoizedGraphData),/*#__PURE__*/_jsx(DocumentGraph,{width:400,height:400,graphDisplayData:memoizedGraphData// Use memoizedGraphData\n,documentSimilaritiesData:similaritiesRawData})]})})})]}),/*#__PURE__*/_jsx(\"button\",{ref:scrollToTopButtonRef,onClick:scrollToTop,className:\"scroll-to-top fixed bottom-6 right-6 opacity-0 transition-opacity duration-200 cursor-pointer\"// Added classes here\n,\"aria-label\":\"Scroll to top\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",className:\"text-zinc-200\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M18 15l-6-6-6 6\"})})})})]});}export default Library;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","Link","d3","runGameOfLife","getTagColor","getTextColor","formatDate","sourcesRawData","similaritiesRawData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tag","memo","_ref","tag","onTagFilter","onClick","style","backgroundColor","color","cursor","marginRight","padding","borderRadius","fontSize","children","displayName","ReadingListItem","_ref2","item","releaseDate","readTime","String","isRead","className","title","author","tags","map","description","downloadLink","href","download","Library","console","log","theme","setTheme","scrollToTopButtonRef","readingListData","setReadingListData","graphData","setGraphData","displayedReadingListData","setDisplayedReadingListData","originalSourcesRawData","activeTagFilters","setActiveTagFilters","readFilterState","setReadFilterState","toggleTheme","current","scrollToTop","window","scrollTo","top","behavior","document","body","setAttribute","initialReadingListData","index","embedding","originalIndex","error","filteredData","applyTagFilters","filterByType","filterReadStatus","undefined","debounceFunc","func","wait","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","performSearch","query","data","filter","toLowerCase","includes","handleSearchInput","e","target","value","sortReadingList","sortBy","sortOrder","sortedData","sort","a","b","comparison","dateA","Date","dateB","filterType","currentData","dataToFilter","onlyUnread","handleTagFilter","newActiveTagFilters","activeTag","every","filterTag","toggleReadFilter","button","prevState","toggleSort","criteria","currentOrder","dataset","order","newOrder","buttons","querySelectorAll","forEach","btn","classList","remove","arrowSpan","querySelector","textContent","add","toggleFilterType","type","isActive","contains","getElementById","removeProperty","setProperty","memoizedGraphData","DocumentGraph","_ref3","width","height","graphDisplayData","documentSimilaritiesData","count","containerRef","setError","isSmallScreen","setIsSmallScreen","svgRef","simulationRef","nodeTitleGroupRef","prevGraphDataRef","JSON","stringify","checkScreenSize","innerWidth","debouncedCheckScreenSize","addEventListener","removeEventListener","initializeGraph","cleanupGraph","svg","select","selectAll","append","attr","textGroup","text","stop","container","visibleDocsForGraph","initialTranslateX","initialTranslateY","initialScale","g","zoom","scaleExtent","translateExtent","on","event","transform","call","zoomIdentity","translate","scale","visibleDocIndicesMap","doc","nodes","i","id","fullText","links","link","source","initializeSimulation","readTimes","node","x","Math","random","y","forceSimulation","force","forceLink","d","distance","strength","forceManyBody","forceCenter","forceX","forceY","forceCollide","radius","normalizeReadTime","min","max","forceBoundary","alpha","velocityDecay","alphaDecay","alphaMin","join","nodeGroup","drag","dragstarted","dragged","dragended","l","titleGroup","boundPosition","active","alphaTarget","restart","fx","fy","xMin","xMax","yMin","yMax","vx","vy","position","dimension","minReadTime","maxReadTime","minRadius","maxRadius","logMin","logMax","logReadTime","ref","handleScroll","scrollY","charSet","name","content","to","marginBottom","placeholder","onInput","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin"],"sources":["/Users/benbradley/Desktop/CS_Classwork/bbradz.github.io/src/components/Library.js"],"sourcesContent":["// library.js - DEBUGGING VERSION - PLEASE RUN THIS AND CHECK CONSOLE\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as d3 from \"d3\";\nimport {\n  runGameOfLife,\n  getTagColor,\n  getTextColor,\n  formatDate,\n} from \"../functionality.js\";\nimport sourcesRawData from \"../input.json\";\nimport similaritiesRawData from \"../document_similarities.json\";\nimport \"../css/library.css\";\n\n// ===================== Tag Component =====================\nconst Tag = React.memo(({ tag, onTagFilter }) => {\n  return (\n    <span\n      key={tag}\n      data-type={tag}\n      onClick={() => onTagFilter(tag)}\n      style={{\n        backgroundColor: getTagColor(tag),\n        color: getTextColor(tag),\n        cursor: \"pointer\",\n        marginRight: \"4px\",\n        padding: \"2px 6px\",\n        borderRadius: \"3px\",\n        fontSize: \"0.85em\",\n      }}\n    >\n      {tag}\n    </span>\n  );\n});\nTag.displayName = \"Tag\";\n\n// ===================== ReadingListItem Component =====================\nconst ReadingListItem = React.memo(({ item, onTagFilter }) => {\n  return (\n    <li\n      data-release={item.releaseDate}\n      data-time={item.readTime}\n      data-read={String(item.isRead)}\n    >\n      {item.isRead ? <span className=\"read-indicator\">✓</span> : null}\n      <div className=\"item-header\">\n        <div className=\"item-title\">\n          <strong>\n            \"{item.title}\" by {item.author}\n          </strong>\n          <span className=\"meta\">\n            {item.isRead ? \"Read: \" : null}\n            {formatDate(item.releaseDate)} |\n            <span className=\"no-break\">Est. Time {item.readTime} hours</span>\n          </span>\n        </div>\n        <div className=\"tags\">\n          {item.tags.map((tag) => (\n            <Tag key={tag} tag={tag} onTagFilter={onTagFilter} />\n          ))}\n        </div>\n      </div>\n      <div className=\"description\">{item.description}</div>\n      {item.downloadLink ? (\n        <a className=\"download-link\" href={item.downloadLink} download>\n          Source\n        </a>\n      ) : null}\n    </li>\n  );\n});\nReadingListItem.displayName = \"ReadingListItem\";\n\n// ===================== Library Component =====================\nfunction Library() {\n  console.log(\"Library Component RENDER\");\n\n  // --- State Declarations ---\n  const [theme, setTheme] = useState(\"dark\");\n  const scrollToTopButtonRef = useRef(null);\n  const [readingListData, setReadingListData] = useState([]);\n  const [graphData, setGraphData] = useState([]); // Keep graphData state\n  const [displayedReadingListData, setDisplayedReadingListData] = useState([]); // New state for list display\n  const originalSourcesRawData = useRef(null); // Ref to store initial data\n  const [activeTagFilters, setActiveTagFilters] = useState([]);\n  const [readFilterState, setReadFilterState] = useState(0);\n\n  const toggleTheme = () => {\n    setTheme((current) => (current === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    document.body.setAttribute(\"data-theme\", theme);\n  }, [theme]);\n\n  useEffect(() => {\n    runGameOfLife(\"gameOfLife\");\n  }, []);\n\n  // --- 1st useEffect: Load raw data only ---\n  useEffect(() => {\n    try {\n      const initialReadingListData = sourcesRawData.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n      originalSourcesRawData.current = [...initialReadingListData];\n      console.log(\"1st useEffect - sourcesRawData loaded:\", sourcesRawData);\n    } catch (error) {\n      console.error(\n        \"Library useEffect (data load) - Error importing reading list data:\",\n        error\n      );\n    }\n  }, []); // Empty dependency array - runs only once on mount\n\n  // --- 2nd useEffect: Apply initial filters and set states based on loaded data ---\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded\n      console.log(\n        \"2nd useEffect - originalSourcesRawData.current is now available, applying initial filters.\"\n      );\n\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Pass data explicitly\n      filteredData = filterByType(\"all\", filteredData); // Ensure \"all\" types are shown initially, pass data\n      filteredData = filterReadStatus(undefined, filteredData); // Ensure all read statuses are shown initially, pass data\n\n      console.log(\n        \"2nd useEffect - finalFilteredData after initial filters:\",\n        filteredData\n      );\n      setReadingListData(filteredData); // Set readingListData with final filtered data\n      setGraphData(filteredData); // *Now* set graphData using the *same* final filtered data\n      setDisplayedReadingListData([...filteredData]); // Initialize displayed list as a copy\n      console.log(\n        \"2nd useEffect - readingListData, graphData, and displayedReadingListData states updated.\"\n      );\n    } else {\n      console.log(\n        \"2nd useEffect - originalSourcesRawData.current is not yet available.\"\n      );\n    }\n  }, [originalSourcesRawData]); // Dependency on originalSourcesRawData - runs after data loads\n\n  const debounceFunc = (func, wait) => {\n    let timeout;\n    return function (...args) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  };\n\n  const performSearch = (query, data) => {\n    if (!query) return data;\n    return data.filter((item) =>\n      item.title.toLowerCase().includes(query.toLowerCase())\n    );\n  };\n\n  const handleSearchInput = (e) => {\n    const query = e.target.value;\n    const filteredData = performSearch(\n      query,\n      originalSourcesRawData.current.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }))\n    );\n    console.log(\n      \"handleSearchInput - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"handleSearchInput - Before setGraphData, graphData:\",\n      graphData\n    );\n    console.log(\n      \"graphData state before setGraphData in handleSearchInput:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on search\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in handleSearchInput:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"handleSearchInput - After setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"handleSearchInput - After setGraphData, graphData:\",\n      graphData\n    );\n  };\n\n  const sortReadingList = (sortBy, sortOrder) => {\n    let sortedData = [...displayedReadingListData]; // Sort based on displayed list\n    sortedData.sort((a, b) => {\n      let comparison = 0;\n      if (sortBy === \"release\") {\n        const dateA = new Date(a.releaseDate);\n        const dateB = new Date(b.releaseDate);\n        comparison = dateA - dateB;\n      } else if (sortBy === \"time\") {\n        comparison = a.readTime - b.readTime;\n      }\n      return sortOrder === \"asc\" ? comparison : comparison * -1;\n    });\n    console.log(\n      \"sortReadingList - Before setDisplayedReadingListData, displayedReadingListData:\",\n      displayedReadingListData\n    );\n    console.log(\"graphData state in sortReadingList:\", graphData); // DEBUG LOG\n    setDisplayedReadingListData(sortedData); // Update ONLY displayed list\n    console.log(\n      \"sortReadingList - After setDisplayedReadingListData, displayedReadingListData:\",\n      sortedData\n    );\n    // DO NOT UPDATE graphData or readingListData\n  };\n\n  const filterByType = (filterType, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (filterType === \"all\") {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n    } else {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => item.tags.includes(filterType));\n    }\n    console.log(\n      \"filterByType - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\"filterByType - Before setGraphData, graphData:\", graphData);\n    console.log(\n      \"graphData state before setGraphData in filterByType:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on type filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in filterByType:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"filterByType - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"filterByType - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n\n  const filterReadStatus = (onlyUnread, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (onlyUnread === true) {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => !item.isRead);\n    } else if (onlyUnread === false) {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => item.isRead);\n    } else {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n    }\n    console.log(\n      \"filterReadStatus - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"filterReadStatus - Before setGraphData, graphData:\",\n      graphData\n    );\n    console.log(\n      \"graphData state before setGraphData in filterReadStatus:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on read status filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in filterReadStatus:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"filterReadStatus - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"filterReadStatus - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n\n  const handleTagFilter = (tag) => {\n    let newActiveTagFilters = [...activeTagFilters];\n    if (newActiveTagFilters.includes(tag)) {\n      newActiveTagFilters = newActiveTagFilters.filter(\n        (activeTag) => activeTag !== tag\n      );\n    } else {\n      newActiveTagFilters = [...newActiveTagFilters, tag];\n    }\n    setActiveTagFilters(newActiveTagFilters);\n  };\n\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying tag filters\n      applyTagFilters(originalSourcesRawData.current);\n    }\n  }, [activeTagFilters, originalSourcesRawData]); // Added originalSourcesRawData dependency\n\n  const applyTagFilters = () => {\n    // Modified: No arguments needed - always uses original data\n    const dataToFilter = originalSourcesRawData.current; // Always filter against original data\n    if (!dataToFilter) return []; // Handle no data case\n\n    let filteredData = dataToFilter.map((item, index) => ({\n      // Filter original data\n      ...item,\n      embedding: item.embedding || [],\n      originalIndex: index,\n    }));\n    if (activeTagFilters.length > 0) {\n      filteredData = filteredData.filter((item) => {\n        return activeTagFilters.every((filterTag) =>\n          item.tags.includes(filterTag)\n        );\n      });\n    }\n    console.log(\n      \"applyTagFilters - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\"applyTagFilters - Before setGraphData, graphData:\", graphData);\n    console.log(\n      \"graphData state before setGraphData in applyTagFilters:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on tag filter change\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in applyTagFilters:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"applyTagFilters - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"applyTagFilters - After setGraphData, graphData:\", graphData);\n    return filteredData;\n  };\n\n  const toggleReadFilter = (button) => {\n    setReadFilterState((prevState) => (prevState + 1) % 3);\n  };\n\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying read filter\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Start with tag-filtered data\n      if (readFilterState === 1) {\n        filteredData = filterReadStatus(false, filteredData); // Pass tag-filtered data\n      } else if (readFilterState === 2) {\n        filteredData = filterReadStatus(true, filteredData); // Pass tag-filtered data\n      } else {\n        filteredData = filterByType(\"all\", filteredData); // Get data from filterByType, pass tag-filtered data\n        // filteredData = applyTagFilters(filteredData); // Then refine by tags, get data - redundant, remove this line - already tag filtered\n      }\n      console.log(\n        \"useEffect [readFilterState] - filteredData before setGraphData:\",\n        filteredData\n      );\n      setGraphData(filteredData); // Update graph data on read filter change\n      setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    }\n  }, [readFilterState, originalSourcesRawData, activeTagFilters]); // Added originalSourcesRawData and activeTagFilters dependencies\n\n  const toggleSort = (button, criteria) => {\n    const currentOrder = button.dataset.order || \"unsorted\";\n    let newOrder;\n\n    if (currentOrder === \"unsorted\") {\n      newOrder = \"asc\";\n    } else if (currentOrder === \"asc\") {\n      newOrder = \"desc\";\n    } else {\n      newOrder = \"unsorted\";\n    }\n\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach((btn) => {\n      btn.classList.remove(\"active\");\n      const arrowSpan = btn.querySelector(\".sort-arrow\");\n      if (arrowSpan) arrowSpan.textContent = \"\";\n    });\n\n    if (newOrder !== \"unsorted\") {\n      button.classList.add(\"active\");\n      button.dataset.order = newOrder;\n      const arrowSpan = button.querySelector(\".sort-arrow\");\n      if (arrowSpan) {\n        arrowSpan.textContent = newOrder === \"asc\" ? \"↑\" : \"↓\";\n      }\n      sortReadingList(criteria, newOrder);\n    } else {\n      button.dataset.order = \"unsorted\";\n      setDisplayedReadingListData([...readingListData]); // Reset displayed list using copy from readingListData\n    }\n  };\n\n  const toggleFilterType = (button, type) => {\n    const isActive = button.classList.contains(\"active\");\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach((btn) => {\n      if (btn !== document.getElementById(\"filter-read\")) {\n        btn.classList.remove(\"active\");\n        btn.style.removeProperty(\"--active-color\");\n        btn.style.removeProperty(\"--active-text-color\");\n      }\n    });\n\n    if (!isActive) {\n      button.classList.add(\"active\");\n      switch (type) {\n        case \"YT\":\n          button.style.setProperty(\"--active-color\", \"#FF0000\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Arxiv\":\n          button.style.setProperty(\"--active-color\", \"#A51C30\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Site\":\n          button.style.setProperty(\"--active-color\", \"#F5F5DC\");\n          button.style.setProperty(\"--active-text-color\", \"#000000\");\n          break;\n        default:\n          break;\n      }\n      filterByType(type);\n    } else {\n      button.style.removeProperty(\"--active-color\");\n      button.style.removeProperty(\"--active-text-color\");\n      filterByType(\"all\");\n    }\n  };\n\n  // Memoize graphData to prevent unnecessary re-renders of DocumentGraph\n  const memoizedGraphData = useMemo(() => {\n    console.log(\"memoizedGraphData useMemo called, graphData:\", graphData); // DEBUG LOG\n    return graphData;\n  }, [graphData]);\n\n  // ===================== DocumentGraph Component =====================\n  const DocumentGraph = React.memo(\n    ({ width, height, graphDisplayData, documentSimilaritiesData }) => {\n      console.count(\"DocumentGraph RENDER\"); // <--- Add render counter\n      console.log(\n        \"DocumentGraph RENDER - graphDisplayData prop received:\",\n        graphDisplayData\n      );\n      const containerRef = useRef(null);\n      const [error, setError] = useState(null);\n      const [isSmallScreen, setIsSmallScreen] = useState(false);\n      const svgRef = useRef(null);\n      const simulationRef = useRef(null);\n      const nodeTitleGroupRef = useRef(null);\n      const prevGraphDataRef = useRef(graphDisplayData); // Ref to store previous prop\n\n      useEffect(() => {\n        if (\n          JSON.stringify(graphDisplayData) !==\n          JSON.stringify(prevGraphDataRef.current)\n        ) {\n          console.log(\n            \"DocumentGraph useEffect - graphDisplayData prop CHANGED:\",\n            graphDisplayData\n          );\n          prevGraphDataRef.current = graphDisplayData; // Update previous prop\n        } else {\n          console.log(\n            \"DocumentGraph useEffect - graphDisplayData prop UNCHANGED (shallowly equal):\",\n            graphDisplayData\n          );\n        }\n      }, [graphDisplayData]);\n\n      const checkScreenSize = () => {\n        setIsSmallScreen(window.innerWidth <= 768);\n      };\n      const debouncedCheckScreenSize = debounceFunc(checkScreenSize, 100);\n\n      useEffect(() => {\n        checkScreenSize();\n        window.addEventListener(\"resize\", debouncedCheckScreenSize);\n        return () => {\n          window.removeEventListener(\"resize\", debouncedCheckScreenSize);\n        };\n      }, []);\n\n      useEffect(() => {\n        console.log(\n          \"DocumentGraph useEffect - graphDisplayData prop in useEffect:\",\n          graphDisplayData\n        ); // Log renamed prop\n        if (!documentSimilaritiesData) {\n          console.log(\n            \"DocumentGraph useEffect - No documentSimilaritiesData, returning early.\"\n          );\n          return;\n        }\n\n        if (!isSmallScreen && graphDisplayData && graphDisplayData.length > 0) {\n          // Use graphDisplayData\n          console.log(\n            \"DocumentGraph useEffect - Initializing graph with graphDisplayData:\",\n            graphDisplayData\n          );\n          initializeGraph(graphDisplayData); // Use graphDisplayData\n        } else if (\n          !isSmallScreen &&\n          (!graphDisplayData || graphDisplayData.length === 0) // Use graphDisplayData\n        ) {\n          console.log(\n            \"DocumentGraph useEffect - Cleaning up graph - No data or small screen.\"\n          );\n          cleanupGraph();\n          if (svgRef.current) {\n            const svg = d3.select(svgRef.current);\n            svg.selectAll(\"*\").remove();\n            svg\n              .append(\"rect\")\n              .attr(\"width\", \"100%\")\n              .attr(\"height\", \"100%\")\n              .attr(\"fill\", \"var(--graph-background)\");\n            const textGroup = svg\n              .append(\"g\")\n              .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            textGroup\n              .append(\"text\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(\"No documents to display\");\n          }\n        } else {\n          console.log(\n            \"DocumentGraph useEffect - Condition not met - No graph update.\"\n          );\n        }\n      }, [\n        isSmallScreen,\n        width,\n        height,\n        documentSimilaritiesData,\n        memoizedGraphData, // Re-add memoizedGraphData dependency as it should trigger graph updates when filters/search change\n      ]);\n\n      const cleanupGraph = useCallback(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          simulationRef.current = null;\n        }\n        if (containerRef.current) {\n          const container = d3.select(containerRef.current);\n          container.selectAll(\"*\").remove();\n        }\n      }, []);\n\n      const initializeGraph = async (visibleDocsForGraph) => {\n        if (!containerRef.current) return;\n        if (!documentSimilaritiesData) return;\n        cleanupGraph();\n\n        try {\n          const container = d3.select(containerRef.current);\n          const svg = container\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"className\", \"rounded-lg\");\n          svgRef.current = svg;\n\n          svg\n            .append(\"rect\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .attr(\"fill\", \"var(--graph-background)\");\n\n          if (!visibleDocsForGraph.length) {\n            const textGroup = svg\n              .append(\"g\")\n              .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            textGroup\n              .append(\"text\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(\"No documents to display\");\n            return;\n          }\n\n          const initialTranslateX = width / 3 - 25;\n          const initialTranslateY = height / 4 + 10;\n          const initialScale = 0.45;\n\n          const g = svg.append(\"g\");\n          const zoom = d3\n            .zoom()\n            .scaleExtent([initialScale, 3])\n            .translateExtent([\n              [0, 0],\n              [width, height],\n            ])\n            .on(\"zoom\", (event) => {\n              g.attr(\"transform\", event.transform);\n            });\n\n          svg.call(\n            zoom.transform,\n            d3.zoomIdentity\n              .translate(initialTranslateX, initialTranslateY)\n              .scale(initialScale)\n          );\n          svg.call(zoom);\n\n          const visibleDocIndicesMap = {};\n          visibleDocsForGraph.forEach((doc, index) => {\n            visibleDocIndicesMap[doc.originalIndex] = index;\n          });\n\n          const nodes = visibleDocsForGraph.map((doc, i) => ({\n            id: String(i),\n            title: doc.title,\n            fullText: doc.description,\n            tags: doc.tags,\n            readTime: doc.readTime,\n            releaseDate: doc.releaseDate,\n            isRead: doc.isRead,\n          }));\n\n          let links = documentSimilaritiesData\n            .filter((link) => {\n              return (\n                link.source in visibleDocIndicesMap &&\n                link.target in visibleDocIndicesMap\n              );\n            })\n            .map((link) => ({\n              ...link,\n              source: String(visibleDocIndicesMap[link.source]),\n              target: String(visibleDocIndicesMap[link.target]),\n            }));\n\n          if (!links || links.length === 0) {\n            links = [];\n          }\n\n          initializeSimulation(\n            nodes,\n            links,\n            width,\n            height,\n            g,\n            svg,\n            visibleDocsForGraph.map((doc) => doc.readTime)\n          );\n        } catch (error) {\n          setError(\"Error initializing graph. See console for details.\");\n        }\n      };\n\n      const initializeSimulation = (\n        nodes,\n        links,\n        width,\n        height,\n        g,\n        svg,\n        readTimes\n      ) => {\n        nodes.forEach((node) => {\n          node.x = width / 2 + (Math.random() - 0.5) * 40;\n          node.y = height / 2 + (Math.random() - 0.5) * 40;\n        });\n\n        simulationRef.current = d3\n          .forceSimulation()\n          .nodes(nodes)\n          .force(\n            \"link\",\n            d3\n              .forceLink(links)\n              .id((d) => d.id)\n              .distance(50)\n              .strength(0.5)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-300))\n          .force(\"center\", d3.forceCenter(width / 2, height / 2))\n          .force(\"x\", d3.forceX(width / 2).strength(0.1))\n          .force(\"y\", d3.forceY(height / 2).strength(0.1))\n          .force(\n            \"collision\",\n            d3\n              .forceCollide()\n              .strength(0.1)\n              .radius(\n                (d) =>\n                  normalizeReadTime(\n                    d.readTime,\n                    Math.min(...readTimes),\n                    Math.max(...readTimes)\n                  ) + 10\n              )\n          )\n          .force(\"boundary\", forceBoundary(width, height, nodes))\n          .alpha(0.3)\n          .velocityDecay(0.4)\n          .alphaDecay(0.05)\n          .alphaMin(0.001);\n\n        const link = g\n          .append(\"g\")\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke\", \"var(--edge-color)\")\n          .attr(\"stroke-width\", (d) => d.width)\n          .attr(\"stroke-opacity\", \"var(--edge-opacity)\");\n\n        const nodeGroup = g.append(\"g\").attr(\"className\", \"nodes\");\n        const node = nodeGroup\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .attr(\"transform\", (d) => `translate(${d.x},${d.y})`)\n          .call(\n            d3\n              .drag()\n              .on(\"start\", dragstarted)\n              .on(\"drag\", dragged)\n              .on(\"end\", dragended)\n          );\n\n        node\n          .append(\"circle\")\n          .attr(\"r\", (d) =>\n            normalizeReadTime(\n              d.readTime,\n              Math.min(...readTimes),\n              Math.max(...readTimes)\n            )\n          )\n          .attr(\"fill\", (d) => (d.isRead ? \"#4a9eff\" : \"var(--node-color)\"))\n          .attr(\"stroke\", \"var(--node-stroke-color)\")\n          .on(\"mouseover\", function (event, d) {\n            d3.select(this).attr(\"fill\", \"#8ACE00\");\n            link\n              .attr(\"stroke\", (l) =>\n                l.source.id === d.id || l.target.id === d.id\n                  ? \"#8ACE00\"\n                  : \"var(--edge-color)\"\n              )\n              .attr(\"stroke-width\", (l) =>\n                l.source.id === d.id || l.target.id === d.id ? 3 : l.width\n              );\n            const titleGroup = nodeGroup\n              .append(\"g\")\n              .attr(\"className\", \"node-title-group\")\n              .attr(\"transform\", `translate(${d.x},${d.y})`);\n            nodeTitleGroupRef.current = titleGroup;\n\n            titleGroup\n              .append(\"text\")\n              .attr(\"className\", \"node-title\")\n              .attr(\"x\", 10)\n              .attr(\"y\", 5)\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(d.title);\n          })\n          .on(\"mouseout\", function (event, d) {\n            d3.select(this).attr(\"fill\", (d) =>\n              d.isRead ? \"#4a9eff\" : \"var(--node-color)\"\n            );\n            link\n              .attr(\"stroke\", \"var(--edge-color)\")\n              .attr(\"stroke-width\", (l) => l.width);\n            if (nodeTitleGroupRef.current) {\n              nodeTitleGroupRef.current.remove();\n              nodeTitleGroupRef.current = null;\n            }\n          });\n\n        simulationRef.current.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => boundPosition(d.source.x, width, -200))\n            .attr(\"y1\", (d) => boundPosition(d.source.y, height, -200))\n            .attr(\"x2\", (d) => boundPosition(d.target.x, width, -200))\n            .attr(\"y2\", (d) => boundPosition(d.target.y, height, -200));\n          node.attr(\"transform\", (d) => {\n            const x = boundPosition(d.x, width, -200);\n            const y = boundPosition(d.y, height, -200);\n            return `translate(${x},${y})`;\n          });\n        });\n      };\n\n      const dragstarted = (event, d) => {\n        if (!event.active) simulationRef.current.alphaTarget(0.01).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n        simulationRef.current.force(\"link\").strength(0.8);\n        simulationRef.current.alphaTarget(0.3).restart();\n      };\n\n      const dragged = (event, d) => {\n        simulationRef.current.alphaTarget(0.01);\n        d.fx = boundPosition(event.x, width, -200);\n        d.fy = boundPosition(event.y, height, -200);\n      };\n\n      const dragended = (event, d) => {\n        if (!event.active) simulationRef.current.alphaTarget(0.01);\n        d.fx = null;\n        d.fy = null;\n      };\n\n      const forceBoundary = (width, height, nodes) => {\n        const padding = 4;\n        const xMin = padding;\n        const xMax = width - padding;\n        const yMin = padding;\n        const yMax = height - padding;\n        const strength = 0.05;\n\n        function force(alpha) {\n          nodes.forEach((node) => {\n            if (node.x < xMin) node.vx += (xMin - node.x) * strength * alpha;\n            if (node.x > xMax) node.vx += (xMax - node.x) * strength * alpha;\n            if (node.y < yMin) node.vy += (yMin - node.y) * strength * alpha;\n            if (node.y > yMax) node.vy += (yMax - node.y) * strength * alpha;\n          });\n        }\n        return force;\n      };\n\n      const boundPosition = (position, dimension, padding) => {\n        return Math.max(padding, Math.min(dimension - padding, position));\n      };\n\n      const normalizeReadTime = (readTime, minReadTime, maxReadTime) => {\n        const minRadius = 5;\n        const maxRadius = 20;\n        if (maxReadTime === minReadTime) return (minRadius + maxRadius) / 2;\n        const logMin = Math.log(minReadTime + 1);\n        const logMax = Math.log(maxReadTime + 1);\n        const logReadTime = Math.log(readTime + 1);\n        return (\n          ((logReadTime - logMin) / (logMax - logMin)) *\n            (maxRadius - minRadius) +\n          minRadius\n        );\n      };\n\n      if (isSmallScreen) return null;\n\n      if (error) {\n        return (\n          <div\n            className=\"flex items-center justify-center h-32 rounded-lg\"\n            style={{\n              backgroundColor: \"var(--graph-background)\",\n              color: \"var(--text-color)\",\n            }}\n          >\n            <p className=\"text-red-600\">{error}</p>\n          </div>\n        );\n      }\n\n      return <div ref={containerRef} className=\"w-full h-full\" />;\n    }\n  );\n  DocumentGraph.displayName = \"DocumentGraph\";\n\n  // --- useEffect for Scroll to Top Button Visibility ---\n  useEffect(() => {\n    const button = scrollToTopButtonRef.current;\n\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        // Adjust scroll threshold as needed\n        button.classList.remove(\"opacity-0\");\n        button.classList.add(\"opacity-100\");\n      } else {\n        button.classList.remove(\"opacity-100\");\n        button.classList.add(\"opacity-0\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial check on mount\n\n    return () => window.removeEventListener(\"scroll\", handleScroll); // Cleanup on unmount\n  }, []);\n\n  // --- JSX Markup ---\n  return (\n    <>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <title>bb.radz</title>\n\n      <canvas\n        id=\"gameOfLife\"\n        className=\"game-of-life\"\n        width=\"200\"\n        height=\"400\"\n      ></canvas>\n\n      <header className=\"header\">\n        <div className=\"logo-section\">\n          <p className=\"logo\">BBradz</p>\n          <button\n            className=\"theme-toggle\"\n            onClick={toggleTheme}\n            aria-label=\"Toggle theme\"\n          >\n            {/* Theme Toggle SVG Icons */}\n          </button>\n        </div>\n        <nav className=\"nav-links\">\n          <Link to=\"/posts\" className=\"nav-link\">\n            Posts\n          </Link>\n          <Link to=\"/library\" className=\"nav-link\">\n            Library\n          </Link>\n          <Link to=\"/\" className=\"nav-link\">\n            About Me\n          </Link>\n        </nav>\n      </header>\n\n      <div className=\"reading-list-layout\">\n        <div className=\"lib-container\">\n          <h1 className=\"name\" style={{ marginBottom: \"10px\" }}>\n            Library\n          </h1>\n          <div className=\"search-bar\">\n            <input\n              type=\"text\"\n              id=\"search\"\n              placeholder=\"Search by term...\"\n              onInput={handleSearchInput}\n            />\n          </div>\n          <div className=\"sort-bar\">\n            <div className=\"sort-bar-buttons\">\n              <button\n                id=\"sort-release\"\n                onClick={(event) => toggleSort(event.target, \"release\")}\n              >\n                Sort by Release Date <span className=\"sort-arrow\"></span>\n              </button>\n              <button\n                id=\"sort-time\"\n                onClick={(event) => toggleSort(event.target, \"time\")}\n              >\n                Sort by Time to Read <span className=\"sort-arrow\"></span>\n              </button>\n              <button id=\"filter-read\" onClick={toggleReadFilter}>\n                Filter:{\" \"}\n                {readFilterState === 0\n                  ? \"All\"\n                  : readFilterState === 1\n                  ? \"Read\"\n                  : \"Unread\"}\n              </button>\n              <button\n                id=\"filter-YT\"\n                onClick={(event) => toggleFilterType(event.target, \"YT\")}\n              >\n                YT\n              </button>\n              <button\n                id=\"filter-Arxiv\"\n                onClick={(event) => toggleFilterType(event.target, \"Arxiv\")}\n              >\n                Arxiv\n              </button>\n              <button\n                id=\"filter-Site\"\n                onClick={(event) => toggleFilterType(event.target, \"Site\")}\n              >\n                Site\n              </button>\n            </div>\n            <div id=\"active-tags\" className=\"active-tag\">\n              {activeTagFilters.map((tag) => (\n                <Tag key={tag} tag={tag} onTagFilter={handleTagFilter} />\n              ))}\n            </div>\n          </div>\n\n          <ul id=\"reading-list\">\n            {console.log(\n              \"displayedReadingListData before render:\",\n              displayedReadingListData\n            )}\n            {displayedReadingListData.map(\n              (\n                item // Use displayedReadingListData here\n              ) => (\n                <ReadingListItem\n                  key={item.originalIndex}\n                  item={item}\n                  onTagFilter={handleTagFilter}\n                />\n              )\n            )}\n          </ul>\n        </div>\n\n        <div className=\"graph-container\">\n          <div id=\"root\" className=\"graph-inner\">\n            <div className=\"space-y-6\">\n              {console.log(\n                \"Before DocumentGraph - memoizedGraphData:\",\n                memoizedGraphData\n              )}\n              <DocumentGraph\n                width={400}\n                height={400}\n                graphDisplayData={memoizedGraphData} // Use memoizedGraphData\n                documentSimilaritiesData={similaritiesRawData}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button\n        ref={scrollToTopButtonRef}\n        onClick={scrollToTop}\n        className=\"scroll-to-top fixed bottom-6 right-6 opacity-0 transition-opacity duration-200 cursor-pointer\" // Added classes here\n        aria-label=\"Scroll to top\"\n      >\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"text-zinc-200\"\n          >\n            <path d=\"M18 15l-6-6-6 6\" />\n          </svg>\n        </div>\n      </button>\n    </>\n  );\n}\n\nexport default Library;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}