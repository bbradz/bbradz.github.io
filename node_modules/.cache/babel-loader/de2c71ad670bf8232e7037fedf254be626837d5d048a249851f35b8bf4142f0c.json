{"ast":null,"code":"// ============================== REGULAR OPS ============================== //\n//                                    xx                                     //\n// ============================== REGULAR OPS ============================== //\n\n// Update the toggleCollapse function\nfunction toggleCollapse(button) {\n  const container = button.closest(\".collapsible-code-container\");\n  if (!container) return;\n  const codeContainer = container.querySelector(\".code-container\");\n  if (!codeContainer) return;\n\n  // Toggle the visibility of the code container\n  codeContainer.classList.toggle(\"visible\");\n\n  // Toggle the expanded state of the button\n  button.classList.toggle(\"expanded\");\n\n  // Update the button text based on the state\n  const buttonText = button.querySelector(\"span\");\n  if (codeContainer.classList.contains(\"visible\")) {\n    buttonText.textContent = \"hide code\";\n  } else {\n    buttonText.textContent = \"show code\";\n  }\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const buttonContainers = document.querySelectorAll(\".button-container\");\n  buttonContainers.forEach(container => {\n    container.addEventListener(\"mouseenter\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.add(\"visible\");\n      }\n    });\n    container.addEventListener(\"mouseleave\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  });\n});\n\n// ======================\n// Theme toggle\n// ======================\nfunction toggleTheme() {\n  const html = document.documentElement;\n  const currentTheme = html.getAttribute(\"data-theme\");\n  const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  html.setAttribute(\"data-theme\", newTheme);\n\n  // Save the selected theme in localStorage\n  localStorage.setItem(\"theme\", newTheme);\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const savedTheme = localStorage.getItem(\"theme\") || \"dark\"; // Default to dark\n  document.documentElement.setAttribute(\"data-theme\", savedTheme);\n});\n\n// ======================\n// Table of Contents toggle\n// ======================\nfunction toggleTOC() {\n  const toc = document.getElementById(\"toc\");\n  if (!toc) return;\n  toc.classList.toggle(\"expanded\");\n  const arrow = document.querySelector(\".toc-header span:first-child\");\n  if (arrow) {\n    arrow.textContent = toc.classList.contains(\"expanded\") ? \"▼\" : \"▶\";\n  }\n}\n\n// ======================\n// Copy code functionality\n// ======================\nlet timeoutId;\nconst PROXIMITY_THRESHOLD = 150; // pixels\n\nfunction handleMouseMove(event, buttonId = null) {\n  const targetButton = buttonId ? document.getElementById(buttonId) : document.querySelector(\".copy-button\");\n  if (!targetButton) return;\n  const rect = targetButton.getBoundingClientRect();\n  const buttonCenterX = rect.left + rect.width / 2;\n  const buttonCenterY = rect.top + rect.height / 2;\n  const distance = Math.sqrt(Math.pow(event.clientX - buttonCenterX, 2) + Math.pow(event.clientY - buttonCenterY, 2));\n  clearTimeout(timeoutId);\n  if (distance <= PROXIMITY_THRESHOLD) {\n    targetButton.classList.add(\"visible\");\n    timeoutId = setTimeout(() => {\n      if (!targetButton.matches(\":hover\")) {\n        targetButton.classList.remove(\"visible\");\n      }\n    }, 1000);\n  } else {\n    targetButton.classList.remove(\"visible\");\n  }\n}\n\n/*\n  Purpose: Copies the content of a code block to the clipboard.\n  Behavior: Finds the closest code block to the clicked button, copies its text,\n  and temporarily adds a copied class to the button for visual feedback.\n*/\nfunction copyCode(event) {\n  event.preventDefault();\n  const button = event.currentTarget;\n  const codeContainer = button.closest(\".collapsible-code-container\");\n  const codeEl = codeContainer ? codeContainer.querySelector(\"code\") : null;\n  if (!codeEl) return;\n  navigator.clipboard.writeText(codeEl.innerText || \"\").then(() => {\n    button.classList.add(\"copied\");\n    setTimeout(() => {\n      button.classList.remove(\"copied\");\n    }, 500);\n  }).catch(err => {\n    console.error(\"Failed to copy code:\", err);\n  });\n}\n\n// Add event listeners to all copy buttons\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCode);\n  });\n});\n\n// ======================\n// Scroll to top\n// ======================\nwindow.onscroll = function () {\n  const scrollButton = document.getElementById(\"scrollToTop\");\n  if (!scrollButton) return;\n  if (document.body.scrollTop > window.innerHeight || document.documentElement.scrollTop > window.innerHeight) {\n    scrollButton.style.opacity = \"1\";\n  } else {\n    scrollButton.style.opacity = \"0\";\n  }\n};\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\n\n// ======================\n// Copy citation\n// ======================\nfunction copyCitation(event) {\n  event.preventDefault();\n  const button = event.currentTarget;\n  const citationContainer = button.closest(\".citation-container\");\n  const citationEl = citationContainer ? citationContainer.querySelector(\"code\") : null;\n  if (!citationEl) return;\n  navigator.clipboard.writeText(citationEl.innerText || \"\").then(() => {\n    button.classList.add(\"copied\");\n    setTimeout(() => {\n      button.classList.remove(\"copied\");\n    }, 500);\n  }).catch(err => {\n    console.error(\"Failed to copy citation:\", err);\n  });\n}\n\n// Add event listeners to all copy buttons\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCode);\n  });\n  const citationCopyButtons = document.querySelectorAll(\"#citation-copy-button\");\n  citationCopyButtons.forEach(button => {\n    button.addEventListener(\"click\", copyCitation);\n  });\n});\n\n// ======================\n// DOMContentLoaded\n// ======================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // ----- Safely bind events on .code-container and .copy-button -----\n  const codeContainer = document.querySelector(\".code-container\");\n  const copyButton = document.querySelector(\".copy-button\");\n  if (codeContainer) {\n    codeContainer.addEventListener(\"mouseleave\", () => {\n      clearTimeout(timeoutId);\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  }\n  if (copyButton) {\n    copyButton.addEventListener(\"mouseenter\", () => {\n      clearTimeout(timeoutId);\n      copyButton.classList.add(\"visible\");\n    });\n    copyButton.addEventListener(\"mouseleave\", () => {\n      if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          copyButton.classList.remove(\"visible\");\n        }, 1000);\n      }\n    });\n  }\n\n  // ----- Sidebar TOC + on-scroll logic -----\n  const sidebarToc = document.getElementById(\"sidebar-toc\");\n  const sidebarLinks = document.querySelector(\".sidebar-toc-links\");\n  const mainToc = document.querySelector(\".toc-container\");\n  let ticking = false;\n  if (sidebarLinks) {\n    sidebarLinks.style.scrollBehavior = \"smooth\";\n  }\n\n  // FUNCTIONALITY.JS (modified handleScroll function)\n  const handleScroll = () => {\n    if (!mainToc || !sidebarToc) {\n      return;\n    }\n    const mainTocRect = mainToc.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const headerHeight = document.querySelector(\".header\").offsetHeight; // Dynamically get header height\n    const headerOffset = headerHeight + 20; // Add a little extra offset if needed\n    const mainTocVisible = mainTocRect.bottom > headerOffset; // Simplified condition - sidebar shows when main TOC bottom is above the offset\n\n    if (mainTocVisible) {\n      sidebarToc.classList.remove(\"visible\");\n    } else {\n      sidebarToc.classList.add(\"visible\");\n      updateActiveTocLink();\n    }\n  };\n  const updateActiveTocLink = () => {\n    if (!sidebarLinks) return;\n\n    // Look for headings with IDs\n    const headings = Array.from(document.querySelectorAll(\"h1[id], h2[id], h3[id], h4[id]\")).filter(heading => heading.id);\n    const scrollPosition = window.scrollY;\n    const headerOffset = 100;\n    let currentActive = null;\n    for (const heading of headings) {\n      if (scrollPosition >= heading.offsetTop - headerOffset) {\n        currentActive = heading;\n      } else {\n        break;\n      }\n    }\n    const allLinks = sidebarLinks.querySelectorAll(\"a\");\n    allLinks.forEach(link => {\n      link.classList.remove(\"active\", \"active-parent\");\n    });\n    if (currentActive) {\n      const activeLink = sidebarLinks.querySelector(`a[href=\"#${currentActive.id}\"]`);\n      if (activeLink) {\n        activeLink.classList.add(\"active\");\n\n        // Highlight parents\n        let parent = activeLink.parentElement;\n        while (parent && parent !== sidebarLinks) {\n          if (parent.tagName === \"LI\") {\n            const parentLink = parent.querySelector(\":scope > a\");\n            if (parentLink) {\n              parentLink.classList.add(\"active-parent\");\n            }\n          }\n          parent = parent.parentElement;\n        }\n\n        // Auto-scroll in TOC if out of view\n        const linkRect = activeLink.getBoundingClientRect();\n        const tocRect = sidebarLinks.getBoundingClientRect();\n        if (linkRect.top < tocRect.top || linkRect.bottom > tocRect.bottom) {\n          activeLink.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\"\n          });\n        }\n      }\n    }\n  };\n  window.addEventListener(\"scroll\", () => {\n    console.log(\"Scroll event listener is firing!\"); // <---- ADD THIS LINE\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        handleScroll();\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n\n  // Handle smooth scrolling for sidebar links\n  if (sidebarLinks) {\n    sidebarLinks.querySelectorAll(\"a\").forEach(link => {\n      link.addEventListener(\"click\", e => {\n        e.preventDefault();\n        const targetId = link.getAttribute(\"href\").slice(1);\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          const headerOffset = 80;\n          const elementPosition = targetElement.offsetTop;\n          const offsetPosition = elementPosition - headerOffset;\n          window.scrollTo({\n            top: offsetPosition,\n            behavior: \"smooth\"\n          });\n        }\n      });\n    });\n  }\n\n  // Run initial scroll logic\n  handleScroll();\n\n  // ----- Game of Life logic -----\n  const canvas = document.getElementById(\"gameOfLife\");\n  if (canvas) {\n    // If we have the canvas, run the GOL\n\n    // 1. Random Number Generator\n    class SeededRandom {\n      constructor(seed = Date.now()) {\n        this.seed = seed;\n      }\n      next() {\n        this.seed ^= this.seed << 13;\n        this.seed ^= this.seed >> 17;\n        this.seed ^= this.seed << 5;\n        return (this.seed >>> 0) / 0x100000000;\n      }\n    }\n\n    // 2. Get 2D context\n    const ctx = canvas.getContext(\"2d\");\n    const resolution = 10;\n    const cols = canvas.width / resolution;\n    const rows = canvas.height / resolution;\n\n    // 3. Initialize local storage logic\n    function initializeGame(useSeed = false, providedSeed = null) {\n      const seed = providedSeed || Date.now();\n      console.log(seed);\n      localStorage.setItem(\"gameOfLifeUseSeed\", useSeed);\n      if (useSeed) {\n        localStorage.setItem(\"gameOfLifeSeed\", seed.toString());\n      }\n      localStorage.removeItem(\"gameOfLifeGrid\");\n      localStorage.removeItem(\"gameOfLifeInitialTimestamp\");\n      grid = buildGrid();\n      return grid;\n    }\n    function getInitialTimestamp() {\n      const stored = localStorage.getItem(\"gameOfLifeInitialTimestamp\");\n      if (!stored) {\n        const timestamp = Date.now();\n        localStorage.setItem(\"gameOfLifeInitialTimestamp\", timestamp.toString());\n        return timestamp;\n      }\n      return parseInt(stored);\n    }\n    function calculateCurrentGeneration(initialTimestamp) {\n      const timeElapsed = Date.now() - initialTimestamp;\n      // ~60 generations per second\n      return Math.floor(timeElapsed / (1000 / 60));\n    }\n\n    // 4. Building the grid\n    function buildGrid() {\n      const storedGrid = localStorage.getItem(\"gameOfLifeGrid\");\n      const initialTimestamp = getInitialTimestamp();\n      if (!storedGrid) {\n        const useSeed = localStorage.getItem(\"gameOfLifeUseSeed\") === \"true\";\n        let rng;\n        if (useSeed) {\n          const seed = parseInt(localStorage.getItem(\"gameOfLifeSeed\"));\n          rng = new SeededRandom(seed);\n        }\n\n        // create new grid\n        const newGrid = new Array(cols).fill(null).map(() => new Array(rows).fill(null).map(() => useSeed ? Math.floor(rng.next() * 2) : Math.floor(Math.random() * 2)));\n\n        // Add gliders\n        addGlider(newGrid, 1, 1);\n        addGlider(newGrid, 1, 10);\n        addGlider(newGrid, 1, 20);\n        addGlider(newGrid, 1, 30);\n        localStorage.setItem(\"gameOfLifeGrid\", JSON.stringify(newGrid));\n        return newGrid;\n      }\n\n      // If stored grid exists, forward-simulate\n      let grid = JSON.parse(storedGrid);\n      const targetGeneration = calculateCurrentGeneration(initialTimestamp);\n      for (let i = 0; i < targetGeneration; i++) {\n        grid = nextGen(grid);\n      }\n      return grid;\n    }\n    function drawGrid(grid) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let col = 0; col < grid.length; col++) {\n        for (let row = 0; row < grid[col].length; row++) {\n          const cell = grid[col][row];\n          ctx.beginPath();\n          ctx.rect(col * resolution, row * resolution, resolution - 1, resolution - 1);\n          ctx.fillStyle = cell ? \"#4a9eff\" : \"transparent\";\n          ctx.fill();\n        }\n      }\n    }\n    function countNeighbors(grid, x, y) {\n      let sum = 0;\n      for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n          let col = x + i;\n          let row = y + j;\n\n          // wrap edges\n          if (col < 0) col = cols - 1;\n          if (row < 0) row = rows - 1;\n          if (col < cols && row < rows) {\n            sum += grid[col][row];\n          }\n        }\n      }\n      sum -= grid[x][y];\n      return sum;\n    }\n    function nextGen(grid) {\n      const nextGrid = grid.map(arr => [...arr]);\n      for (let col = 0; col < grid.length; col++) {\n        for (let row = 0; row < grid[col].length; row++) {\n          const cell = grid[col][row];\n          const neighbors = countNeighbors(grid, col, row);\n          if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n            nextGrid[col][row] = 0;\n          } else if (cell === 0 && neighbors === 3) {\n            nextGrid[col][row] = 1;\n          }\n        }\n      }\n      return nextGrid;\n    }\n    function addGlider(grid, x, y) {\n      const glider = [[0, 1, 0], [0, 0, 1], [1, 1, 1]];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          let placeX = x + i;\n          let placeY = y + j;\n          if (placeX < 0) placeX = cols - 1;\n          if (placeY < 0) placeY = rows - 1;\n          if (placeX < cols && placeY < rows) {\n            grid[placeX][placeY] = glider[i][j];\n          }\n        }\n      }\n      return grid;\n    }\n\n    // 5. Initialize, run the animation\n    let grid = buildGrid();\n    function update() {\n      grid = nextGen(grid);\n      drawGrid(grid);\n      requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n\n    // We can set seeded or random here as desired.\n    // For random initialization:\n    initializeGame(false);\n\n    // For seeded initialization:\n    // initializeGame(true, 1736329082156); // Use any number as seed\n\n    /*\n        OTHER GOOD SEEDS\n     1736329157225\n    1736329263658\n      */\n  }\n});\n\n// ============================== LIBRARY OPS ============================== //\n//                                    xx                                     //\n// ============================== LIBRARY OPS ============================== //\n\nwindow.hashString = str => {\n  // Keep hashString\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash);\n};\n\n/*\n  Purpose: Returns a color for a given tag based on its type or a hash of the\n  tag name.\n  Behavior: Assigns specific colors for predefined tags (e.g., \"YT\", \"Arxiv\")\n  and generates a unique color for other tags using HSL values derived from the\n  tag's hash.\n*/\nwindow.getTagColor = function (tag) {\n  // Export getTagColor\n  switch (tag) {\n    case \"YT\":\n      return \"#FF0000\";\n    case \"Arxiv\":\n      return \"#A51C30\";\n    case \"Site\":\n      return \"#F5F5DC\";\n    default:\n      const hash = hashString(tag);\n      const hue = hash % 360;\n      const saturation = 40 + hash % 15;\n      const lightness = 30 + hash % 10;\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  }\n};\nwindow.getTextColor = function (tag) {\n  // Export getTextColor\n  if (tag === \"Site\") {\n    return \"#000000\";\n  }\n  return \"#FFFFFF\";\n};\n\n// initializeTagColors function is DOM-manipulating, we will handle tag colors in React if needed, so remove it from exports/usage here.\n// function initializeTagColors() {\n//   const tags = document.querySelectorAll(\".tags span\");\n//   tags.forEach((tag) => {\n//     const tagType = tag.getAttribute(\"data-type\");\n//     tag.style.backgroundColor = getTagColor(tagType);\n//     tag.style.color = getTextColor(tagType);\n//   });\n// }\n\n/*\n  Purpose: Limits how often a function is called during rapid events\n  (e.g., typing in a search box).\n  Behavior: Delays the execution of the provided function until a specified time\n  (wait) has passed since the last call.\n*/\nwindow.wdebounce = function (func, wait) {\n  // Export debounce\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n};\n\n/*\n  Purpose: Filters the reading list based on a search term.\n  Behavior: Compares the search term against cached text content of each item\n  and hides items that do not match.\n*/\nexport function searchItems() {\n  // Export searchItems - but we will likely rewrite this in React to work with state\n  const searchTerm = document.getElementById(\"search\").value.toLowerCase();\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach(item => {\n    const cachedText = item.dataset.cachedText || item.textContent.toLowerCase();\n    item.dataset.cachedText = cachedText; // Cache the lowercase text\n    item.style.display = cachedText.includes(searchTerm) ? \"\" : \"none\";\n  });\n  window.dispatchEvent(window.documentVisibilityChanged);\n}\n\n// Debounced version of searchItems - keep if searchItems is kept, but we might rewrite in React\n// const debouncedSearchItems = debounce(searchItems, 300); // No need to export if only used internally in functionality.js - but we are removing DOM manipulation now\n\nwindow.formatDate = function (dateString) {\n  // Export formatDate\n  if (dateString === \"Not specified\") return dateString;\n  const parsed = new Date(dateString);\n  if (isNaN(parsed)) return dateString;\n  return parsed.toLocaleString(\"en-US\", {\n    month: \"short\",\n    year: \"numeric\"\n  });\n};\n\n/*\nPurpose: Dynamically generates the HTML for the reading list based on provided data.\nBehavior: Iterates over the data, creates list items with appropriate metadata,\nand appends them to the reading list container.\n*/\n// function generateReadingListHTML(data) { // REMOVE generateReadingListHTML - React will handle rendering\n//   console.log(\"generateReadingListHTML is called with data:\", data); // DEBUGGING: Check if function is called and with what data\n//   const readingList = document.getElementById(\"reading-list\");\n//   console.log(\"readingList element:\", readingList); // DEBUGGING: Check if readingList element is found\n//   if (!readingList) {\n//     console.error(\"readingList element not found!\");\n//     return;\n//   }\n//   readingList.innerHTML = \"\"; // Clear existing content\n\n//   data.forEach((item) => {\n//     const li = document.createElement(\"li\");\n//     li.setAttribute(\"data-release\", item.releaseDate);\n//     li.setAttribute(\"data-time\", item.readTime);\n//     li.setAttribute(\"data-read\", item.isRead);\n\n//     const html = `\n//     ${item.isRead ? '<span class=\"read-indicator\">✓</span>' : \"\"}\n//     <div class=\"item-header\">\n//       <div class=\"item-title\">\n//         <strong>\"${item.title}\" by ${item.author}</strong>\n//         <span class=\"meta\">\n//           ${item.isRead ? \"Read: \" : \"\"}\n//           ${formatDate(item.releaseDate)} |\n//           <span class=\"no-break\">Est. Time ${item.readTime} hours</span>\n//         </span>\n//       </div>\n//       <div class=\"tags\">\n//         ${item.tags\n//           .map(\n//             (tag) =>\n//               `<span data-type=\"${tag}\" onclick=\"filterByTag('${tag}')\">${tag}</span>`\n//           )\n//           .join(\"\")}\n//       </div>\n//     </div>\n//     <div class=\"description\">\n//       ${item.description}\n//     </div>\n//     ${\n//       item.downloadLink\n//         ? `<a class=\"download-link\" href=\"${item.downloadLink}\" download>Source</a>`\n//         : \"\"\n//     }\n//   `;\n\n//     li.innerHTML = html;\n//     readingList.appendChild(li);\n//   });\n\n//   initializeTagColors(); // initializeTagColors is also DOM manipulation\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", () => { // REMOVE DOMContentLoaded listener - React handles rendering\n//   console.log(\"DOMContentLoaded event listener in functionality.js is running\"); // DEBUGGING: Check if this event listener is reached\n//   // Check if readingListData is available in global scope (if that's the intent)\n//   if (typeof readingListData !== \"undefined\") {\n//     console.log(\"readingListData found in global scope:\", readingListData); // DEBUGGING: Check if readingListData is accessible\n//     generateReadingListHTML(readingListData);\n//   } else {\n//     console.warn(\n//       \"readingListData is not defined in global scope when DOM is ready.\"\n//     ); // DEBUGGING: Warn if readingListData is missing\n//   }\n\n//   const searchInput = document.getElementById(\"search\");\n//   if (searchInput) {\n//     searchInput.addEventListener(\"input\", debouncedSearchItems);\n//   }\n//   initializeTagColors(); // initializeTagColors is also DOM manipulation\n// });\n\nexport let readFilterState = 0; // Export, but we'll likely manage filter state in React\n\n/*\n  Purpose: Filters the reading list to show only read, unread, or all items.\n  Behavior: Cycles through three states (all, read, unread) and updates the\n  button text and item visibility accordingly.\n*/\nwindow.toggleReadFilter = function (button) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n  switch (readFilterState) {\n    case 0:\n      button.textContent = \"Filter: Read\";\n      button.classList.add(\"active\");\n      items.forEach(item => {\n        const isRead = item.getAttribute(\"data-read\") === \"true\";\n        item.style.display = isRead ? \"\" : \"none\";\n      });\n      readFilterState = 1;\n      break;\n    case 1:\n      button.textContent = \"Filter: Unread\";\n      items.forEach(item => {\n        const isRead = item.getAttribute(\"data-read\") === \"true\";\n        item.style.display = !isRead ? \"\" : \"none\";\n      });\n      readFilterState = 2;\n      break;\n    case 2:\n      button.textContent = \"Filter: All\";\n      button.classList.remove(\"active\");\n      items.forEach(item => {\n        item.style.display = \"\";\n      });\n      readFilterState = 0;\n      break;\n  }\n  window.dispatchEvent(window.documentVisibilityChanged);\n};\n\n/*\n  Purpose: Sorts the reading list by a specified criteria\n  (e.g., release date or read time).\n  Behavior: Toggles between ascending, descending, and unsorted states,\n  updating the button UI and reordering the list.\n*/\nwindow.toggleSort = function (button, criteria) {\n  // Export, but we'll rewrite in React\n  const currentOrder = button.dataset.order || \"unsorted\";\n  let newOrder;\n  if (currentOrder === \"unsorted\") {\n    newOrder = \"asc\";\n  } else if (currentOrder === \"asc\") {\n    newOrder = \"desc\";\n  } else {\n    newOrder = \"unsorted\";\n  }\n  const buttons = document.querySelectorAll(\".sort-bar button\");\n  buttons.forEach(btn => {\n    btn.classList.remove(\"active\");\n    const arrowSpan = btn.querySelector(\".sort-arrow\");\n    if (arrowSpan) arrowSpan.textContent = \"\";\n  });\n  if (newOrder !== \"unsorted\") {\n    button.classList.add(\"active\");\n    button.dataset.order = newOrder;\n    const arrowSpan = button.querySelector(\".sort-arrow\");\n    if (arrowSpan) arrowSpan.textContent = newOrder === \"asc\" ? \"↑\" : \"↓\";\n    sortBy(criteria, newOrder);\n  } else {\n    button.dataset.order = \"unsorted\";\n    resetList(false);\n  }\n};\n\n/*\n  Purpose: Filters the reading list by a specific type (e.g., \"YT\", \"Arxiv\").\n  Behavior: Highlights the button and shows only items with the specified tag.\n  Clicking again resets the filter.\n*/\nwindow.toggleFilterType = function (button, type) {\n  // Export, but we'll rewrite in React\n  const isActive = button.classList.contains(\"active\");\n  const buttons = document.querySelectorAll(\".sort-bar button\");\n  buttons.forEach(btn => {\n    if (btn !== document.getElementById(\"filter-read\")) {\n      btn.classList.remove(\"active\");\n      btn.style.removeProperty(\"--active-color\");\n      btn.style.removeProperty(\"--active-text-color\");\n    }\n  });\n  if (!isActive) {\n    button.classList.add(\"active\");\n    switch (type) {\n      case \"YT\":\n        button.style.setProperty(\"--active-color\", \"#FF0000\");\n        button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n        break;\n      case \"Arxiv\":\n        button.style.setProperty(\"--active-color\", \"#A51C30\");\n        button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n        break;\n      case \"Site\":\n        button.style.setProperty(\"--active-color\", \"#F5F5DC\");\n        button.style.setProperty(\"--active-text-color\", \"#000000\");\n        break;\n    }\n    filterByType(type);\n  } else {\n    button.style.removeProperty(\"--active-color\");\n    button.style.removeProperty(\"--active-text-color\");\n    resetList();\n    window.dispatchEvent(window.documentVisibilityChanged);\n  }\n};\n\n/*\n  Purpose: Sorts the reading list items based on a criteria and order.\n  Behavior: Reorders the items in the list container based on release date or\n  read time, in ascending or descending order.\n*/\nwindow.sortBy = function (criteria, order) {\n  // Export, but we'll rewrite in React\n  const list = document.getElementById(\"reading-list\");\n  const items = Array.from(list.children);\n  items.sort((a, b) => {\n    let valueA = criteria === \"release\" ? new Date(a.dataset.release).getTime() || 0 : parseFloat(a.dataset.time) || 0;\n    let valueB = criteria === \"release\" ? new Date(b.dataset.release).getTime() || 0 : parseFloat(b.dataset.time) || 0;\n    return order === \"asc\" ? valueA - valueB : valueB - valueA;\n  });\n  items.forEach(item => list.appendChild(item));\n};\n\n/*\n  Purpose: Filters the reading list to show only items of a specific type.\n  Behavior: Hides items that do not have the specified tag.\n*/\nwindow.filterByType = function (type) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach(item => {\n    const tags = Array.from(item.querySelectorAll(\".tags span\"));\n    const hasTag = tags.some(tag => tag.dataset.type === type);\n    item.style.display = hasTag ? \"\" : \"none\";\n  });\n  window.dispatchEvent(window.documentVisibilityChanged);\n};\n\n/*\n  Purpose: Adds a tag to the active filters and updates the reading list.\n  Behavior: Creates a new filter tag in the active filters section and refreshes\n  the list to show only items matching all active tags.\n*/\nwindow.filterByTag = function (tag) {\n  // Export, but we'll rewrite in React\n  const activeTags = document.getElementById(\"active-tags\");\n  if (!Array.from(activeTags.children).some(t => t.textContent === tag)) {\n    const tagSpan = document.createElement(\"span\");\n    tagSpan.textContent = tag;\n    tagSpan.dataset.type = tag;\n    tagSpan.style.backgroundColor = getTagColor(tag);\n    tagSpan.style.color = getTextColor(tag);\n    tagSpan.onclick = () => {\n      tagSpan.remove();\n      refreshFilters();\n    };\n    activeTags.appendChild(tagSpan);\n    refreshFilters();\n  }\n};\n\n/*\n  Purpose: Updates the reading list based on the currently active filters.\n  Behavior: Shows only items that match all active tags and hides the rest.\n*/\nwindow.refreshFilters = function () {\n  // Export, but we'll rewrite in React\n  const activeTags = Array.from(document.getElementById(\"active-tags\").children).map(t => t.textContent);\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach(item => {\n    const tags = Array.from(item.querySelectorAll(\".tags span\")).map(tag => tag.textContent);\n    const matches = activeTags.every(tag => tags.includes(tag));\n    item.style.display = matches || activeTags.length === 0 ? \"\" : \"none\";\n  });\n  window.dispatchEvent(window.documentVisibilityChanged);\n};\n\n/*\n  Purpose: Resets the reading list to show all items.\n  Behavior: Removes all filters and updates the list visibility. Optionally\n  triggers a graph update if shouldUpdateGraph is true.\n*/\nwindow.resetList = function (shouldUpdateGraph = true) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach(item => {\n    item.style.display = \"\";\n  });\n  if (shouldUpdateGraph) {\n    window.dispatchEvent(window.documentVisibilityChanged);\n  }\n};\n\n// document.addEventListener(\"DOMContentLoaded\", initializeTagColors); // REMOVE this line\n\n// window.readingListData = [\n//   {\n//     title: \"From Softmax to Sparsemax\",\n//     author: \"Martins et. al\",\n//     description:\n//       \"Proposes sparsemax, a new activation function similar to the traditional softmax, but able to output sparse probabilities.\",\n//     tags: [\"Machine Learning\", \"Activation Functions\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2016-02-08\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1602.02068\",\n//   },\n//   {\n//     title: \"Monte Carlo Methods in Financial Engineering\",\n//     author: \"Not specified\",\n//     description:\n//       \"A comprehensive guide on Monte Carlo methods applied in financial engineering.\",\n//     tags: [\"Finance\", \"Site\"],\n//     readTime: 16.3,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://www.bauer.uh.edu/spirrong/Monte_Carlo_Methods_In_Financial_Engineering.pdf\",\n//   },\n//   {\n//     title: \"Information Theory: A Tutorial Introduction\",\n//     author: \"University of Sheffield\",\n//     description: \"Introduces the main ideas in Shannon’s theory.\",\n//     tags: [\"Information Theory\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2019-06-13\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1802.05968\",\n//   },\n//   {\n//     title: \"What Every Programmer Should Know About Memory\",\n//     author: \"Redhat\",\n//     description: \"An in-depth look at memory management for programmers.\",\n//     tags: [\"Programming\", \"Site\"],\n//     readTime: 6.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://people.freebsd.org/~lstewart/articles/cpumemory.pdf\",\n//   },\n//   {\n//     title:\n//       \"PowerSGD: Practical Low-Rank Gradient Compression for Distributed Optimization\",\n//     author: \"EPFL\",\n//     description:\n//       \"Proposes gradient compressor achieving test performance on par with SGD with consistent wall-clock speedups.\",\n//     tags: [\"Optimization\", \"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1,\n//     releaseDate: \"2020-02-18\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1905.13727\",\n//   },\n//   {\n//     title: \"Step-by-Step Diffusion: An Elementary Tutorial\",\n//     author: \"University of Montreal\",\n//     description: \"A tutorial on diffusion models.\",\n//     tags: [\"Diffusion Models\", \"Tutorial\", \"Arxiv\"],\n//     readTime: 1.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.08929\",\n//   },\n//   {\n//     title:\n//       \"A Loss Curvature Perspective on Training Instability in Deep Learning\",\n//     author: \"Google\",\n//     description:\n//       \"Combine learning rate, model structure, and weight initialization to analyze the evolution of Hessian loss.\",\n//     tags: [\"Deep Learning\", \"Optimization\", \"Arxiv\"],\n//     readTime: 1,\n//     releaseDate: \"2020-10-08\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2110.04369\",\n//   },\n//   {\n//     title: \"Networks, Crowds, and Markets\",\n//     author: \"Cornell University\",\n//     description: \"A book exploring networks, crowds, and markets.\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 23.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://www.cs.cornell.edu/home/kleinber/networks-book/networks-book.pdf\",\n//   },\n//   {\n//     title: \"Towards Practical Second Order Optimization for Deep Learning\",\n//     author: \"Anonymous\",\n//     description:\n//       \"Presents a scalable 2nd-order preconditioner with significant convergence and wall-clock time improvements compared to 1st-order methods.\",\n//     tags: [\"Optimization\", \"Deep Learning\", \"Site\"],\n//     readTime: 0.6,\n//     releaseDate: \"2021-01-01\",\n//     isRead: false,\n//     downloadLink: \"https://openreview.net/references/pdf?id=80B6V-eoFP\",\n//   },\n//   {\n//     title: \"Deep Bellman Hedging\",\n//     author: \"Buehler et al.\",\n//     description: \"A paper on reinforcement learning and hedging.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2207.00932\",\n//   },\n//   {\n//     title:\n//       \"A Large Batch Optimizer Reality Check: Traditional, Generic Optimizers Suffice Across Batch Sizes\",\n//     author: \"Google\",\n//     description:\n//       \"Refutes performance claims of optimizers built around large batch sizes.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2021-06-09\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2102.06356\",\n//   },\n//   {\n//     title: \"Information Theory, Inference, and Learning Algorithms\",\n//     author: \"Cambridge University\",\n//     description:\n//       \"A comprehensive book on information theory, inference, and learning algorithms.\",\n//     tags: [\"Machine Learning\", \"Algorithms\", \"Site\"],\n//     readTime: 19.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://www.inference.org.uk/itprnn/book.pdf\",\n//   },\n//   {\n//     title: \"Vector Quantized Models for Planning\",\n//     author: \"Not specified\",\n//     description:\n//       \"Presents using discrete autoencoders to capture the multiple effects of an action in a stochastic environment, using MCTS to plan over both actions and discrete latent variables. Significantly outperforming MuZero on a stochastic interpretation of chess.\",\n//     tags: [\"Reinforcement Learning\", \"Autoencoders\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2021-08-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2106.04615\",\n//   },\n//   {\n//     title: \"Programming Massively Parallel Applications\",\n//     author: \"David B. Kirk\",\n//     description: \"A book on programming massively parallel applications.\",\n//     tags: [\"Parallel Computing\", \"Site\"],\n//     readTime: 18.8,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://github.com/h3ct0rjs/HighPerformanceComputing/blob/master/BookRef/Programming%20Massively%20Parallel%20Processors.pdf\",\n//   },\n//   {\n//     title: \"Hyperparameter Optimization Is Deceiving Us, and How to Stop It\",\n//     author: \"Cornell University\",\n//     description:\n//       \"Provides a theoretical grounding for process epistemic hyperparameter optimization (EHPO) to avoid deception by hyperparams.\",\n//     tags: [\"Hyperparameter Optimization\", \"Machine Learning\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2021-10-26\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2102.03034\",\n//   },\n//   {\n//     title:\n//       \"Torch.FX: a Practical Program Capture and Transformation for DL in Python\",\n//     author: \"Horace He\",\n//     description:\n//       \"Studies designs for program capture in the typical deep learning use case to propose a library optimizing for developer productivity.\",\n//     tags: [\"Deep Learning\", \"Libraries\", \"Arxiv\"],\n//     readTime: 0.7,\n//     releaseDate: \"2022-03-04\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2112.08429\",\n//   },\n//   {\n//     title: \"Set Theory\",\n//     author: \"Not specified\",\n//     description: \"A book on set theory.\",\n//     tags: [\"Mathematics\", \"Site\"],\n//     readTime: 1,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"http://www.alefenu.com/libri/topologymunkres.pdf\",\n//   },\n//   {\n//     title: \"Omnigrok: Grokking Beyond Algorithmic Data\",\n//     author: \"MIT\",\n//     description:\n//       \"Understands grokking by analyzing NN loss landscapes, identifying the mismatch between training and test loss as the cause for grokking.\",\n//     tags: [\"Neural Networks\", \"Optimization\", \"Grokking\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2023-03-23\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2210.01117\",\n//   },\n//   {\n//     title: \"Lie Groups\",\n//     author: \"University of Ottowa\",\n//     description: \"A book on Lie groups.\",\n//     tags: [\"Mathematics\", \"Lie Groups\", \"Site\"],\n//     readTime: 1,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://alistairsavage.ca/mat4144/notes/MAT4144-5158-LieGroups.pdf\",\n//   },\n//   {\n//     title: \"Finding Neurons in a Haystack\",\n//     author: \"MIT\",\n//     description:\n//       \"Shows the progression of, violation of, and features embedded in neurons at varying depths of LLM.\",\n//     tags: [\"Interpretability\", \"Neural Networks\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2023-06-02\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2305.01610\",\n//   },\n//   {\n//     title: \"Meta-Learning\",\n//     author: \"Lilian Weng\",\n//     description: \"A post on meta-learning.\",\n//     tags: [\"Meta-Learning\", \"Machine Learning\", \"Site\"],\n//     readTime: 2.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://lilianweng.github.io/posts/2018-11-30-meta-learning/\",\n//   },\n//   {\n//     title: \"Uncovering Mesa-optimization algorithms in Transformers\",\n//     author: \"Google\",\n//     description:\n//       \"Reverse engineers Transformers to determine that performance comes from an architectural bias towards mesa-optimization.\",\n//     tags: [\"Transformers\", \"Optimization\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.9,\n//     releaseDate: \"2023-09-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2309.05858\",\n//   },\n//   {\n//     title: \"Why do we need Weight Decay in modern Deep Learning?\",\n//     author: \"EPFL\",\n//     description:\n//       \"Present a unifying perspective from to say that weight decay changes the training dynamics in a desirable way.\",\n//     tags: [\"Deep Learning\", \"Optimization\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2023-10-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2310.04415\",\n//   },\n//   {\n//     title:\n//       \"When, Why and How Much? Adaptive Learning Rate Scheduling by Refinement\",\n//     author: \"Meta\",\n//     description:\n//       \"Develops theory supporting the linear decay schedules and refinement techniques, establishing SOTA performance in theory and practice.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 1.1,\n//     releaseDate: \"2023-10-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2310.07831\",\n//   },\n//   {\n//     title: \"One Wide Feedforward Network is All You Need\",\n//     author: \"Apple\",\n//     description:\n//       \"Observes a high redundancy in the Feed-Forward layers of Transformers to unlock substantial gains in accuracy & latency.\",\n//     tags: [\"LLMs\", \"Optimization\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2023-10-21\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2309.01826\",\n//   },\n//   {\n//     title: \"DiLoCo: Distributed Low-Communication Training of Language Models\",\n//     author: \"Google\",\n//     description:\n//       \"Proposes a distributed optimization algorithm to train LLMs on islands of poorly connected devices.\",\n//     tags: [\"LLMs\", \"Optimization\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-12-02\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2311.08105\",\n//   },\n//   {\n//     title:\n//       \"Reinforcement Learning With Sparse-executing Action via Sparsity Regularization\",\n//     author: \"Nanjing University\",\n//     description:\n//       \"Proposes a spinoff of Markov Decision Processes to account for need to sparsify actions.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2024-07-22\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2105.08666\",\n//   },\n//   {\n//     title: \"Literature Review of Sampling Techniques\",\n//     author: \"njkumar\",\n//     description:\n//       \"Explains the many types of Sampling techniques for ML Models and their differing strengths.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.3,\n//     releaseDate: \"2024-08-10\",\n//     isRead: true,\n//     downloadLink: \"https://njkumar.com/literature-review-sampling-techniques/\",\n//   },\n//   {\n//     title:\n//       \"Learning to (Learn at Test Time): RNNs with Expressive Hidden States\",\n//     author: \"Sun et al.\",\n//     description:\n//       \"Proposes a new sequence modeling layers with O(n) complexity and an expressive ML model hidden state.\",\n//     tags: [\"RNNs\", \"Machine Learning\", \"Arxiv\"],\n//     readTime: 1.1,\n//     releaseDate: \"2024-08-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.04620\",\n//   },\n//   {\n//     title:\n//       \"Tree Attention: Topology-Aware Decoding for Long-Context Attention on GPU Clusters\",\n//     author: \"EleutherAI\",\n//     description:\n//       \"Reveals a self-attention computation parallelizable across multiple GPUs.\",\n//     tags: [\"Attention Mechanisms\", \"Parallel Computing\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-08-14\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2408.04093\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-Prover-V1.5: Harnessing Proof Assistant Feedback for Reinforcement Learning and Monte-Carlo Tree Search\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"Introduces a dataset & RL with proof-solving feedback for fine-tuning on top of MCTS for generating more lush proof paths.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.9,\n//     releaseDate: \"2024-08-15\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2408.08152\",\n//   },\n//   {\n//     title: \"The LLama3 herd of models\",\n//     author: \"Meta\",\n//     description:\n//       \"Presents the results of experiments which integrate image, video, and speech capabilities into Llama 3.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 3.7,\n//     releaseDate: \"2024-08-15\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.21783\",\n//   },\n//   {\n//     title: \"The AdeMAMix optimizer: Better, Faster, Older\",\n//     author: \"Apple\",\n//     description:\n//       \"Halves tokens required to train LLM while slowing down forgetting through leveraging the need to remember far back gradients.\",\n//     tags: [\"Optimization\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.5,\n//     releaseDate: \"2024-09-05\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2409.03137\",\n//   },\n//   {\n//     title:\n//       \"Compute Better Spent: Replacing Dense Layers with Structured Matrices\",\n//     author: \"Qiu et al.\",\n//     description:\n//       \"Explores structured matrices as replacements for dense matrices as models scale.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 0.9,\n//     releaseDate: \"2024-10-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.06248\",\n//   },\n//   {\n//     title: \"Financial Statement Analysis with Large Language Models\",\n//     author: \"Kim et al.\",\n//     description:\n//       \"Investigates whether LLMs can successfully perform financial statement analysis similarly to professional human analysts.\",\n//     tags: [\"LLMs\", \"Finance\", \"Arxiv\"],\n//     readTime: 1.6,\n//     releaseDate: \"2024-10-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.17866\",\n//   },\n//   {\n//     title:\n//       \"The Surprising Effectiveness of Test-Time Training for Abstract Reasoning\",\n//     author: \"MIT\",\n//     description:\n//       \"Investigates the effectiveness of test-time training (TTT) as a mechanism for improving reasoning capabilities, using ARC as a benchmark.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 0.7,\n//     releaseDate: \"2024-11-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2411.07279\",\n//   },\n//   {\n//     title: \"Transformers meet Neural Algorithmic Reasoners\",\n//     author: \"Google\",\n//     description:\n//       \"Proposes a novel combination of Transformers with GNN-based neural algorithmic reasoners (NARs) as a hybrid architecture demonstrating significant gains over Transformer-only models for algorithmic reasoning.\",\n//     tags: [\"LLMs\", \"GNNs\", \"Arxiv\"],\n//     readTime: 0.4,\n//     releaseDate: \"2024-06-13\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.09308\",\n//   },\n//   {\n//     title: \"On Empirical Comparison of Optimizers\",\n//     author: \"Choi et al.\",\n//     description:\n//       \"Gives tips around tuning often ignored hyperparameters of adaptive gradient methods and raise concerns about fairly benchmarking optimizers for NN training.\",\n//     tags: [\"Optimizers\", \"Deep Learning\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2020-06-16\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1910.05446\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-Coder-V2: Breaking the Barrier of Closed-Source Models in Code Intelligence\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"DeepSeek-V2 is pre-trained with 6 trillion additional tokens achieving superior coding performance to closed-source models.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2024-06-17\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.11931\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-V2: A Strong, Economical, and Efficient Mixture-of-Experts Language Model\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"Presents DeepSeek-V2, a strong MoE language model characterized by economical training and efficient inference.\",\n//     tags: [\"MoEs\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2024-06-19\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2405.04434\",\n//   },\n//   {\n//     title: \"Why Transformers need Adam: A Hessian Perspective\",\n//     author: \"University of Hong Kong\",\n//     description:\n//       \"Provides an explanation through the lens of Hessian of why Adam outperforms SGD on Transformer models.\",\n//     tags: [\"Optimizations\", \"Arxiv\"],\n//     readTime: 1.4,\n//     releaseDate: \"2024-10-21\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2402.16788\",\n//   },\n//   {\n//     title: \"Sparse Crosscoders for Cross-Layer Features and Model Diffing\",\n//     author: \"Anthropic\",\n//     description:\n//       \"Introduces sparse crosscoders, a variant of sparse autoencoders or transcoders for understanding models in superposition.\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 0.6,\n//     releaseDate: \"2024-10-25\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://transformer-circuits.pub/2024/crosscoders/index.html\",\n//   },\n//   {\n//     title: \"Beyond A*\",\n//     author: \"Meta\",\n//     description:\n//       \"Shows a Transformer model to optimally solve unseen Sokoban puzzles 93.7% of the time with up to 26.8% fewer steps than the A*.\",\n//     tags: [\"Transformers\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2024-04-26\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2402.14083\",\n//   },\n//   {\n//     title: \"Beating SPACE EXPLORATION | The 300 Hour Factorio Mod\",\n//     author: \"DoshDoshington\",\n//     description:\n//       \"Playthrough of the Space Exploration Modpack for the base-building logistics management game, Factorio.\",\n//     tags: [\"Factorio\", \"YT\"],\n//     readTime: 3.5,\n//     releaseDate: \"2022-08-09\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=8hRJ-CcwvrI&t=3668s\",\n//   },\n//   {\n//     title: \"LPUs, TPUs & GPUs w/ Jonathan Ross, Founder Groq\",\n//     author: \"Lumida Wealth\",\n//     description:\n//       \"Interview with the founder of breakout AI Accelerator lab Groq on the state of the art in LLM Hardware.\",\n//     tags: [\"Parallel Computing\", \"Hardware\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2023-12-03\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=gE8SvBqMf8o&t=989s\",\n//   },\n//   {\n//     title:\n//       \"o3 - Tradeoffs of Heuristics, Tree Search, External Memory, In-built Bias\",\n//     author: \"John Tan Chong Min\",\n//     description:\n//       \"Slideshow lecture from John about the SOTA and limitations in LLM Reasoning.\",\n//     tags: [\"LLMs\", \"Reinforcement Learning\", \"Meta-Learning\", \"YT\"],\n//     readTime: 4.0,\n//     releaseDate: \"2024-12-30\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=f5obaHiOog4&t=5986s\",\n//   },\n//   {\n//     title: \"The State of Reasoning\",\n//     author: \"Nathan Lambert\",\n//     description: \"NeurIPS 2024 talk on the attempts to teach LLMs to Reason\",\n//     tags: [\"LLMs\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-03\",\n//     isRead: false,\n//     downloadLink: \"https://www.youtube.com/watch?v=skT89EvIjrc\",\n//   },\n//   {\n//     title: \"CUDA Programming Course\",\n//     author: \"freeCodeCamp.org\",\n//     description:\n//       \"Tutorial on the implementation details of coding in the CUDA programming language.\",\n//     tags: [\"Programming\", \"Parallel Computing\", \"YT\"],\n//     readTime: 12,\n//     releaseDate: \"2024-09-24\",\n//     isRead: false,\n//     downloadLink: \"https://www.youtube.com/watch?v=86FAWCzIe_4&t=1s\",\n//   },\n//   {\n//     title:\n//       \"Deep Symbolic Regression: Recovering Math Expressions from Data via Risk-Seeking Policy Gradients\",\n//     author: \"Lawrence Livermore Laboratory\",\n//     description:\n//       \"Brenden Petersen explains how symbolic regression transforms data-fitting into a problem of Reinforcement Learning over language space.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2021-06-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=o43X6Hni6tU&t=2715s\",\n//   },\n//   {\n//     title: \"AI for physics & physics for AI\",\n//     author: \"MIT\",\n//     description:\n//       \"Description of the AI Feynman project for Symbolic Regression on Physics Data.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pkJkHB_c3nA&t=46s\",\n//   },\n//   {\n//     title: \"AI for physics & physics for AI\",\n//     author: \"MIT\",\n//     description:\n//       \"Description of the AI Feynman project for Symbolic Regression on Physics Data.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pkJkHB_c3nA&t=46s\",\n//   },\n//   {\n//     title: \"Parables on the Power of Planning in AI: From Poker to Diplomacy\",\n//     author: \"Noam Brown\",\n//     description:\n//       \"OpenAI's Noam Brown explains the story of the power of applying planning to AI in Games.\",\n//     tags: [\"LLMs\", \"Reinforcement Learning\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2024-09-17\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=eaAonE58sLU\",\n//   },\n//   {\n//     title:\n//       \"The Wisdom (and Madness) of Crowds: Political Markets as Election Predictors\",\n//     author: \"Aswath Damodaran\",\n//     description:\n//       \"Examines the history of thought around the conditions under which the crowd or market's judgment becomes wise.\",\n//     tags: [\"Markets\", \"Finance\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-09-07\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=LejPvcakKpE&t=284s\",\n//   },\n//   {\n//     title:\n//       \"@Asianometry & Dylan Patel – How the Semiconductor Industry Actually Works\",\n//     author: \"Dwarkesh Patel\",\n//     description:\n//       \"Conversation between two Industry watchdogs on the state of play in US-China AI Race.\",\n//     tags: [\"Distributed Computing\", \"Hardware\", \"YT\"],\n//     readTime: 2.5,\n//     releaseDate: \"2024-10-04\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pE3KKUKXcTM\",\n//   },\n//   {\n//     title: \"The Insane Engineering of Minecraft's Most Powerful Mobfarm\",\n//     author: \"cubicmetre\",\n//     description:\n//       \"exploring the End of Light mobfarm and how it pushes mobfarming in Minecraft to the game's absolute limits.\",\n//     tags: [\"Minecraft\", \"YT\"],\n//     readTime: 2.0,\n//     releaseDate: \"2024-08-07\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=v1eouiqVfZY\",\n//   },\n//   {\n//     title: \"Sun Valley Writers' Conference with Ezra Klein\",\n//     author: \"Ezra Klein\",\n//     description:\n//       \"Discussion on AI, the tie between zoning and homelessness, polarizing politics, and the intersection of government and technology.\",\n//     tags: [\"Policy\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-08-17\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=nRYFyH8-0oc\",\n//   },\n//   {\n//     title: \"A Conversation with Ezra Klein about Liberalism\",\n//     author: \"Ezra Klein\",\n//     description:\n//       \"Reflecting on Democratic governments inability to build real things in the real world quickly and affordably.\",\n//     tags: [\"Policy\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2023-12-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=7OyLHeJB15c&t=671s\",\n//   },\n//   {\n//     title: \"Arguments for Atheism\",\n//     author: \"Alex O'Connor\",\n//     description:\n//       \"Two Doctoral Students in the Philosophy of Theology construct a tier list of arguments for Atheism.\",\n//     tags: [\"Philosophy\", \"YT\"],\n//     readTime: 2.5,\n//     releaseDate: \"2024-06-23\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=s_5vfQE6_yE\",\n//   },\n//   {\n//     title: \"How massive Cerebras chips rival Nvidia GPUs for AI\",\n//     author: \"Dr Waku\",\n//     description:\n//       \"Discussion with key engineer at Cerebras AI Accelerator on their unique memory architectures unique use-case in LLMs.\",\n//     tags: [\"Parallel Computing\", \"LLMs\", \"Hardware\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2024-12-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=qC_lCFTOJU0&t=740s\",\n//   },\n//   {\n//     title: \"Populism, Media Revolutions, and Our Terrible Moment\",\n//     author: \"Hank Green\",\n//     description:\n//       \"Rant from Hank Green on the destruction of trust & reality in society by the Internet's revolutionary Algorithmic Realities.\",\n//     tags: [\"Politics\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-11-22\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=d8PndpFPL8g\",\n//   },\n//   {\n//     title: \"o-models, beyond classical DL\",\n//     author: \"Francois Chollet\",\n//     description:\n//       \"Description of the ARG-AGI model evaluation test set and how current Deep Learning Architectures fail to encapsulate Symbolic reasoning\",\n//     tags: [\"Deep Learning\", \"Symbolic Systems\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2025-01-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=w9WE1aOPjHc\",\n//   },\n//   {\n//     title: \"Let this method tune hyper-parameters for you!\",\n//     author: \"Tunadorable\",\n//     description:\n//       \"Stepping through, analyzing, and explaining the muP method for controlling optimal hyperparameter divergence with model scaling.\",\n//     tags: [\"Hyperparameter Optimization\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-06\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=-T9pBZ2nBkc\",\n//   },\n//   {\n//     title: \"Let this method tune hyper-parameters for you!\",\n//     author: \"Tunadorable\",\n//     description:\n//       \"Stepping through, analyzing, and explaining the muP method for controlling optimal hyperparameter divergence with model scaling.\",\n//     tags: [\"Hyperparameter Optimization\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-06\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=-T9pBZ2nBkc\",\n//   },\n//   {\n//     title: \"The Practitioner's Guide to the Maximal Update Parameterization\",\n//     author: \"Eleuther.AI\",\n//     description:\n//       \"Explores the implementation details of mutransfer & basis it's in statistical properties as well as empirically tests to verify the technique.\",\n//     tags: [\"Hyperparameter Optimization\", \"Deep Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-09-19\",\n//     isRead: true,\n//     downloadLink: \"https://blog.eleuther.ai/mutransfer/\",\n//   },\n//   {\n//     title: \"Git Version Control-- CS61\",\n//     author: \"Harvard\",\n//     description:\n//       \"Harvard CS61 Introductory Guide to Git Version Control, read this for CS30 Course at Brown University\",\n//     tags: [\"Git\", \"Site\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-11-0\",\n//     isRead: true,\n//     downloadLink: \"https://cs61.seas.harvard.edu/site/ref/git/#gsc.tab=0\",\n//   },\n//   {\n//     title: \"git - the simple guide\",\n//     author: \"\",\n//     description:\n//       \"beautifully designed scroll-based description of git which specializes in simple descriptions of complex commands\",\n//     tags: [\"Roger Dudler\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-1-1\",\n//     isRead: true,\n//     downloadLink: \"https://rogerdudler.github.io/git-guide/\",\n//   },\n//   {\n//     title: \"Treadmill: Attributing the Source of Tail Latency\",\n//     author: \"Meta\",\n//     description:\n//       \"decomposes features of request tail latency into an evaluation methodology to reduce the 99th-percentile latency by 43% and its variance by 93%\",\n//     tags: [\"Distributed Systems\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2016-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.jasonmars.org/wp-content/uploads/2020/04/ISCA.2016.47.pdf\",\n//   },\n//   {\n//     title: \"Open Versus Closed: A Cautionary Tale\",\n//     author: \"CMU\",\n//     description:\n//       \"Illustrates the behavior differences b/w closed & open sourced models in real-world settings to motivate a proposed partly open system model for diagnostic workload generation\",\n//     tags: [\"Distributed Systems\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2006-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.usenix.org/legacy/event/nsdi06/tech/full_papers/schroeder/schroeder.pdf\",\n//   },\n//   {\n//     title: \"Quantile Regression\",\n//     author: \"sklearn\",\n//     description:\n//       \"Quick description of the math behind & motivation behind Quantile Regression (as opposed to OLS Linear Regression, and how to use sklearn to implement it.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://scikit-learn.org/dev/auto_examples/linear_model/plot_quantile_regression.html\",\n//   },\n//   {\n//     title: \"Interpretability in Parameter Space\",\n//     author: \"Apollo\",\n//     description: \"Introduced method to decompose a NN params into components\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2025-01-24\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2501.14926\",\n//   },\n//   {\n//     title: \"The Mythos of Model Interpretability\",\n//     author: \"Zachary C. Lipton\",\n//     description:\n//       \"Old paper we went over for CS2222 outlining reasons to want, and properties you would expect from, Interpretable models\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"2017-03-06\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1606.03490\",\n//   },\n//   {\n//     title: \"The Leaky Bucket Theory of Network Effects\",\n//     author: \"Dan Hockenmaier\",\n//     description:\n//       \"A framework for understanding the strength of a marketplace’s network effect\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-12-09\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.danhock.co/p/the-leaky-bucket-theory-of-network-effects?utm_source=profile&utm_medium=reader2\",\n//   },\n//   {\n//     title: \"Why Did DoorDash Win?\",\n//     author: \"Dan Hockenmaier\",\n//     description:\n//       \"A rough description of the process by which Doordash rose to dominate the food delivery market\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-22\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.danhock.co/p/why-did-doordash-win?utm_source=tldrproduct\",\n//   },\n//   {\n//     title: \"Good Lord\",\n//     author: \"Benn\",\n//     description:\n//       \"essay from the supposed perspective of a tech insider about the internal experience of a newly empowered debaucherous trump-fueled tech vibe\",\n//     tags: [\"Politics\", \"Technology\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-24\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://benn.substack.com/p/good-lord?utm_source=tldrproduct#footnote-5-155630639\",\n//   },\n//   {\n//     title: \"Probing Classifiers: Promises, Shortcomings, and Advances\",\n//     author: \"Israel Institute of Technology\",\n//     description:\n//       \"Critically reviews probing classifiers as a framework for understanding learned information in models, highlighting their promises, shortcomings, and advances. [CS2222]\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-02-21\",\n//     isRead: true,\n//     downloadLink: \"https://aclanthology.org/2022.cl-1.7.pdf\",\n//   },\n//   {\n//     title: \"Mechanistic?\",\n//     author: \"Harvard / Allen Institute\",\n//     description:\n//       \"Explains the many meanings behind *mechinterp* as a product of a critical confluence of communities of varying degrees of credentials [CS2222]\",\n//     tags: [\"AI Safety\", \"Interpretability\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-10-07\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2410.09087\",\n//   },\n//   {\n//     title: \"escaping flatland: career advice for CS undergrads\",\n//     author: \"Euan Ong\",\n//     description:\n//       \"A message to CS undergrads about the unmentioned mimetic vortex of prestige and narrow set of allowed passions which university can distract you with.\",\n//     tags: [\"Essay\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-12-26\",\n//     isRead: true,\n//     downloadLink: \"https://space.ong.ac/escaping-flatland\",\n//   },\n//   {\n//     title:\n//       \"Violence and the Sacred: College as an incubator of Girardian terror\",\n//     author: \"Dan Wang\",\n//     description:\n//       \"Commentary on the social pressures of college through the lens of René Girard's concept of mimetic desire\",\n//     tags: [\"Politics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2017-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://danwang.co/college-girardian-terror/\",\n//   },\n//   {\n//     title: \"The Linear Representation Hypothesis and the Geometry of LLMs\",\n//     author: \"Park et al.\",\n//     description:\n//       \"Attempts to formalize the concept of a linear representation and associated geometric notions of relation in that linear subspace [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"2024-06-17\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2311.03658\",\n//   },\n//   {\n//     title: \"interpreting GPT: the logit lens\",\n//     author: \"nostalgebraist\",\n//     description:\n//       \"observations about how intermediate representations adapt as you track them from input to output of GPT2&3\",\n//     tags: [\"Interpretability\", \"Transformers\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-08-30\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.lesswrong.com/posts/AcKRB8wDpdaN6v6ru/interpreting-gpt-the-logit-lens [CS2222]\",\n//   },\n//   {\n//     title: \"Axiomatic Attribution for Deep Networks\",\n//     author: \"Sundararajan et al.\",\n//     description:\n//       \"Proposes the Integrated Gradients technique for model-ambiguously attributing input features to model output [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2017-06-13\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1703.01365\",\n//   },\n//   {\n//     title: \"Rethinking the Role of Demonstrations\",\n//     author: \"University of Washington\",\n//     description:\n//       \"Digs into testing why in-context learning works in LLMs [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-08-20\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2202.12837\",\n//   },\n//   {\n//     title: \"Transformer FFNs build predictions in Vocab Space\",\n//     author: \"Geva et al.\",\n//     description:\n//       \"Decomposes FFN updates into sub-updates corresponding to single vectors corresponding to human intepretable features\",\n//     tags: [\"Interpretability\", \"Transformers\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2022-10-12\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2203.14680\",\n//   },\n//   {\n//     title: \"Explainable AI: Saliency Maps\",\n//     author: \"Bijil Subhash\",\n//     description:\n//       \"blog page implementing and briefly explaining saliency maps for understanding which features of a input most contributed to the output\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2022-03-05\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://medium.com/@bijil.subhash/explainable-ai-saliency-maps-89098e230100\",\n//   },\n//   {\n//     title: \"Privileged vs non-privileged bases in ML\",\n//     author: \"Harrison Pim\",\n//     description:\n//       \"Provides a geometric intuition for how architectural choices restrain & nudge models towards aligning features internally aligned in forseeable & interpretable ways.\",\n//     tags: [\"Architecture\", \"Interpretability\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-05-05\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://harrisonpim.com/blog/privileged-vs-non-privileged-bases-in-machine-learning\",\n//   },\n//   {\n//     title: \"What is self-supervised learning?\",\n//     author: \"IBM\",\n//     description:\n//       \"Describes briefly a few classes of self-supervised learning from encoders to autoregressive models to contrastic & non-constrastive learning.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-12-05\",\n//     isRead: true,\n//     downloadLink: \"https://www.ibm.com/think/topics/self-supervised-learning\",\n//   },\n//   {\n//     title: \"Exploring Neural Networks with Activation Atlases\",\n//     author: \"Google Brain\",\n//     description:\n//       \"provides very high quality analysis of navigating across a CNN activation atlas to understand how different layers visualize different classes of output.\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 1.0,\n//     releaseDate: \"2019-03-09\",\n//     isRead: true,\n//     downloadLink: \"https://distill.pub/2019/activation-atlas/\",\n//   },\n//   {\n//     title: \"GPipe\",\n//     author: \"Google\",\n//     description:\n//       \"Outlines a scheduling routine for distributing computation of NN pipelines across multiple devices using micro-batches of data\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"XXXX-XX-XX\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1811.06965\",\n//   },\n//   {\n//     title: \"PyTorch FSDP\",\n//     author: \"Meta\",\n//     description:\n//       \"Outlines Meta's Fully-Sharded Data Parallel for achieving nearly-linear TFLOP scaling with worker count\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-09-12\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2304.11277\",\n//   },\n//   {\n//     title: \"ZeRO\",\n//     author: \"Microsoft\",\n//     description:\n//       \"A Fundamental paper for me and the field of Distributed Model Parallelism techniques, ZeRO outlines how to shard parameters, gradients, and optimizer states across devices to minimize memory usage.\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-05-13\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1910.02054\",\n//   },\n//   {\n//     title: \"ZeRO++\",\n//     author: \"Micorsoft\",\n//     description:\n//       \"A Follow up to ZeRO, this paper introduces additional information about ways to i. offload more memory usage onto local CPU or node-level memory and ii. optimize the communication which is leaned on heavily by these ZeRO techniques.\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-06-16\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2306.10209\",\n//   },\n//   {\n//     title: \"PipeDream: Generalized Pipeline Parallelism for DNN Training\",\n//     author: \"Microsoft\",\n//     description:\n//       \"Describes a method for automatically partitioning NN layers among workers to balance work & minimize communication, stashing weights to achieve 100% hardware utilization, yielding 5.3X clocktime speedup over naive data-batch parallelism\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2019-10-30\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://people.eecs.berkeley.edu/~matei/papers/2019/sosp_pipedream.pdf\",\n//   },\n//   {\n//     title: \"Autonomous GUidance for Multi-Body Orbital Transfers using RL\",\n//     author: \"Nicolas LaFarge\",\n//     description:\n//       \"Explains a technique for teaching RL models to enter desired periodic orbits using comparison to a learned reference variable.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-05-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://engineering.purdue.edu/people/kathleen.howell.1/Publications/Masters/2020_Lafarge.pdf\",\n//   },\n//   {\n//     title: \"The Case for Index Funds\",\n//     author: \"Ben Felix\",\n//     description:\n//       \"Reports on the Cost Efficiency, Diversification, Investment Returns, Tax Efficiency, and Simplicity of Index Funds over actively managed funds as personal retirement account vehicles.\",\n//     tags: [\"Finance\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-02-17\",\n//     isRead: true,\n//     downloadLink: \"https://youtu.be/Nv5CiRSCVxA\",\n//   },\n//   {\n//     title: \"Efficient Large-Scale Language Model Training on GPU Clusters\",\n//     author: \"NVIDIA\",\n//     description:\n//       \"Proposes a novel interleaved pipelining schedule that can improve throughput by 10+% allowing for 1T model training at 502 petaFLOP/s on 3072 GPUs (per-GPU throughput of 52% of theoretical peak).\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2021-08-23\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2104.04473\",\n//   },\n// ];\n\n// /*  \n//   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ TEMPLATE & RUNNING LIST OF TAGS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n//   Site, Arxiv, YT\n\n//   Tags = Activation Functions, AI Safety, Architecture, Arxiv, Autoencoders, \n//   Deep Learning, Diffusion Models, Distributed Computing, Distributed Systems, \n//   Economics, Essay, Factorio, Finance, Git, GNNs, Grokking, Hardware, \n//   Hyperparameter Optimization, Information Theory, Interpretability, \n//   Libraries, Lie Groups, LLMs, Machine Learning, Markets, Mathematics, \n//   Meta-Learning, Minecraft, MoEs, Neural Networks, Optimization, Optimizers, \n//   Parallel Computing, Philosophy, Policy, Politics, Programming, \n//   Reinforcement Learning, Site, Symbolic Systems, Technology, \n//   Transformers, Tutorial\n\n//   {\n//     title: \"\",\n//     author: \"\",\n//     description:\n//       \"\",\n//     tags: [\"\"],\n//     readTime: 0.0,\n//     releaseDate: \"XXXX-XX-XX\",\n//     isRead: false,\n//     downloadLink: \"\",\n//   }, \n// */","map":{"version":3,"names":["toggleCollapse","button","container","closest","codeContainer","querySelector","classList","toggle","buttonText","contains","textContent","document","addEventListener","buttonContainers","querySelectorAll","forEach","copyButton","add","remove","toggleTheme","html","documentElement","currentTheme","getAttribute","newTheme","setAttribute","localStorage","setItem","savedTheme","getItem","toggleTOC","toc","getElementById","arrow","timeoutId","PROXIMITY_THRESHOLD","handleMouseMove","event","buttonId","targetButton","rect","getBoundingClientRect","buttonCenterX","left","width","buttonCenterY","top","height","distance","Math","sqrt","pow","clientX","clientY","clearTimeout","setTimeout","matches","copyCode","preventDefault","currentTarget","codeEl","navigator","clipboard","writeText","innerText","then","catch","err","console","error","copyButtons","window","onscroll","scrollButton","body","scrollTop","innerHeight","style","opacity","scrollToTop","scrollTo","behavior","copyCitation","citationContainer","citationEl","citationCopyButtons","sidebarToc","sidebarLinks","mainToc","ticking","scrollBehavior","handleScroll","mainTocRect","viewportHeight","headerHeight","offsetHeight","headerOffset","mainTocVisible","bottom","updateActiveTocLink","headings","Array","from","filter","heading","id","scrollPosition","scrollY","currentActive","offsetTop","allLinks","link","activeLink","parent","parentElement","tagName","parentLink","linkRect","tocRect","scrollIntoView","block","log","requestAnimationFrame","e","targetId","slice","targetElement","elementPosition","offsetPosition","canvas","SeededRandom","constructor","seed","Date","now","next","ctx","getContext","resolution","cols","rows","initializeGame","useSeed","providedSeed","toString","removeItem","grid","buildGrid","getInitialTimestamp","stored","timestamp","parseInt","calculateCurrentGeneration","initialTimestamp","timeElapsed","floor","storedGrid","rng","newGrid","fill","map","random","addGlider","JSON","stringify","parse","targetGeneration","i","nextGen","drawGrid","clearRect","col","length","row","cell","beginPath","fillStyle","countNeighbors","x","y","sum","j","nextGrid","arr","neighbors","glider","placeX","placeY","update","hashString","str","hash","char","charCodeAt","abs","getTagColor","tag","hue","saturation","lightness","getTextColor","wdebounce","func","wait","timeout","args","apply","searchItems","searchTerm","value","toLowerCase","items","item","cachedText","dataset","display","includes","dispatchEvent","documentVisibilityChanged","formatDate","dateString","parsed","isNaN","toLocaleString","month","year","readFilterState","toggleReadFilter","isRead","toggleSort","criteria","currentOrder","order","newOrder","buttons","btn","arrowSpan","sortBy","resetList","toggleFilterType","type","isActive","removeProperty","setProperty","filterByType","list","children","sort","a","b","valueA","release","getTime","parseFloat","time","valueB","appendChild","tags","hasTag","some","filterByTag","activeTags","t","tagSpan","createElement","backgroundColor","color","onclick","refreshFilters","every","shouldUpdateGraph"],"sources":["/Users/benbradley/Desktop/CS_Classwork/bbradz.github.io/src/functionality.js"],"sourcesContent":["// ============================== REGULAR OPS ============================== //\n//                                    xx                                     //\n// ============================== REGULAR OPS ============================== //\n\n// Update the toggleCollapse function\nfunction toggleCollapse(button) {\n  const container = button.closest(\".collapsible-code-container\");\n  if (!container) return;\n\n  const codeContainer = container.querySelector(\".code-container\");\n  if (!codeContainer) return;\n\n  // Toggle the visibility of the code container\n  codeContainer.classList.toggle(\"visible\");\n\n  // Toggle the expanded state of the button\n  button.classList.toggle(\"expanded\");\n\n  // Update the button text based on the state\n  const buttonText = button.querySelector(\"span\");\n  if (codeContainer.classList.contains(\"visible\")) {\n    buttonText.textContent = \"hide code\";\n  } else {\n    buttonText.textContent = \"show code\";\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const buttonContainers = document.querySelectorAll(\".button-container\");\n  buttonContainers.forEach((container) => {\n    container.addEventListener(\"mouseenter\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.add(\"visible\");\n      }\n    });\n\n    container.addEventListener(\"mouseleave\", () => {\n      const copyButton = container.querySelector(\".copy-button\");\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  });\n});\n\n// ======================\n// Theme toggle\n// ======================\nfunction toggleTheme() {\n  const html = document.documentElement;\n  const currentTheme = html.getAttribute(\"data-theme\");\n  const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\n  html.setAttribute(\"data-theme\", newTheme);\n\n  // Save the selected theme in localStorage\n  localStorage.setItem(\"theme\", newTheme);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const savedTheme = localStorage.getItem(\"theme\") || \"dark\"; // Default to dark\n  document.documentElement.setAttribute(\"data-theme\", savedTheme);\n});\n\n// ======================\n// Table of Contents toggle\n// ======================\nfunction toggleTOC() {\n  const toc = document.getElementById(\"toc\");\n  if (!toc) return;\n  toc.classList.toggle(\"expanded\");\n\n  const arrow = document.querySelector(\".toc-header span:first-child\");\n  if (arrow) {\n    arrow.textContent = toc.classList.contains(\"expanded\") ? \"▼\" : \"▶\";\n  }\n}\n\n// ======================\n// Copy code functionality\n// ======================\nlet timeoutId;\nconst PROXIMITY_THRESHOLD = 150; // pixels\n\nfunction handleMouseMove(event, buttonId = null) {\n  const targetButton = buttonId\n    ? document.getElementById(buttonId)\n    : document.querySelector(\".copy-button\");\n  if (!targetButton) return;\n\n  const rect = targetButton.getBoundingClientRect();\n  const buttonCenterX = rect.left + rect.width / 2;\n  const buttonCenterY = rect.top + rect.height / 2;\n\n  const distance = Math.sqrt(\n    Math.pow(event.clientX - buttonCenterX, 2) +\n      Math.pow(event.clientY - buttonCenterY, 2)\n  );\n\n  clearTimeout(timeoutId);\n\n  if (distance <= PROXIMITY_THRESHOLD) {\n    targetButton.classList.add(\"visible\");\n    timeoutId = setTimeout(() => {\n      if (!targetButton.matches(\":hover\")) {\n        targetButton.classList.remove(\"visible\");\n      }\n    }, 1000);\n  } else {\n    targetButton.classList.remove(\"visible\");\n  }\n}\n\n/*\n  Purpose: Copies the content of a code block to the clipboard.\n  Behavior: Finds the closest code block to the clicked button, copies its text,\n  and temporarily adds a copied class to the button for visual feedback.\n*/\nfunction copyCode(event) {\n  event.preventDefault();\n  const button = event.currentTarget;\n  const codeContainer = button.closest(\".collapsible-code-container\");\n  const codeEl = codeContainer ? codeContainer.querySelector(\"code\") : null;\n\n  if (!codeEl) return;\n\n  navigator.clipboard\n    .writeText(codeEl.innerText || \"\")\n    .then(() => {\n      button.classList.add(\"copied\");\n      setTimeout(() => {\n        button.classList.remove(\"copied\");\n      }, 500);\n    })\n    .catch((err) => {\n      console.error(\"Failed to copy code:\", err);\n    });\n}\n\n// Add event listeners to all copy buttons\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCode);\n  });\n});\n\n// ======================\n// Scroll to top\n// ======================\nwindow.onscroll = function () {\n  const scrollButton = document.getElementById(\"scrollToTop\");\n  if (!scrollButton) return;\n\n  if (\n    document.body.scrollTop > window.innerHeight ||\n    document.documentElement.scrollTop > window.innerHeight\n  ) {\n    scrollButton.style.opacity = \"1\";\n  } else {\n    scrollButton.style.opacity = \"0\";\n  }\n};\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\",\n  });\n}\n\n// ======================\n// Copy citation\n// ======================\nfunction copyCitation(event) {\n  event.preventDefault();\n  const button = event.currentTarget;\n  const citationContainer = button.closest(\".citation-container\");\n  const citationEl = citationContainer\n    ? citationContainer.querySelector(\"code\")\n    : null;\n\n  if (!citationEl) return;\n\n  navigator.clipboard\n    .writeText(citationEl.innerText || \"\")\n    .then(() => {\n      button.classList.add(\"copied\");\n      setTimeout(() => {\n        button.classList.remove(\"copied\");\n      }, 500);\n    })\n    .catch((err) => {\n      console.error(\"Failed to copy citation:\", err);\n    });\n}\n\n// Add event listeners to all copy buttons\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const copyButtons = document.querySelectorAll(\".copy-button\");\n  copyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCode);\n  });\n\n  const citationCopyButtons = document.querySelectorAll(\n    \"#citation-copy-button\"\n  );\n  citationCopyButtons.forEach((button) => {\n    button.addEventListener(\"click\", copyCitation);\n  });\n});\n\n// ======================\n// DOMContentLoaded\n// ======================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // ----- Safely bind events on .code-container and .copy-button -----\n  const codeContainer = document.querySelector(\".code-container\");\n  const copyButton = document.querySelector(\".copy-button\");\n\n  if (codeContainer) {\n    codeContainer.addEventListener(\"mouseleave\", () => {\n      clearTimeout(timeoutId);\n      if (copyButton) {\n        copyButton.classList.remove(\"visible\");\n      }\n    });\n  }\n\n  if (copyButton) {\n    copyButton.addEventListener(\"mouseenter\", () => {\n      clearTimeout(timeoutId);\n      copyButton.classList.add(\"visible\");\n    });\n\n    copyButton.addEventListener(\"mouseleave\", () => {\n      if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          copyButton.classList.remove(\"visible\");\n        }, 1000);\n      }\n    });\n  }\n\n  // ----- Sidebar TOC + on-scroll logic -----\n  const sidebarToc = document.getElementById(\"sidebar-toc\");\n  const sidebarLinks = document.querySelector(\".sidebar-toc-links\");\n  const mainToc = document.querySelector(\".toc-container\");\n  let ticking = false;\n\n  if (sidebarLinks) {\n    sidebarLinks.style.scrollBehavior = \"smooth\";\n  }\n\n  // FUNCTIONALITY.JS (modified handleScroll function)\n  const handleScroll = () => {\n    if (!mainToc || !sidebarToc) {\n      return;\n    }\n\n    const mainTocRect = mainToc.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const headerHeight = document.querySelector(\".header\").offsetHeight; // Dynamically get header height\n    const headerOffset = headerHeight + 20; // Add a little extra offset if needed\n    const mainTocVisible = mainTocRect.bottom > headerOffset; // Simplified condition - sidebar shows when main TOC bottom is above the offset\n\n    if (mainTocVisible) {\n      sidebarToc.classList.remove(\"visible\");\n    } else {\n      sidebarToc.classList.add(\"visible\");\n      updateActiveTocLink();\n    }\n  };\n\n  const updateActiveTocLink = () => {\n    if (!sidebarLinks) return;\n\n    // Look for headings with IDs\n    const headings = Array.from(\n      document.querySelectorAll(\"h1[id], h2[id], h3[id], h4[id]\")\n    ).filter((heading) => heading.id);\n\n    const scrollPosition = window.scrollY;\n    const headerOffset = 100;\n\n    let currentActive = null;\n    for (const heading of headings) {\n      if (scrollPosition >= heading.offsetTop - headerOffset) {\n        currentActive = heading;\n      } else {\n        break;\n      }\n    }\n\n    const allLinks = sidebarLinks.querySelectorAll(\"a\");\n    allLinks.forEach((link) => {\n      link.classList.remove(\"active\", \"active-parent\");\n    });\n\n    if (currentActive) {\n      const activeLink = sidebarLinks.querySelector(\n        `a[href=\"#${currentActive.id}\"]`\n      );\n\n      if (activeLink) {\n        activeLink.classList.add(\"active\");\n\n        // Highlight parents\n        let parent = activeLink.parentElement;\n        while (parent && parent !== sidebarLinks) {\n          if (parent.tagName === \"LI\") {\n            const parentLink = parent.querySelector(\":scope > a\");\n            if (parentLink) {\n              parentLink.classList.add(\"active-parent\");\n            }\n          }\n          parent = parent.parentElement;\n        }\n\n        // Auto-scroll in TOC if out of view\n        const linkRect = activeLink.getBoundingClientRect();\n        const tocRect = sidebarLinks.getBoundingClientRect();\n        if (linkRect.top < tocRect.top || linkRect.bottom > tocRect.bottom) {\n          activeLink.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n          });\n        }\n      }\n    }\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    console.log(\"Scroll event listener is firing!\"); // <---- ADD THIS LINE\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        handleScroll();\n        ticking = false;\n      });\n      ticking = true;\n    }\n  });\n\n  // Handle smooth scrolling for sidebar links\n  if (sidebarLinks) {\n    sidebarLinks.querySelectorAll(\"a\").forEach((link) => {\n      link.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const targetId = link.getAttribute(\"href\").slice(1);\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          const headerOffset = 80;\n          const elementPosition = targetElement.offsetTop;\n          const offsetPosition = elementPosition - headerOffset;\n\n          window.scrollTo({\n            top: offsetPosition,\n            behavior: \"smooth\",\n          });\n        }\n      });\n    });\n  }\n\n  // Run initial scroll logic\n  handleScroll();\n\n  // ----- Game of Life logic -----\n  const canvas = document.getElementById(\"gameOfLife\");\n  if (canvas) {\n    // If we have the canvas, run the GOL\n\n    // 1. Random Number Generator\n    class SeededRandom {\n      constructor(seed = Date.now()) {\n        this.seed = seed;\n      }\n      next() {\n        this.seed ^= this.seed << 13;\n        this.seed ^= this.seed >> 17;\n        this.seed ^= this.seed << 5;\n        return (this.seed >>> 0) / 0x100000000;\n      }\n    }\n\n    // 2. Get 2D context\n    const ctx = canvas.getContext(\"2d\");\n    const resolution = 10;\n    const cols = canvas.width / resolution;\n    const rows = canvas.height / resolution;\n\n    // 3. Initialize local storage logic\n    function initializeGame(useSeed = false, providedSeed = null) {\n      const seed = providedSeed || Date.now();\n      console.log(seed);\n      localStorage.setItem(\"gameOfLifeUseSeed\", useSeed);\n      if (useSeed) {\n        localStorage.setItem(\"gameOfLifeSeed\", seed.toString());\n      }\n      localStorage.removeItem(\"gameOfLifeGrid\");\n      localStorage.removeItem(\"gameOfLifeInitialTimestamp\");\n      grid = buildGrid();\n      return grid;\n    }\n\n    function getInitialTimestamp() {\n      const stored = localStorage.getItem(\"gameOfLifeInitialTimestamp\");\n      if (!stored) {\n        const timestamp = Date.now();\n        localStorage.setItem(\n          \"gameOfLifeInitialTimestamp\",\n          timestamp.toString()\n        );\n        return timestamp;\n      }\n      return parseInt(stored);\n    }\n\n    function calculateCurrentGeneration(initialTimestamp) {\n      const timeElapsed = Date.now() - initialTimestamp;\n      // ~60 generations per second\n      return Math.floor(timeElapsed / (1000 / 60));\n    }\n\n    // 4. Building the grid\n    function buildGrid() {\n      const storedGrid = localStorage.getItem(\"gameOfLifeGrid\");\n      const initialTimestamp = getInitialTimestamp();\n\n      if (!storedGrid) {\n        const useSeed = localStorage.getItem(\"gameOfLifeUseSeed\") === \"true\";\n        let rng;\n\n        if (useSeed) {\n          const seed = parseInt(localStorage.getItem(\"gameOfLifeSeed\"));\n          rng = new SeededRandom(seed);\n        }\n\n        // create new grid\n        const newGrid = new Array(cols)\n          .fill(null)\n          .map(() =>\n            new Array(rows)\n              .fill(null)\n              .map(() =>\n                useSeed\n                  ? Math.floor(rng.next() * 2)\n                  : Math.floor(Math.random() * 2)\n              )\n          );\n\n        // Add gliders\n        addGlider(newGrid, 1, 1);\n        addGlider(newGrid, 1, 10);\n        addGlider(newGrid, 1, 20);\n        addGlider(newGrid, 1, 30);\n\n        localStorage.setItem(\"gameOfLifeGrid\", JSON.stringify(newGrid));\n        return newGrid;\n      }\n\n      // If stored grid exists, forward-simulate\n      let grid = JSON.parse(storedGrid);\n      const targetGeneration = calculateCurrentGeneration(initialTimestamp);\n\n      for (let i = 0; i < targetGeneration; i++) {\n        grid = nextGen(grid);\n      }\n\n      return grid;\n    }\n\n    function drawGrid(grid) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (let col = 0; col < grid.length; col++) {\n        for (let row = 0; row < grid[col].length; row++) {\n          const cell = grid[col][row];\n\n          ctx.beginPath();\n          ctx.rect(\n            col * resolution,\n            row * resolution,\n            resolution - 1,\n            resolution - 1\n          );\n          ctx.fillStyle = cell ? \"#4a9eff\" : \"transparent\";\n          ctx.fill();\n        }\n      }\n    }\n\n    function countNeighbors(grid, x, y) {\n      let sum = 0;\n      for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n          let col = x + i;\n          let row = y + j;\n\n          // wrap edges\n          if (col < 0) col = cols - 1;\n          if (row < 0) row = rows - 1;\n\n          if (col < cols && row < rows) {\n            sum += grid[col][row];\n          }\n        }\n      }\n      sum -= grid[x][y];\n      return sum;\n    }\n\n    function nextGen(grid) {\n      const nextGrid = grid.map((arr) => [...arr]);\n\n      for (let col = 0; col < grid.length; col++) {\n        for (let row = 0; row < grid[col].length; row++) {\n          const cell = grid[col][row];\n          const neighbors = countNeighbors(grid, col, row);\n\n          if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n            nextGrid[col][row] = 0;\n          } else if (cell === 0 && neighbors === 3) {\n            nextGrid[col][row] = 1;\n          }\n        }\n      }\n      return nextGrid;\n    }\n\n    function addGlider(grid, x, y) {\n      const glider = [\n        [0, 1, 0],\n        [0, 0, 1],\n        [1, 1, 1],\n      ];\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          let placeX = x + i;\n          let placeY = y + j;\n\n          if (placeX < 0) placeX = cols - 1;\n          if (placeY < 0) placeY = rows - 1;\n\n          if (placeX < cols && placeY < rows) {\n            grid[placeX][placeY] = glider[i][j];\n          }\n        }\n      }\n      return grid;\n    }\n\n    // 5. Initialize, run the animation\n    let grid = buildGrid();\n\n    function update() {\n      grid = nextGen(grid);\n      drawGrid(grid);\n      requestAnimationFrame(update);\n    }\n\n    requestAnimationFrame(update);\n\n    // We can set seeded or random here as desired.\n    // For random initialization:\n    initializeGame(false);\n\n    // For seeded initialization:\n    // initializeGame(true, 1736329082156); // Use any number as seed\n\n    /*\n        OTHER GOOD SEEDS\n\n    1736329157225\n    1736329263658\n\n\n    */\n  }\n});\n\n// ============================== LIBRARY OPS ============================== //\n//                                    xx                                     //\n// ============================== LIBRARY OPS ============================== //\n\nwindow.hashString = (str) => {\n  // Keep hashString\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash);\n};\n\n/*\n  Purpose: Returns a color for a given tag based on its type or a hash of the\n  tag name.\n  Behavior: Assigns specific colors for predefined tags (e.g., \"YT\", \"Arxiv\")\n  and generates a unique color for other tags using HSL values derived from the\n  tag's hash.\n*/\nwindow.getTagColor = function(tag) {\n  // Export getTagColor\n  switch (tag) {\n    case \"YT\":\n      return \"#FF0000\";\n    case \"Arxiv\":\n      return \"#A51C30\";\n    case \"Site\":\n      return \"#F5F5DC\";\n    default:\n      const hash = hashString(tag);\n      const hue = hash % 360;\n      const saturation = 40 + (hash % 15);\n      const lightness = 30 + (hash % 10);\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  }\n}\n\nwindow.getTextColor = function(tag) {\n  // Export getTextColor\n  if (tag === \"Site\") {\n    return \"#000000\";\n  }\n  return \"#FFFFFF\";\n}\n\n// initializeTagColors function is DOM-manipulating, we will handle tag colors in React if needed, so remove it from exports/usage here.\n// function initializeTagColors() {\n//   const tags = document.querySelectorAll(\".tags span\");\n//   tags.forEach((tag) => {\n//     const tagType = tag.getAttribute(\"data-type\");\n//     tag.style.backgroundColor = getTagColor(tagType);\n//     tag.style.color = getTextColor(tagType);\n//   });\n// }\n\n/*\n  Purpose: Limits how often a function is called during rapid events\n  (e.g., typing in a search box).\n  Behavior: Delays the execution of the provided function until a specified time\n  (wait) has passed since the last call.\n*/\nwindow.wdebounce = function(func, wait) {\n  // Export debounce\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\n/*\n  Purpose: Filters the reading list based on a search term.\n  Behavior: Compares the search term against cached text content of each item\n  and hides items that do not match.\n*/\nexport function searchItems() {\n  // Export searchItems - but we will likely rewrite this in React to work with state\n  const searchTerm = document.getElementById(\"search\").value.toLowerCase();\n  const items = document.querySelectorAll(\"#reading-list li\");\n\n  items.forEach((item) => {\n    const cachedText =\n      item.dataset.cachedText || item.textContent.toLowerCase();\n    item.dataset.cachedText = cachedText; // Cache the lowercase text\n    item.style.display = cachedText.includes(searchTerm) ? \"\" : \"none\";\n  });\n\n  window.dispatchEvent(window.documentVisibilityChanged);\n}\n\n// Debounced version of searchItems - keep if searchItems is kept, but we might rewrite in React\n// const debouncedSearchItems = debounce(searchItems, 300); // No need to export if only used internally in functionality.js - but we are removing DOM manipulation now\n\nwindow.formatDate = function (dateString) {\n  // Export formatDate\n  if (dateString === \"Not specified\") return dateString;\n  const parsed = new Date(dateString);\n  if (isNaN(parsed)) return dateString;\n  return parsed.toLocaleString(\"en-US\", {\n    month: \"short\",\n    year: \"numeric\",\n  });\n}\n\n/*\nPurpose: Dynamically generates the HTML for the reading list based on provided data.\nBehavior: Iterates over the data, creates list items with appropriate metadata,\nand appends them to the reading list container.\n*/\n// function generateReadingListHTML(data) { // REMOVE generateReadingListHTML - React will handle rendering\n//   console.log(\"generateReadingListHTML is called with data:\", data); // DEBUGGING: Check if function is called and with what data\n//   const readingList = document.getElementById(\"reading-list\");\n//   console.log(\"readingList element:\", readingList); // DEBUGGING: Check if readingList element is found\n//   if (!readingList) {\n//     console.error(\"readingList element not found!\");\n//     return;\n//   }\n//   readingList.innerHTML = \"\"; // Clear existing content\n\n//   data.forEach((item) => {\n//     const li = document.createElement(\"li\");\n//     li.setAttribute(\"data-release\", item.releaseDate);\n//     li.setAttribute(\"data-time\", item.readTime);\n//     li.setAttribute(\"data-read\", item.isRead);\n\n//     const html = `\n//     ${item.isRead ? '<span class=\"read-indicator\">✓</span>' : \"\"}\n//     <div class=\"item-header\">\n//       <div class=\"item-title\">\n//         <strong>\"${item.title}\" by ${item.author}</strong>\n//         <span class=\"meta\">\n//           ${item.isRead ? \"Read: \" : \"\"}\n//           ${formatDate(item.releaseDate)} |\n//           <span class=\"no-break\">Est. Time ${item.readTime} hours</span>\n//         </span>\n//       </div>\n//       <div class=\"tags\">\n//         ${item.tags\n//           .map(\n//             (tag) =>\n//               `<span data-type=\"${tag}\" onclick=\"filterByTag('${tag}')\">${tag}</span>`\n//           )\n//           .join(\"\")}\n//       </div>\n//     </div>\n//     <div class=\"description\">\n//       ${item.description}\n//     </div>\n//     ${\n//       item.downloadLink\n//         ? `<a class=\"download-link\" href=\"${item.downloadLink}\" download>Source</a>`\n//         : \"\"\n//     }\n//   `;\n\n//     li.innerHTML = html;\n//     readingList.appendChild(li);\n//   });\n\n//   initializeTagColors(); // initializeTagColors is also DOM manipulation\n// }\n\n// document.addEventListener(\"DOMContentLoaded\", () => { // REMOVE DOMContentLoaded listener - React handles rendering\n//   console.log(\"DOMContentLoaded event listener in functionality.js is running\"); // DEBUGGING: Check if this event listener is reached\n//   // Check if readingListData is available in global scope (if that's the intent)\n//   if (typeof readingListData !== \"undefined\") {\n//     console.log(\"readingListData found in global scope:\", readingListData); // DEBUGGING: Check if readingListData is accessible\n//     generateReadingListHTML(readingListData);\n//   } else {\n//     console.warn(\n//       \"readingListData is not defined in global scope when DOM is ready.\"\n//     ); // DEBUGGING: Warn if readingListData is missing\n//   }\n\n//   const searchInput = document.getElementById(\"search\");\n//   if (searchInput) {\n//     searchInput.addEventListener(\"input\", debouncedSearchItems);\n//   }\n//   initializeTagColors(); // initializeTagColors is also DOM manipulation\n// });\n\nexport let readFilterState = 0; // Export, but we'll likely manage filter state in React\n\n/*\n  Purpose: Filters the reading list to show only read, unread, or all items.\n  Behavior: Cycles through three states (all, read, unread) and updates the\n  button text and item visibility accordingly.\n*/\nwindow.toggleReadFilter = function (button) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n\n  switch (readFilterState) {\n    case 0:\n      button.textContent = \"Filter: Read\";\n      button.classList.add(\"active\");\n      items.forEach((item) => {\n        const isRead = item.getAttribute(\"data-read\") === \"true\";\n        item.style.display = isRead ? \"\" : \"none\";\n      });\n      readFilterState = 1;\n      break;\n\n    case 1:\n      button.textContent = \"Filter: Unread\";\n      items.forEach((item) => {\n        const isRead = item.getAttribute(\"data-read\") === \"true\";\n        item.style.display = !isRead ? \"\" : \"none\";\n      });\n      readFilterState = 2;\n      break;\n\n    case 2:\n      button.textContent = \"Filter: All\";\n      button.classList.remove(\"active\");\n      items.forEach((item) => {\n        item.style.display = \"\";\n      });\n      readFilterState = 0;\n      break;\n  }\n  window.dispatchEvent(window.documentVisibilityChanged);\n};\n\n/*\n  Purpose: Sorts the reading list by a specified criteria\n  (e.g., release date or read time).\n  Behavior: Toggles between ascending, descending, and unsorted states,\n  updating the button UI and reordering the list.\n*/\nwindow.toggleSort = function (button, criteria) {\n  // Export, but we'll rewrite in React\n  const currentOrder = button.dataset.order || \"unsorted\";\n  let newOrder;\n\n  if (currentOrder === \"unsorted\") {\n    newOrder = \"asc\";\n  } else if (currentOrder === \"asc\") {\n    newOrder = \"desc\";\n  } else {\n    newOrder = \"unsorted\";\n  }\n\n  const buttons = document.querySelectorAll(\".sort-bar button\");\n  buttons.forEach((btn) => {\n    btn.classList.remove(\"active\");\n    const arrowSpan = btn.querySelector(\".sort-arrow\");\n    if (arrowSpan) arrowSpan.textContent = \"\";\n  });\n\n  if (newOrder !== \"unsorted\") {\n    button.classList.add(\"active\");\n    button.dataset.order = newOrder;\n\n    const arrowSpan = button.querySelector(\".sort-arrow\");\n    if (arrowSpan) arrowSpan.textContent = newOrder === \"asc\" ? \"↑\" : \"↓\";\n\n    sortBy(criteria, newOrder);\n  } else {\n    button.dataset.order = \"unsorted\";\n    resetList(false);\n  }\n};\n\n/*\n  Purpose: Filters the reading list by a specific type (e.g., \"YT\", \"Arxiv\").\n  Behavior: Highlights the button and shows only items with the specified tag.\n  Clicking again resets the filter.\n*/\nwindow.toggleFilterType = function (button, type) {\n  // Export, but we'll rewrite in React\n  const isActive = button.classList.contains(\"active\");\n  const buttons = document.querySelectorAll(\".sort-bar button\");\n  buttons.forEach((btn) => {\n    if (btn !== document.getElementById(\"filter-read\")) {\n      btn.classList.remove(\"active\");\n      btn.style.removeProperty(\"--active-color\");\n      btn.style.removeProperty(\"--active-text-color\");\n    }\n  });\n\n  if (!isActive) {\n    button.classList.add(\"active\");\n    switch (type) {\n      case \"YT\":\n        button.style.setProperty(\"--active-color\", \"#FF0000\");\n        button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n        break;\n      case \"Arxiv\":\n        button.style.setProperty(\"--active-color\", \"#A51C30\");\n        button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n        break;\n      case \"Site\":\n        button.style.setProperty(\"--active-color\", \"#F5F5DC\");\n        button.style.setProperty(\"--active-text-color\", \"#000000\");\n        break;\n    }\n    filterByType(type);\n  } else {\n    button.style.removeProperty(\"--active-color\");\n    button.style.removeProperty(\"--active-text-color\");\n    resetList();\n    window.dispatchEvent(window.documentVisibilityChanged);\n  }\n};\n\n/*\n  Purpose: Sorts the reading list items based on a criteria and order.\n  Behavior: Reorders the items in the list container based on release date or\n  read time, in ascending or descending order.\n*/\nwindow.sortBy = function (criteria, order) {\n  // Export, but we'll rewrite in React\n  const list = document.getElementById(\"reading-list\");\n  const items = Array.from(list.children);\n\n  items.sort((a, b) => {\n    let valueA =\n      criteria === \"release\"\n        ? new Date(a.dataset.release).getTime() || 0\n        : parseFloat(a.dataset.time) || 0;\n    let valueB =\n      criteria === \"release\"\n        ? new Date(b.dataset.release).getTime() || 0\n        : parseFloat(b.dataset.time) || 0;\n\n    return order === \"asc\" ? valueA - valueB : valueB - valueA;\n  });\n\n  items.forEach((item) => list.appendChild(item));\n};\n\n/*\n  Purpose: Filters the reading list to show only items of a specific type.\n  Behavior: Hides items that do not have the specified tag.\n*/\nwindow.filterByType = function (type) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach((item) => {\n    const tags = Array.from(item.querySelectorAll(\".tags span\"));\n    const hasTag = tags.some((tag) => tag.dataset.type === type);\n    item.style.display = hasTag ? \"\" : \"none\";\n  });\n  window.dispatchEvent(window.documentVisibilityChanged);\n}\n\n/*\n  Purpose: Adds a tag to the active filters and updates the reading list.\n  Behavior: Creates a new filter tag in the active filters section and refreshes\n  the list to show only items matching all active tags.\n*/\nwindow.filterByTag = function (tag) {\n  // Export, but we'll rewrite in React\n  const activeTags = document.getElementById(\"active-tags\");\n  if (!Array.from(activeTags.children).some((t) => t.textContent === tag)) {\n    const tagSpan = document.createElement(\"span\");\n    tagSpan.textContent = tag;\n    tagSpan.dataset.type = tag;\n    tagSpan.style.backgroundColor = getTagColor(tag);\n    tagSpan.style.color = getTextColor(tag);\n\n    tagSpan.onclick = () => {\n      tagSpan.remove();\n      refreshFilters();\n    };\n\n    activeTags.appendChild(tagSpan);\n    refreshFilters();\n  }\n}\n\n/*\n  Purpose: Updates the reading list based on the currently active filters.\n  Behavior: Shows only items that match all active tags and hides the rest.\n*/\nwindow.refreshFilters = function () {\n  // Export, but we'll rewrite in React\n  const activeTags = Array.from(\n    document.getElementById(\"active-tags\").children\n  ).map((t) => t.textContent);\n  const items = document.querySelectorAll(\"#reading-list li\");\n\n  items.forEach((item) => {\n    const tags = Array.from(item.querySelectorAll(\".tags span\")).map(\n      (tag) => tag.textContent\n    );\n    const matches = activeTags.every((tag) => tags.includes(tag));\n    item.style.display = matches || activeTags.length === 0 ? \"\" : \"none\";\n  });\n  window.dispatchEvent(window.documentVisibilityChanged);\n}\n\n/*\n  Purpose: Resets the reading list to show all items.\n  Behavior: Removes all filters and updates the list visibility. Optionally\n  triggers a graph update if shouldUpdateGraph is true.\n*/\nwindow.resetList = function(shouldUpdateGraph = true) {\n  // Export, but we'll rewrite in React\n  const items = document.querySelectorAll(\"#reading-list li\");\n  items.forEach((item) => {\n    item.style.display = \"\";\n  });\n  if (shouldUpdateGraph) {\n    window.dispatchEvent(window.documentVisibilityChanged);\n  }\n}\n\n// document.addEventListener(\"DOMContentLoaded\", initializeTagColors); // REMOVE this line\n\n// window.readingListData = [\n//   {\n//     title: \"From Softmax to Sparsemax\",\n//     author: \"Martins et. al\",\n//     description:\n//       \"Proposes sparsemax, a new activation function similar to the traditional softmax, but able to output sparse probabilities.\",\n//     tags: [\"Machine Learning\", \"Activation Functions\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2016-02-08\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1602.02068\",\n//   },\n//   {\n//     title: \"Monte Carlo Methods in Financial Engineering\",\n//     author: \"Not specified\",\n//     description:\n//       \"A comprehensive guide on Monte Carlo methods applied in financial engineering.\",\n//     tags: [\"Finance\", \"Site\"],\n//     readTime: 16.3,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://www.bauer.uh.edu/spirrong/Monte_Carlo_Methods_In_Financial_Engineering.pdf\",\n//   },\n//   {\n//     title: \"Information Theory: A Tutorial Introduction\",\n//     author: \"University of Sheffield\",\n//     description: \"Introduces the main ideas in Shannon’s theory.\",\n//     tags: [\"Information Theory\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2019-06-13\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1802.05968\",\n//   },\n//   {\n//     title: \"What Every Programmer Should Know About Memory\",\n//     author: \"Redhat\",\n//     description: \"An in-depth look at memory management for programmers.\",\n//     tags: [\"Programming\", \"Site\"],\n//     readTime: 6.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://people.freebsd.org/~lstewart/articles/cpumemory.pdf\",\n//   },\n//   {\n//     title:\n//       \"PowerSGD: Practical Low-Rank Gradient Compression for Distributed Optimization\",\n//     author: \"EPFL\",\n//     description:\n//       \"Proposes gradient compressor achieving test performance on par with SGD with consistent wall-clock speedups.\",\n//     tags: [\"Optimization\", \"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1,\n//     releaseDate: \"2020-02-18\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1905.13727\",\n//   },\n//   {\n//     title: \"Step-by-Step Diffusion: An Elementary Tutorial\",\n//     author: \"University of Montreal\",\n//     description: \"A tutorial on diffusion models.\",\n//     tags: [\"Diffusion Models\", \"Tutorial\", \"Arxiv\"],\n//     readTime: 1.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.08929\",\n//   },\n//   {\n//     title:\n//       \"A Loss Curvature Perspective on Training Instability in Deep Learning\",\n//     author: \"Google\",\n//     description:\n//       \"Combine learning rate, model structure, and weight initialization to analyze the evolution of Hessian loss.\",\n//     tags: [\"Deep Learning\", \"Optimization\", \"Arxiv\"],\n//     readTime: 1,\n//     releaseDate: \"2020-10-08\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2110.04369\",\n//   },\n//   {\n//     title: \"Networks, Crowds, and Markets\",\n//     author: \"Cornell University\",\n//     description: \"A book exploring networks, crowds, and markets.\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 23.5,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://www.cs.cornell.edu/home/kleinber/networks-book/networks-book.pdf\",\n//   },\n//   {\n//     title: \"Towards Practical Second Order Optimization for Deep Learning\",\n//     author: \"Anonymous\",\n//     description:\n//       \"Presents a scalable 2nd-order preconditioner with significant convergence and wall-clock time improvements compared to 1st-order methods.\",\n//     tags: [\"Optimization\", \"Deep Learning\", \"Site\"],\n//     readTime: 0.6,\n//     releaseDate: \"2021-01-01\",\n//     isRead: false,\n//     downloadLink: \"https://openreview.net/references/pdf?id=80B6V-eoFP\",\n//   },\n//   {\n//     title: \"Deep Bellman Hedging\",\n//     author: \"Buehler et al.\",\n//     description: \"A paper on reinforcement learning and hedging.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2207.00932\",\n//   },\n//   {\n//     title:\n//       \"A Large Batch Optimizer Reality Check: Traditional, Generic Optimizers Suffice Across Batch Sizes\",\n//     author: \"Google\",\n//     description:\n//       \"Refutes performance claims of optimizers built around large batch sizes.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2021-06-09\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2102.06356\",\n//   },\n//   {\n//     title: \"Information Theory, Inference, and Learning Algorithms\",\n//     author: \"Cambridge University\",\n//     description:\n//       \"A comprehensive book on information theory, inference, and learning algorithms.\",\n//     tags: [\"Machine Learning\", \"Algorithms\", \"Site\"],\n//     readTime: 19.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"https://www.inference.org.uk/itprnn/book.pdf\",\n//   },\n//   {\n//     title: \"Vector Quantized Models for Planning\",\n//     author: \"Not specified\",\n//     description:\n//       \"Presents using discrete autoencoders to capture the multiple effects of an action in a stochastic environment, using MCTS to plan over both actions and discrete latent variables. Significantly outperforming MuZero on a stochastic interpretation of chess.\",\n//     tags: [\"Reinforcement Learning\", \"Autoencoders\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2021-08-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2106.04615\",\n//   },\n//   {\n//     title: \"Programming Massively Parallel Applications\",\n//     author: \"David B. Kirk\",\n//     description: \"A book on programming massively parallel applications.\",\n//     tags: [\"Parallel Computing\", \"Site\"],\n//     readTime: 18.8,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://github.com/h3ct0rjs/HighPerformanceComputing/blob/master/BookRef/Programming%20Massively%20Parallel%20Processors.pdf\",\n//   },\n//   {\n//     title: \"Hyperparameter Optimization Is Deceiving Us, and How to Stop It\",\n//     author: \"Cornell University\",\n//     description:\n//       \"Provides a theoretical grounding for process epistemic hyperparameter optimization (EHPO) to avoid deception by hyperparams.\",\n//     tags: [\"Hyperparameter Optimization\", \"Machine Learning\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2021-10-26\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2102.03034\",\n//   },\n//   {\n//     title:\n//       \"Torch.FX: a Practical Program Capture and Transformation for DL in Python\",\n//     author: \"Horace He\",\n//     description:\n//       \"Studies designs for program capture in the typical deep learning use case to propose a library optimizing for developer productivity.\",\n//     tags: [\"Deep Learning\", \"Libraries\", \"Arxiv\"],\n//     readTime: 0.7,\n//     releaseDate: \"2022-03-04\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2112.08429\",\n//   },\n//   {\n//     title: \"Set Theory\",\n//     author: \"Not specified\",\n//     description: \"A book on set theory.\",\n//     tags: [\"Mathematics\", \"Site\"],\n//     readTime: 1,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink: \"http://www.alefenu.com/libri/topologymunkres.pdf\",\n//   },\n//   {\n//     title: \"Omnigrok: Grokking Beyond Algorithmic Data\",\n//     author: \"MIT\",\n//     description:\n//       \"Understands grokking by analyzing NN loss landscapes, identifying the mismatch between training and test loss as the cause for grokking.\",\n//     tags: [\"Neural Networks\", \"Optimization\", \"Grokking\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2023-03-23\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2210.01117\",\n//   },\n//   {\n//     title: \"Lie Groups\",\n//     author: \"University of Ottowa\",\n//     description: \"A book on Lie groups.\",\n//     tags: [\"Mathematics\", \"Lie Groups\", \"Site\"],\n//     readTime: 1,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://alistairsavage.ca/mat4144/notes/MAT4144-5158-LieGroups.pdf\",\n//   },\n//   {\n//     title: \"Finding Neurons in a Haystack\",\n//     author: \"MIT\",\n//     description:\n//       \"Shows the progression of, violation of, and features embedded in neurons at varying depths of LLM.\",\n//     tags: [\"Interpretability\", \"Neural Networks\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2023-06-02\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2305.01610\",\n//   },\n//   {\n//     title: \"Meta-Learning\",\n//     author: \"Lilian Weng\",\n//     description: \"A post on meta-learning.\",\n//     tags: [\"Meta-Learning\", \"Machine Learning\", \"Site\"],\n//     readTime: 2.6,\n//     releaseDate: \"Not specified\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://lilianweng.github.io/posts/2018-11-30-meta-learning/\",\n//   },\n//   {\n//     title: \"Uncovering Mesa-optimization algorithms in Transformers\",\n//     author: \"Google\",\n//     description:\n//       \"Reverse engineers Transformers to determine that performance comes from an architectural bias towards mesa-optimization.\",\n//     tags: [\"Transformers\", \"Optimization\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.9,\n//     releaseDate: \"2023-09-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2309.05858\",\n//   },\n//   {\n//     title: \"Why do we need Weight Decay in modern Deep Learning?\",\n//     author: \"EPFL\",\n//     description:\n//       \"Present a unifying perspective from to say that weight decay changes the training dynamics in a desirable way.\",\n//     tags: [\"Deep Learning\", \"Optimization\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2023-10-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2310.04415\",\n//   },\n//   {\n//     title:\n//       \"When, Why and How Much? Adaptive Learning Rate Scheduling by Refinement\",\n//     author: \"Meta\",\n//     description:\n//       \"Develops theory supporting the linear decay schedules and refinement techniques, establishing SOTA performance in theory and practice.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 1.1,\n//     releaseDate: \"2023-10-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2310.07831\",\n//   },\n//   {\n//     title: \"One Wide Feedforward Network is All You Need\",\n//     author: \"Apple\",\n//     description:\n//       \"Observes a high redundancy in the Feed-Forward layers of Transformers to unlock substantial gains in accuracy & latency.\",\n//     tags: [\"LLMs\", \"Optimization\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2023-10-21\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2309.01826\",\n//   },\n//   {\n//     title: \"DiLoCo: Distributed Low-Communication Training of Language Models\",\n//     author: \"Google\",\n//     description:\n//       \"Proposes a distributed optimization algorithm to train LLMs on islands of poorly connected devices.\",\n//     tags: [\"LLMs\", \"Optimization\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-12-02\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2311.08105\",\n//   },\n//   {\n//     title:\n//       \"Reinforcement Learning With Sparse-executing Action via Sparsity Regularization\",\n//     author: \"Nanjing University\",\n//     description:\n//       \"Proposes a spinoff of Markov Decision Processes to account for need to sparsify actions.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2024-07-22\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2105.08666\",\n//   },\n//   {\n//     title: \"Literature Review of Sampling Techniques\",\n//     author: \"njkumar\",\n//     description:\n//       \"Explains the many types of Sampling techniques for ML Models and their differing strengths.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.3,\n//     releaseDate: \"2024-08-10\",\n//     isRead: true,\n//     downloadLink: \"https://njkumar.com/literature-review-sampling-techniques/\",\n//   },\n//   {\n//     title:\n//       \"Learning to (Learn at Test Time): RNNs with Expressive Hidden States\",\n//     author: \"Sun et al.\",\n//     description:\n//       \"Proposes a new sequence modeling layers with O(n) complexity and an expressive ML model hidden state.\",\n//     tags: [\"RNNs\", \"Machine Learning\", \"Arxiv\"],\n//     readTime: 1.1,\n//     releaseDate: \"2024-08-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.04620\",\n//   },\n//   {\n//     title:\n//       \"Tree Attention: Topology-Aware Decoding for Long-Context Attention on GPU Clusters\",\n//     author: \"EleutherAI\",\n//     description:\n//       \"Reveals a self-attention computation parallelizable across multiple GPUs.\",\n//     tags: [\"Attention Mechanisms\", \"Parallel Computing\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-08-14\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2408.04093\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-Prover-V1.5: Harnessing Proof Assistant Feedback for Reinforcement Learning and Monte-Carlo Tree Search\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"Introduces a dataset & RL with proof-solving feedback for fine-tuning on top of MCTS for generating more lush proof paths.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 0.9,\n//     releaseDate: \"2024-08-15\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2408.08152\",\n//   },\n//   {\n//     title: \"The LLama3 herd of models\",\n//     author: \"Meta\",\n//     description:\n//       \"Presents the results of experiments which integrate image, video, and speech capabilities into Llama 3.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 3.7,\n//     releaseDate: \"2024-08-15\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.21783\",\n//   },\n//   {\n//     title: \"The AdeMAMix optimizer: Better, Faster, Older\",\n//     author: \"Apple\",\n//     description:\n//       \"Halves tokens required to train LLM while slowing down forgetting through leveraging the need to remember far back gradients.\",\n//     tags: [\"Optimization\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.5,\n//     releaseDate: \"2024-09-05\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2409.03137\",\n//   },\n//   {\n//     title:\n//       \"Compute Better Spent: Replacing Dense Layers with Structured Matrices\",\n//     author: \"Qiu et al.\",\n//     description:\n//       \"Explores structured matrices as replacements for dense matrices as models scale.\",\n//     tags: [\"Optimization\", \"Arxiv\"],\n//     readTime: 0.9,\n//     releaseDate: \"2024-10-06\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.06248\",\n//   },\n//   {\n//     title: \"Financial Statement Analysis with Large Language Models\",\n//     author: \"Kim et al.\",\n//     description:\n//       \"Investigates whether LLMs can successfully perform financial statement analysis similarly to professional human analysts.\",\n//     tags: [\"LLMs\", \"Finance\", \"Arxiv\"],\n//     readTime: 1.6,\n//     releaseDate: \"2024-10-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2407.17866\",\n//   },\n//   {\n//     title:\n//       \"The Surprising Effectiveness of Test-Time Training for Abstract Reasoning\",\n//     author: \"MIT\",\n//     description:\n//       \"Investigates the effectiveness of test-time training (TTT) as a mechanism for improving reasoning capabilities, using ARC as a benchmark.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 0.7,\n//     releaseDate: \"2024-11-11\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2411.07279\",\n//   },\n//   {\n//     title: \"Transformers meet Neural Algorithmic Reasoners\",\n//     author: \"Google\",\n//     description:\n//       \"Proposes a novel combination of Transformers with GNN-based neural algorithmic reasoners (NARs) as a hybrid architecture demonstrating significant gains over Transformer-only models for algorithmic reasoning.\",\n//     tags: [\"LLMs\", \"GNNs\", \"Arxiv\"],\n//     readTime: 0.4,\n//     releaseDate: \"2024-06-13\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.09308\",\n//   },\n//   {\n//     title: \"On Empirical Comparison of Optimizers\",\n//     author: \"Choi et al.\",\n//     description:\n//       \"Gives tips around tuning often ignored hyperparameters of adaptive gradient methods and raise concerns about fairly benchmarking optimizers for NN training.\",\n//     tags: [\"Optimizers\", \"Deep Learning\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2020-06-16\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/1910.05446\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-Coder-V2: Breaking the Barrier of Closed-Source Models in Code Intelligence\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"DeepSeek-V2 is pre-trained with 6 trillion additional tokens achieving superior coding performance to closed-source models.\",\n//     tags: [\"LLMs\", \"Arxiv\"],\n//     readTime: 0.6,\n//     releaseDate: \"2024-06-17\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2406.11931\",\n//   },\n//   {\n//     title:\n//       \"DeepSeek-V2: A Strong, Economical, and Efficient Mixture-of-Experts Language Model\",\n//     author: \"DeepSeek\",\n//     description:\n//       \"Presents DeepSeek-V2, a strong MoE language model characterized by economical training and efficient inference.\",\n//     tags: [\"MoEs\", \"LLMs\", \"Arxiv\"],\n//     readTime: 1.3,\n//     releaseDate: \"2024-06-19\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2405.04434\",\n//   },\n//   {\n//     title: \"Why Transformers need Adam: A Hessian Perspective\",\n//     author: \"University of Hong Kong\",\n//     description:\n//       \"Provides an explanation through the lens of Hessian of why Adam outperforms SGD on Transformer models.\",\n//     tags: [\"Optimizations\", \"Arxiv\"],\n//     readTime: 1.4,\n//     releaseDate: \"2024-10-21\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2402.16788\",\n//   },\n//   {\n//     title: \"Sparse Crosscoders for Cross-Layer Features and Model Diffing\",\n//     author: \"Anthropic\",\n//     description:\n//       \"Introduces sparse crosscoders, a variant of sparse autoencoders or transcoders for understanding models in superposition.\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 0.6,\n//     releaseDate: \"2024-10-25\",\n//     isRead: false,\n//     downloadLink:\n//       \"https://transformer-circuits.pub/2024/crosscoders/index.html\",\n//   },\n//   {\n//     title: \"Beyond A*\",\n//     author: \"Meta\",\n//     description:\n//       \"Shows a Transformer model to optimally solve unseen Sokoban puzzles 93.7% of the time with up to 26.8% fewer steps than the A*.\",\n//     tags: [\"Transformers\", \"Arxiv\"],\n//     readTime: 0.8,\n//     releaseDate: \"2024-04-26\",\n//     isRead: false,\n//     downloadLink: \"https://arxiv.org/pdf/2402.14083\",\n//   },\n//   {\n//     title: \"Beating SPACE EXPLORATION | The 300 Hour Factorio Mod\",\n//     author: \"DoshDoshington\",\n//     description:\n//       \"Playthrough of the Space Exploration Modpack for the base-building logistics management game, Factorio.\",\n//     tags: [\"Factorio\", \"YT\"],\n//     readTime: 3.5,\n//     releaseDate: \"2022-08-09\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=8hRJ-CcwvrI&t=3668s\",\n//   },\n//   {\n//     title: \"LPUs, TPUs & GPUs w/ Jonathan Ross, Founder Groq\",\n//     author: \"Lumida Wealth\",\n//     description:\n//       \"Interview with the founder of breakout AI Accelerator lab Groq on the state of the art in LLM Hardware.\",\n//     tags: [\"Parallel Computing\", \"Hardware\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2023-12-03\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=gE8SvBqMf8o&t=989s\",\n//   },\n//   {\n//     title:\n//       \"o3 - Tradeoffs of Heuristics, Tree Search, External Memory, In-built Bias\",\n//     author: \"John Tan Chong Min\",\n//     description:\n//       \"Slideshow lecture from John about the SOTA and limitations in LLM Reasoning.\",\n//     tags: [\"LLMs\", \"Reinforcement Learning\", \"Meta-Learning\", \"YT\"],\n//     readTime: 4.0,\n//     releaseDate: \"2024-12-30\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=f5obaHiOog4&t=5986s\",\n//   },\n//   {\n//     title: \"The State of Reasoning\",\n//     author: \"Nathan Lambert\",\n//     description: \"NeurIPS 2024 talk on the attempts to teach LLMs to Reason\",\n//     tags: [\"LLMs\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-03\",\n//     isRead: false,\n//     downloadLink: \"https://www.youtube.com/watch?v=skT89EvIjrc\",\n//   },\n//   {\n//     title: \"CUDA Programming Course\",\n//     author: \"freeCodeCamp.org\",\n//     description:\n//       \"Tutorial on the implementation details of coding in the CUDA programming language.\",\n//     tags: [\"Programming\", \"Parallel Computing\", \"YT\"],\n//     readTime: 12,\n//     releaseDate: \"2024-09-24\",\n//     isRead: false,\n//     downloadLink: \"https://www.youtube.com/watch?v=86FAWCzIe_4&t=1s\",\n//   },\n//   {\n//     title:\n//       \"Deep Symbolic Regression: Recovering Math Expressions from Data via Risk-Seeking Policy Gradients\",\n//     author: \"Lawrence Livermore Laboratory\",\n//     description:\n//       \"Brenden Petersen explains how symbolic regression transforms data-fitting into a problem of Reinforcement Learning over language space.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2021-06-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=o43X6Hni6tU&t=2715s\",\n//   },\n//   {\n//     title: \"AI for physics & physics for AI\",\n//     author: \"MIT\",\n//     description:\n//       \"Description of the AI Feynman project for Symbolic Regression on Physics Data.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pkJkHB_c3nA&t=46s\",\n//   },\n//   {\n//     title: \"AI for physics & physics for AI\",\n//     author: \"MIT\",\n//     description:\n//       \"Description of the AI Feynman project for Symbolic Regression on Physics Data.\",\n//     tags: [\"Symbolic Systems\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pkJkHB_c3nA&t=46s\",\n//   },\n//   {\n//     title: \"Parables on the Power of Planning in AI: From Poker to Diplomacy\",\n//     author: \"Noam Brown\",\n//     description:\n//       \"OpenAI's Noam Brown explains the story of the power of applying planning to AI in Games.\",\n//     tags: [\"LLMs\", \"Reinforcement Learning\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2024-09-17\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=eaAonE58sLU\",\n//   },\n//   {\n//     title:\n//       \"The Wisdom (and Madness) of Crowds: Political Markets as Election Predictors\",\n//     author: \"Aswath Damodaran\",\n//     description:\n//       \"Examines the history of thought around the conditions under which the crowd or market's judgment becomes wise.\",\n//     tags: [\"Markets\", \"Finance\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-09-07\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=LejPvcakKpE&t=284s\",\n//   },\n//   {\n//     title:\n//       \"@Asianometry & Dylan Patel – How the Semiconductor Industry Actually Works\",\n//     author: \"Dwarkesh Patel\",\n//     description:\n//       \"Conversation between two Industry watchdogs on the state of play in US-China AI Race.\",\n//     tags: [\"Distributed Computing\", \"Hardware\", \"YT\"],\n//     readTime: 2.5,\n//     releaseDate: \"2024-10-04\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=pE3KKUKXcTM\",\n//   },\n//   {\n//     title: \"The Insane Engineering of Minecraft's Most Powerful Mobfarm\",\n//     author: \"cubicmetre\",\n//     description:\n//       \"exploring the End of Light mobfarm and how it pushes mobfarming in Minecraft to the game's absolute limits.\",\n//     tags: [\"Minecraft\", \"YT\"],\n//     readTime: 2.0,\n//     releaseDate: \"2024-08-07\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=v1eouiqVfZY\",\n//   },\n//   {\n//     title: \"Sun Valley Writers' Conference with Ezra Klein\",\n//     author: \"Ezra Klein\",\n//     description:\n//       \"Discussion on AI, the tie between zoning and homelessness, polarizing politics, and the intersection of government and technology.\",\n//     tags: [\"Policy\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-08-17\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=nRYFyH8-0oc\",\n//   },\n//   {\n//     title: \"A Conversation with Ezra Klein about Liberalism\",\n//     author: \"Ezra Klein\",\n//     description:\n//       \"Reflecting on Democratic governments inability to build real things in the real world quickly and affordably.\",\n//     tags: [\"Policy\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2023-12-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=7OyLHeJB15c&t=671s\",\n//   },\n//   {\n//     title: \"Arguments for Atheism\",\n//     author: \"Alex O'Connor\",\n//     description:\n//       \"Two Doctoral Students in the Philosophy of Theology construct a tier list of arguments for Atheism.\",\n//     tags: [\"Philosophy\", \"YT\"],\n//     readTime: 2.5,\n//     releaseDate: \"2024-06-23\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=s_5vfQE6_yE\",\n//   },\n//   {\n//     title: \"How massive Cerebras chips rival Nvidia GPUs for AI\",\n//     author: \"Dr Waku\",\n//     description:\n//       \"Discussion with key engineer at Cerebras AI Accelerator on their unique memory architectures unique use-case in LLMs.\",\n//     tags: [\"Parallel Computing\", \"LLMs\", \"Hardware\", \"YT\"],\n//     readTime: 1.0,\n//     releaseDate: \"2024-12-25\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=qC_lCFTOJU0&t=740s\",\n//   },\n//   {\n//     title: \"Populism, Media Revolutions, and Our Terrible Moment\",\n//     author: \"Hank Green\",\n//     description:\n//       \"Rant from Hank Green on the destruction of trust & reality in society by the Internet's revolutionary Algorithmic Realities.\",\n//     tags: [\"Politics\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-11-22\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=d8PndpFPL8g\",\n//   },\n//   {\n//     title: \"o-models, beyond classical DL\",\n//     author: \"Francois Chollet\",\n//     description:\n//       \"Description of the ARG-AGI model evaluation test set and how current Deep Learning Architectures fail to encapsulate Symbolic reasoning\",\n//     tags: [\"Deep Learning\", \"Symbolic Systems\", \"YT\"],\n//     readTime: 1.5,\n//     releaseDate: \"2025-01-08\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=w9WE1aOPjHc\",\n//   },\n//   {\n//     title: \"Let this method tune hyper-parameters for you!\",\n//     author: \"Tunadorable\",\n//     description:\n//       \"Stepping through, analyzing, and explaining the muP method for controlling optimal hyperparameter divergence with model scaling.\",\n//     tags: [\"Hyperparameter Optimization\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-06\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=-T9pBZ2nBkc\",\n//   },\n//   {\n//     title: \"Let this method tune hyper-parameters for you!\",\n//     author: \"Tunadorable\",\n//     description:\n//       \"Stepping through, analyzing, and explaining the muP method for controlling optimal hyperparameter divergence with model scaling.\",\n//     tags: [\"Hyperparameter Optimization\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-06\",\n//     isRead: true,\n//     downloadLink: \"https://www.youtube.com/watch?v=-T9pBZ2nBkc\",\n//   },\n//   {\n//     title: \"The Practitioner's Guide to the Maximal Update Parameterization\",\n//     author: \"Eleuther.AI\",\n//     description:\n//       \"Explores the implementation details of mutransfer & basis it's in statistical properties as well as empirically tests to verify the technique.\",\n//     tags: [\"Hyperparameter Optimization\", \"Deep Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-09-19\",\n//     isRead: true,\n//     downloadLink: \"https://blog.eleuther.ai/mutransfer/\",\n//   },\n//   {\n//     title: \"Git Version Control-- CS61\",\n//     author: \"Harvard\",\n//     description:\n//       \"Harvard CS61 Introductory Guide to Git Version Control, read this for CS30 Course at Brown University\",\n//     tags: [\"Git\", \"Site\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-11-0\",\n//     isRead: true,\n//     downloadLink: \"https://cs61.seas.harvard.edu/site/ref/git/#gsc.tab=0\",\n//   },\n//   {\n//     title: \"git - the simple guide\",\n//     author: \"\",\n//     description:\n//       \"beautifully designed scroll-based description of git which specializes in simple descriptions of complex commands\",\n//     tags: [\"Roger Dudler\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-1-1\",\n//     isRead: true,\n//     downloadLink: \"https://rogerdudler.github.io/git-guide/\",\n//   },\n//   {\n//     title: \"Treadmill: Attributing the Source of Tail Latency\",\n//     author: \"Meta\",\n//     description:\n//       \"decomposes features of request tail latency into an evaluation methodology to reduce the 99th-percentile latency by 43% and its variance by 93%\",\n//     tags: [\"Distributed Systems\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2016-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.jasonmars.org/wp-content/uploads/2020/04/ISCA.2016.47.pdf\",\n//   },\n//   {\n//     title: \"Open Versus Closed: A Cautionary Tale\",\n//     author: \"CMU\",\n//     description:\n//       \"Illustrates the behavior differences b/w closed & open sourced models in real-world settings to motivate a proposed partly open system model for diagnostic workload generation\",\n//     tags: [\"Distributed Systems\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2006-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.usenix.org/legacy/event/nsdi06/tech/full_papers/schroeder/schroeder.pdf\",\n//   },\n//   {\n//     title: \"Quantile Regression\",\n//     author: \"sklearn\",\n//     description:\n//       \"Quick description of the math behind & motivation behind Quantile Regression (as opposed to OLS Linear Regression, and how to use sklearn to implement it.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-01-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://scikit-learn.org/dev/auto_examples/linear_model/plot_quantile_regression.html\",\n//   },\n//   {\n//     title: \"Interpretability in Parameter Space\",\n//     author: \"Apollo\",\n//     description: \"Introduced method to decompose a NN params into components\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2025-01-24\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2501.14926\",\n//   },\n//   {\n//     title: \"The Mythos of Model Interpretability\",\n//     author: \"Zachary C. Lipton\",\n//     description:\n//       \"Old paper we went over for CS2222 outlining reasons to want, and properties you would expect from, Interpretable models\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"2017-03-06\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1606.03490\",\n//   },\n//   {\n//     title: \"The Leaky Bucket Theory of Network Effects\",\n//     author: \"Dan Hockenmaier\",\n//     description:\n//       \"A framework for understanding the strength of a marketplace’s network effect\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-12-09\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.danhock.co/p/the-leaky-bucket-theory-of-network-effects?utm_source=profile&utm_medium=reader2\",\n//   },\n//   {\n//     title: \"Why Did DoorDash Win?\",\n//     author: \"Dan Hockenmaier\",\n//     description:\n//       \"A rough description of the process by which Doordash rose to dominate the food delivery market\",\n//     tags: [\"Economics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-22\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.danhock.co/p/why-did-doordash-win?utm_source=tldrproduct\",\n//   },\n//   {\n//     title: \"Good Lord\",\n//     author: \"Benn\",\n//     description:\n//       \"essay from the supposed perspective of a tech insider about the internal experience of a newly empowered debaucherous trump-fueled tech vibe\",\n//     tags: [\"Politics\", \"Technology\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-01-24\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://benn.substack.com/p/good-lord?utm_source=tldrproduct#footnote-5-155630639\",\n//   },\n//   {\n//     title: \"Probing Classifiers: Promises, Shortcomings, and Advances\",\n//     author: \"Israel Institute of Technology\",\n//     description:\n//       \"Critically reviews probing classifiers as a framework for understanding learned information in models, highlighting their promises, shortcomings, and advances. [CS2222]\",\n//     tags: [\"Interpretability\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-02-21\",\n//     isRead: true,\n//     downloadLink: \"https://aclanthology.org/2022.cl-1.7.pdf\",\n//   },\n//   {\n//     title: \"Mechanistic?\",\n//     author: \"Harvard / Allen Institute\",\n//     description:\n//       \"Explains the many meanings behind *mechinterp* as a product of a critical confluence of communities of varying degrees of credentials [CS2222]\",\n//     tags: [\"AI Safety\", \"Interpretability\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-10-07\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2410.09087\",\n//   },\n//   {\n//     title: \"escaping flatland: career advice for CS undergrads\",\n//     author: \"Euan Ong\",\n//     description:\n//       \"A message to CS undergrads about the unmentioned mimetic vortex of prestige and narrow set of allowed passions which university can distract you with.\",\n//     tags: [\"Essay\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2024-12-26\",\n//     isRead: true,\n//     downloadLink: \"https://space.ong.ac/escaping-flatland\",\n//   },\n//   {\n//     title:\n//       \"Violence and the Sacred: College as an incubator of Girardian terror\",\n//     author: \"Dan Wang\",\n//     description:\n//       \"Commentary on the social pressures of college through the lens of René Girard's concept of mimetic desire\",\n//     tags: [\"Politics\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2017-06-25\",\n//     isRead: true,\n//     downloadLink: \"https://danwang.co/college-girardian-terror/\",\n//   },\n//   {\n//     title: \"The Linear Representation Hypothesis and the Geometry of LLMs\",\n//     author: \"Park et al.\",\n//     description:\n//       \"Attempts to formalize the concept of a linear representation and associated geometric notions of relation in that linear subspace [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"2024-06-17\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2311.03658\",\n//   },\n//   {\n//     title: \"interpreting GPT: the logit lens\",\n//     author: \"nostalgebraist\",\n//     description:\n//       \"observations about how intermediate representations adapt as you track them from input to output of GPT2&3\",\n//     tags: [\"Interpretability\", \"Transformers\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-08-30\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://www.lesswrong.com/posts/AcKRB8wDpdaN6v6ru/interpreting-gpt-the-logit-lens [CS2222]\",\n//   },\n//   {\n//     title: \"Axiomatic Attribution for Deep Networks\",\n//     author: \"Sundararajan et al.\",\n//     description:\n//       \"Proposes the Integrated Gradients technique for model-ambiguously attributing input features to model output [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2017-06-13\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1703.01365\",\n//   },\n//   {\n//     title: \"Rethinking the Role of Demonstrations\",\n//     author: \"University of Washington\",\n//     description:\n//       \"Digs into testing why in-context learning works in LLMs [CS2222]\",\n//     tags: [\"Interpretability\", \"LLMs\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2020-08-20\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2202.12837\",\n//   },\n//   {\n//     title: \"Transformer FFNs build predictions in Vocab Space\",\n//     author: \"Geva et al.\",\n//     description:\n//       \"Decomposes FFN updates into sub-updates corresponding to single vectors corresponding to human intepretable features\",\n//     tags: [\"Interpretability\", \"Transformers\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2022-10-12\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2203.14680\",\n//   },\n//   {\n//     title: \"Explainable AI: Saliency Maps\",\n//     author: \"Bijil Subhash\",\n//     description:\n//       \"blog page implementing and briefly explaining saliency maps for understanding which features of a input most contributed to the output\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2022-03-05\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://medium.com/@bijil.subhash/explainable-ai-saliency-maps-89098e230100\",\n//   },\n//   {\n//     title: \"Privileged vs non-privileged bases in ML\",\n//     author: \"Harrison Pim\",\n//     description:\n//       \"Provides a geometric intuition for how architectural choices restrain & nudge models towards aligning features internally aligned in forseeable & interpretable ways.\",\n//     tags: [\"Architecture\", \"Interpretability\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-05-05\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://harrisonpim.com/blog/privileged-vs-non-privileged-bases-in-machine-learning\",\n//   },\n//   {\n//     title: \"What is self-supervised learning?\",\n//     author: \"IBM\",\n//     description:\n//       \"Describes briefly a few classes of self-supervised learning from encoders to autoregressive models to contrastic & non-constrastive learning.\",\n//     tags: [\"Machine Learning\", \"Site\"],\n//     readTime: 0.5,\n//     releaseDate: \"2023-12-05\",\n//     isRead: true,\n//     downloadLink: \"https://www.ibm.com/think/topics/self-supervised-learning\",\n//   },\n//   {\n//     title: \"Exploring Neural Networks with Activation Atlases\",\n//     author: \"Google Brain\",\n//     description:\n//       \"provides very high quality analysis of navigating across a CNN activation atlas to understand how different layers visualize different classes of output.\",\n//     tags: [\"Interpretability\", \"Site\"],\n//     readTime: 1.0,\n//     releaseDate: \"2019-03-09\",\n//     isRead: true,\n//     downloadLink: \"https://distill.pub/2019/activation-atlas/\",\n//   },\n//   {\n//     title: \"GPipe\",\n//     author: \"Google\",\n//     description:\n//       \"Outlines a scheduling routine for distributing computation of NN pipelines across multiple devices using micro-batches of data\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 0.0,\n//     releaseDate: \"XXXX-XX-XX\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1811.06965\",\n//   },\n//   {\n//     title: \"PyTorch FSDP\",\n//     author: \"Meta\",\n//     description:\n//       \"Outlines Meta's Fully-Sharded Data Parallel for achieving nearly-linear TFLOP scaling with worker count\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-09-12\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2304.11277\",\n//   },\n//   {\n//     title: \"ZeRO\",\n//     author: \"Microsoft\",\n//     description:\n//       \"A Fundamental paper for me and the field of Distributed Model Parallelism techniques, ZeRO outlines how to shard parameters, gradients, and optimizer states across devices to minimize memory usage.\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-05-13\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/1910.02054\",\n//   },\n//   {\n//     title: \"ZeRO++\",\n//     author: \"Micorsoft\",\n//     description:\n//       \"A Follow up to ZeRO, this paper introduces additional information about ways to i. offload more memory usage onto local CPU or node-level memory and ii. optimize the communication which is leaned on heavily by these ZeRO techniques.\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2023-06-16\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2306.10209\",\n//   },\n//   {\n//     title: \"PipeDream: Generalized Pipeline Parallelism for DNN Training\",\n//     author: \"Microsoft\",\n//     description:\n//       \"Describes a method for automatically partitioning NN layers among workers to balance work & minimize communication, stashing weights to achieve 100% hardware utilization, yielding 5.3X clocktime speedup over naive data-batch parallelism\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2019-10-30\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://people.eecs.berkeley.edu/~matei/papers/2019/sosp_pipedream.pdf\",\n//   },\n//   {\n//     title: \"Autonomous GUidance for Multi-Body Orbital Transfers using RL\",\n//     author: \"Nicolas LaFarge\",\n//     description:\n//       \"Explains a technique for teaching RL models to enter desired periodic orbits using comparison to a learned reference variable.\",\n//     tags: [\"Reinforcement Learning\", \"Arxiv\"],\n//     readTime: 1.0,\n//     releaseDate: \"2020-05-01\",\n//     isRead: true,\n//     downloadLink:\n//       \"https://engineering.purdue.edu/people/kathleen.howell.1/Publications/Masters/2020_Lafarge.pdf\",\n//   },\n//   {\n//     title: \"The Case for Index Funds\",\n//     author: \"Ben Felix\",\n//     description:\n//       \"Reports on the Cost Efficiency, Diversification, Investment Returns, Tax Efficiency, and Simplicity of Index Funds over actively managed funds as personal retirement account vehicles.\",\n//     tags: [\"Finance\", \"YT\"],\n//     readTime: 0.5,\n//     releaseDate: \"2025-02-17\",\n//     isRead: true,\n//     downloadLink: \"https://youtu.be/Nv5CiRSCVxA\",\n//   },\n//   {\n//     title: \"Efficient Large-Scale Language Model Training on GPU Clusters\",\n//     author: \"NVIDIA\",\n//     description:\n//       \"Proposes a novel interleaved pipelining schedule that can improve throughput by 10+% allowing for 1T model training at 502 petaFLOP/s on 3072 GPUs (per-GPU throughput of 52% of theoretical peak).\",\n//     tags: [\"Distributed Computing\", \"Arxiv\"],\n//     readTime: 0.5,\n//     releaseDate: \"2021-08-23\",\n//     isRead: true,\n//     downloadLink: \"https://arxiv.org/pdf/2104.04473\",\n//   },\n// ];\n\n// /*  \n//   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ TEMPLATE & RUNNING LIST OF TAGS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n//   Site, Arxiv, YT\n\n//   Tags = Activation Functions, AI Safety, Architecture, Arxiv, Autoencoders, \n//   Deep Learning, Diffusion Models, Distributed Computing, Distributed Systems, \n//   Economics, Essay, Factorio, Finance, Git, GNNs, Grokking, Hardware, \n//   Hyperparameter Optimization, Information Theory, Interpretability, \n//   Libraries, Lie Groups, LLMs, Machine Learning, Markets, Mathematics, \n//   Meta-Learning, Minecraft, MoEs, Neural Networks, Optimization, Optimizers, \n//   Parallel Computing, Philosophy, Policy, Politics, Programming, \n//   Reinforcement Learning, Site, Symbolic Systems, Technology, \n//   Transformers, Tutorial\n\n\n//   {\n//     title: \"\",\n//     author: \"\",\n//     description:\n//       \"\",\n//     tags: [\"\"],\n//     readTime: 0.0,\n//     releaseDate: \"XXXX-XX-XX\",\n//     isRead: false,\n//     downloadLink: \"\",\n//   }, \n// */\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}