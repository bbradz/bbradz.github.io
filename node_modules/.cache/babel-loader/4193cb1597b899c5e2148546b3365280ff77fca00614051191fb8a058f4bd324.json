{"ast":null,"code":"var _jsxFileName = \"/Users/benbradley/Desktop/CS_Classwork/bbradz.github.io/src/components/Library.js\",\n  _s2 = $RefreshSig$();\n// library.js - DEBUGGING VERSION - PLEASE RUN THIS AND CHECK CONSOLE\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as d3 from \"d3\";\nimport { runGameOfLife, getTagColor, getTextColor, formatDate } from \"../functionality.js\";\nimport sourcesRawData from \"../input.json\";\nimport similaritiesRawData from \"../document_similarities.json\";\nimport \"../css/library.css\";\n\n// ===================== Tag Component =====================\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tag = /*#__PURE__*/React.memo(_c = ({\n  tag,\n  onTagFilter,\n  isActive\n}) => {\n  // isActive prop is already here - correct\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    \"data-type\": tag,\n    onClick: () => onTagFilter(tag),\n    style: {\n      backgroundColor: isActive ? getTagColor(tag) : null,\n      // Conditionally apply background color\n      color: isActive ? getTextColor(tag) : null,\n      // Conditionally apply text color\n      cursor: \"pointer\",\n      marginRight: \"4px\",\n      padding: \"2px 6px\",\n      borderRadius: \"3px\",\n      fontSize: \"0.85em\",\n      ...(isActive ? {} : {\n        backgroundColor: null,\n        color: null\n      }) // Ensure default styles when not active\n    },\n    className: isActive ? \"active-tag-filter\" : \"\" // Add class for potential CSS styling\n    ,\n    children: tag\n  }, tag, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Tag;\nTag.displayName = \"Tag\";\n\n// ===================== ReadingListItem Component =====================\nconst ReadingListItem = /*#__PURE__*/React.memo(_c3 = ({\n  item,\n  onTagFilter,\n  activeTagFilters\n}) => {\n  // Receive activeTagFilters as prop\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    \"data-release\": item.releaseDate,\n    \"data-time\": item.readTime,\n    \"data-read\": String(item.isRead),\n    children: [item.isRead ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"read-indicator\",\n      children: \"\\u2713\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"\\\"\", item.title, \"\\\" by \", item.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meta\",\n          children: [item.isRead ? \"Read: \" : null, formatDate(item.releaseDate), \" |\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-break\",\n            children: [\"Est. Time \", item.readTime, \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: item.tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n          tag: tag,\n          onTagFilter: onTagFilter,\n          isActive: activeTagFilters.includes(tag)\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this) // isActive prop here based on activeTagFilters\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), item.downloadLink ? /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"download-link\",\n      href: item.downloadLink,\n      download: true,\n      children: \"Source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n});\n_c4 = ReadingListItem;\nReadingListItem.displayName = \"ReadingListItem\";\n\n// ===================== Library Component =====================\nfunction Library() {\n  _s2();\n  var _s = $RefreshSig$();\n  console.log(\"Library Component RENDER\");\n\n  // --- State Declarations ---\n  const [theme, setTheme] = useState(\"dark\");\n  const scrollToTopButtonRef = useRef(null);\n  const [readingListData, setReadingListData] = useState([]);\n  const [graphData, setGraphData] = useState([]); // Keep graphData state\n  const [displayedReadingListData, setDisplayedReadingListData] = useState([]); // New state for list display\n  const originalSourcesRawData = useRef(null); // Ref to store initial data\n  const [activeTagFilters, setActiveTagFilters] = useState([]);\n  const [readFilterState, setReadFilterState] = useState(0);\n  const [activeTypeFilter, setActiveTypeFilter] = useState(\"all\"); // Track active type filter\n\n  const toggleTheme = () => {\n    setTheme(current => current === \"dark\" ? \"light\" : \"dark\");\n  };\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    document.body.setAttribute(\"data-theme\", theme);\n  }, [theme]);\n  useEffect(() => {\n    runGameOfLife(\"gameOfLife\");\n  }, []);\n\n  // --- 1st useEffect: Load raw data only ---\n  useEffect(() => {\n    try {\n      const initialReadingListData = sourcesRawData.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      }));\n      originalSourcesRawData.current = [...initialReadingListData];\n      console.log(\"1st useEffect - sourcesRawData loaded:\", sourcesRawData);\n    } catch (error) {\n      console.error(\"Library useEffect (data load) - Error importing reading list data:\", error);\n    }\n  }, []); // Empty dependency array - runs only once on mount\n\n  // --- 2nd useEffect: Apply initial filters and set states based on loaded data ---\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded\n      console.log(\"2nd useEffect - originalSourcesRawData.current is now available, applying initial filters.\");\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Pass data explicitly\n      filteredData = filterByType(\"all\", filteredData); // Ensure \"all\" types are shown initially, pass data\n      filteredData = filterReadStatus(undefined, filteredData); // Ensure all read statuses are shown initially, pass data\n\n      console.log(\"2nd useEffect - finalFilteredData after initial filters:\", filteredData);\n      setReadingListData(filteredData); // Set readingListData with final filtered data\n      setGraphData(filteredData); // *Now* set graphData using the *same* final filtered data\n      setDisplayedReadingListData([...filteredData]); // Initialize displayed list as a copy\n      console.log(\"2nd useEffect - readingListData, graphData, and displayedReadingListData states updated.\");\n    } else {\n      console.log(\"2nd useEffect - originalSourcesRawData.current is not yet available.\");\n    }\n  }, [originalSourcesRawData]); // Dependency on originalSourcesRawData - runs after data loads\n\n  const debounceFunc = (func, wait) => {\n    let timeout;\n    return function (...args) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  };\n  const performSearch = (query, data) => {\n    if (!query) return data;\n    return data.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n  };\n  const handleSearchInput = e => {\n    const query = e.target.value;\n    const filteredData = performSearch(query, originalSourcesRawData.current.map((item, index) => ({\n      ...item,\n      embedding: item.embedding || [],\n      originalIndex: index\n    })));\n    console.log(\"handleSearchInput - Before setReadingListData, readingListData:\", readingListData);\n    console.log(\"handleSearchInput - Before setGraphData, graphData:\", graphData);\n    console.log(\"graphData state before setGraphData in handleSearchInput:\", graphData); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on search\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\"graphData state after setGraphData in handleSearchInput:\", graphData); // DEBUG LOG\n    console.log(\"handleSearchInput - After setReadingListData, readingListData:\", readingListData);\n    console.log(\"handleSearchInput - After setGraphData, graphData:\", graphData);\n  };\n  const sortReadingList = (sortBy, sortOrder) => {\n    let sortedData = [...displayedReadingListData]; // Sort based on displayed list\n    sortedData.sort((a, b) => {\n      let comparison = 0;\n      if (sortBy === \"release\") {\n        const dateA = new Date(a.releaseDate);\n        const dateB = new Date(b.releaseDate);\n        comparison = dateA - dateB;\n      } else if (sortBy === \"time\") {\n        comparison = a.readTime - b.readTime;\n      }\n      return sortOrder === \"asc\" ? comparison : comparison * -1;\n    });\n    console.log(\"sortReadingList - Before setDisplayedReadingListData, displayedReadingListData:\", displayedReadingListData);\n    console.log(\"graphData state in sortReadingList:\", graphData); // DEBUG LOG\n    setDisplayedReadingListData(sortedData); // Update ONLY displayed list\n    console.log(\"sortReadingList - After setDisplayedReadingListData, displayedReadingListData:\", sortedData);\n    // DO NOT UPDATE graphData or readingListData\n  };\n  const filterByType = (filterType, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (filterType === \"all\") {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      }));\n      setActiveTypeFilter(\"all\"); // Reset activeTypeFilter when \"all\" is selected\n    } else {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      })).filter(item => item.tags.includes(filterType));\n      setActiveTypeFilter(filterType); // Set activeTypeFilter when a type is selected\n    }\n    console.log(\"filterByType - Before setReadingListData, readingListData:\", readingListData);\n    console.log(\"filterByType - Before setGraphData, graphData:\", graphData);\n    console.log(\"graphData state before setGraphData in filterByType:\", graphData); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on type filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\"graphData state after setGraphData in filterByType:\", graphData); // DEBUG LOG\n    console.log(\"filterByType - After setReadingListData, readingListData:\", filteredData);\n    console.log(\"filterByType - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n  const filterReadStatus = (onlyUnread, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (onlyUnread === true) {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      })).filter(item => !item.isRead);\n    } else if (onlyUnread === false) {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      })).filter(item => item.isRead);\n    } else {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index\n      }));\n    }\n    console.log(\"filterReadStatus - Before setReadingListData, readingListData:\", readingListData);\n    console.log(\"filterReadStatus - Before setGraphData, graphData:\", graphData);\n    console.log(\"graphData state before setGraphData in filterReadStatus:\", graphData); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on read status filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\"graphData state after setGraphData in filterReadStatus:\", graphData); // DEBUG LOG\n    console.log(\"filterReadStatus - After setReadingListData, readingListData:\", filteredData);\n    console.log(\"filterReadStatus - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n  const handleTagFilter = tag => {\n    let newActiveTagFilters = [...activeTagFilters];\n    if (newActiveTagFilters.includes(tag)) {\n      newActiveTagFilters = newActiveTagFilters.filter(activeTag => activeTag !== tag);\n    } else {\n      newActiveTagFilters = [...newActiveTagFilters, tag];\n    }\n    setActiveTagFilters(newActiveTagFilters);\n  };\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying tag filters\n      applyTagFilters(originalSourcesRawData.current);\n    }\n  }, [activeTagFilters, originalSourcesRawData]); // Added originalSourcesRawData dependency\n\n  const applyTagFilters = () => {\n    // Modified: No arguments needed - always uses original data\n    const dataToFilter = originalSourcesRawData.current; // Always filter against original data\n    if (!dataToFilter) return []; // Handle no data case\n\n    let filteredData = dataToFilter.map((item, index) => ({\n      // Filter original data\n      ...item,\n      embedding: item.embedding || [],\n      originalIndex: index\n    }));\n    if (activeTagFilters.length > 0) {\n      filteredData = filteredData.filter(item => {\n        return activeTagFilters.every(filterTag => item.tags.includes(filterTag));\n      });\n    }\n    console.log(\"applyTagFilters - Before setReadingListData, readingListData:\", readingListData);\n    console.log(\"applyTagFilters - Before setGraphData, graphData:\", graphData);\n    console.log(\"graphData state before setGraphData in applyTagFilters:\", graphData); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on tag filter change\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\"graphData state after setGraphData in applyTagFilters:\", graphData); // DEBUG LOG\n    console.log(\"applyTagFilters - After setReadingListData, readingListData:\", filteredData);\n    console.log(\"applyTagFilters - After setGraphData, graphData:\", graphData);\n    return filteredData;\n  };\n  const toggleReadFilter = button => {\n    setReadFilterState(prevState => (prevState + 1) % 3);\n  };\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying read filter\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Start with tag-filtered data\n      if (readFilterState === 1) {\n        filteredData = filterReadStatus(false, filteredData); // Pass tag-filtered data\n      } else if (readFilterState === 2) {\n        filteredData = filterReadStatus(true, filteredData); // Pass tag-filtered data\n      } else {\n        filteredData = filterByType(activeTypeFilter, filteredData); // Re-apply type filter, pass tag-filtered data\n      }\n      console.log(\"useEffect [readFilterState] - filteredData before setGraphData:\", filteredData);\n      setGraphData(filteredData); // Update graph data on read filter change\n      setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    }\n  }, [readFilterState, originalSourcesRawData, activeTagFilters, activeTypeFilter]); // Added activeTypeFilter dependency\n\n  const toggleSort = (button, criteria) => {\n    const currentOrder = button.dataset.order || \"unsorted\";\n    let newOrder;\n    if (currentOrder === \"unsorted\") {\n      newOrder = \"asc\";\n    } else if (currentOrder === \"asc\") {\n      newOrder = \"desc\";\n    } else {\n      newOrder = \"unsorted\";\n    }\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach(btn => {\n      btn.classList.remove(\"active\");\n      const arrowSpan = btn.querySelector(\".sort-arrow\");\n      if (arrowSpan) arrowSpan.textContent = \"\";\n    });\n    if (newOrder !== \"unsorted\") {\n      button.classList.add(\"active\");\n      button.dataset.order = newOrder;\n      const arrowSpan = button.querySelector(\".sort-arrow\");\n      if (arrowSpan) {\n        arrowSpan.textContent = newOrder === \"asc\" ? \"↑\" : \"↓\";\n      }\n      sortReadingList(criteria, newOrder);\n    } else {\n      button.dataset.order = \"unsorted\";\n      setDisplayedReadingListData([...readingListData]); // Reset displayed list using copy from readingListData\n    }\n  };\n  const toggleFilterType = (button, type) => {\n    const isActive = button.classList.contains(\"active\");\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach(btn => {\n      if (btn !== document.getElementById(\"filter-read\")) {\n        btn.classList.remove(\"active\");\n        btn.style.removeProperty(\"--active-color\");\n        btn.style.removeProperty(\"--active-text-color\");\n      }\n    });\n    if (!isActive) {\n      button.classList.add(\"active\");\n      switch (type) {\n        case \"YT\":\n          button.style.setProperty(\"--active-color\", \"#FF0000\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Arxiv\":\n          button.style.setProperty(\"--active-color\", \"#A51C30\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Site\":\n          button.style.setProperty(\"--active-color\", \"#F5F5DC\");\n          button.style.setProperty(\"--active-text-color\", \"#000000\");\n          break;\n        default:\n          break;\n      }\n      filterByType(type);\n    } else {\n      button.classList.remove(\"active\"); // Remove active class to reset style based on CSS\n      button.style.removeProperty(\"--active-color\");\n      button.style.removeProperty(\"--active-text-color\");\n      filterByType(\"all\");\n    }\n  };\n\n  // Memoize graphData to prevent unnecessary re-renders of DocumentGraph\n  const memoizedGraphData = useMemo(() => {\n    console.log(\"memoizedGraphData useMemo called, graphData:\", graphData); // DEBUG LOG\n    return graphData;\n  }, [graphData]);\n\n  // ===================== DocumentGraph Component =====================\n  const DocumentGraph = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_s(({\n    width,\n    height,\n    graphDisplayData,\n    documentSimilaritiesData\n  }) => {\n    _s();\n    console.count(\"DocumentGraph RENDER\"); // <--- Add render counter\n    console.log(\"DocumentGraph RENDER - graphDisplayData prop received:\", graphDisplayData);\n    const containerRef = useRef(null);\n    const [error, setError] = useState(null);\n    const [isSmallScreen, setIsSmallScreen] = useState(false);\n    const svgRef = useRef(null); // Keep svgRef to check if SVG exists\n    const simulationRef = useRef(null);\n    const nodeTitleGroupRef = useRef(null);\n    const prevGraphDataRef = useRef(graphDisplayData); // Ref to store previous prop\n\n    useEffect(() => {\n      if (JSON.stringify(graphDisplayData) !== JSON.stringify(prevGraphDataRef.current)) {\n        console.log(\"DocumentGraph useEffect - graphDisplayData prop CHANGED:\", graphDisplayData);\n        prevGraphDataRef.current = graphDisplayData; // Update previous prop\n      } else {\n        console.log(\"DocumentGraph useEffect - graphDisplayData prop UNCHANGED (shallowly equal):\", graphDisplayData);\n      }\n    }, [graphDisplayData]);\n    const checkScreenSize = () => {\n      setIsSmallScreen(window.innerWidth <= 768);\n    };\n    const debouncedCheckScreenSize = debounceFunc(checkScreenSize, 100);\n    useEffect(() => {\n      checkScreenSize();\n      window.addEventListener(\"resize\", debouncedCheckScreenSize);\n      return () => {\n        window.removeEventListener(\"resize\", debouncedCheckScreenSize);\n      };\n    }, []);\n    const cleanupGraph = useCallback(() => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n        simulationRef.current = null;\n      }\n      if (containerRef.current && svgRef.current) {\n        // Make sure svgRef.current exists\n        const svg = d3.select(svgRef.current);\n        svg.selectAll(\"*\").remove(); // Clear the SVG content, not the container\n      }\n    }, []);\n    useEffect(() => {\n      console.log(\"DocumentGraph useEffect - graphDisplayData prop in useEffect:\", graphDisplayData); // Log renamed prop\n      if (!documentSimilaritiesData) {\n        console.log(\"DocumentGraph useEffect - No documentSimilaritiesData, returning early.\");\n        return;\n      }\n      console.log(\"DocumentGraph useEffect - graphDisplayData:\", graphDisplayData); // DEBUG\n      if (!isSmallScreen && graphDisplayData && graphDisplayData.length > 0) {\n        // Use graphDisplayData\n        console.log(\"DocumentGraph useEffect - Initializing graph with graphDisplayData:\", graphDisplayData);\n        initializeGraph(graphDisplayData); // Use graphDisplayData\n      } else if (!isSmallScreen && (!graphDisplayData || graphDisplayData.length === 0) // Use graphDisplayData\n      ) {\n        console.log(\"DocumentGraph useEffect - Cleaning up graph - No data or small screen.\");\n        cleanupGraph();\n        if (containerRef.current) {\n          const container = d3.select(containerRef.current);\n          let svg = d3.select(svgRef.current);\n          if (svg.empty()) {\n            // Check if SVG is not yet created or was removed somehow\n            svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"className\", \"rounded-lg\");\n            svgRef.current = svg.node(); // Update the ref to the created SVG node\n          }\n          svg.selectAll(\"*\").remove(); // Ensure any previous content is cleared before adding \"No documents\" text\n\n          svg.append(\"rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"fill\", \"var(--graph-background)\");\n          const textGroup = svg.append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n          textGroup.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"fill\", \"var(--text-color)\").text(\"No documents to display\");\n        }\n      } else {\n        console.log(\"DocumentGraph useEffect - Condition not met - No graph update.\");\n      }\n    }, [isSmallScreen, width, height, documentSimilaritiesData, memoizedGraphData // Re-add memoizedGraphData dependency as it should trigger graph updates when filters/search change\n    ]);\n    const initializeGraph = async visibleDocsForGraph => {\n      if (!containerRef.current) return;\n      if (!documentSimilaritiesData) return;\n      cleanupGraph();\n      try {\n        const container = d3.select(containerRef.current);\n        // Ensure SVG is created if it doesn't exist, or select existing one\n        let svg = d3.select(svgRef.current);\n        if (svg.empty()) {\n          svg = container.append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"className\", \"rounded-lg\");\n          svgRef.current = svg.node(); // Update the ref to the created SVG node\n        }\n        svg.selectAll(\"*\").remove(); // Clear previous content before drawing graph\n\n        svg.append(\"rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"fill\", \"var(--graph-background)\");\n        if (!visibleDocsForGraph.length) {\n          const textGroup = svg.append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n          textGroup.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"fill\", \"var(--text-color)\").text(\"No documents to display\");\n          return;\n        }\n        const initialTranslateX = width / 3 - 25;\n        const initialTranslateY = height / 4 + 10;\n        const initialScale = 0.45;\n        const g = svg.append(\"g\");\n        const zoom = d3.zoom().scaleExtent([initialScale, 3]).translateExtent([[0, 0], [width, height]]).on(\"zoom\", event => {\n          g.attr(\"transform\", event.transform);\n        });\n        svg.call(zoom.transform, d3.zoomIdentity.translate(initialTranslateX, initialTranslateY).scale(initialScale));\n        svg.call(zoom);\n        const visibleDocIndicesMap = {};\n        visibleDocsForGraph.forEach((doc, index) => {\n          visibleDocIndicesMap[doc.originalIndex] = index;\n        });\n        const nodes = visibleDocsForGraph.map((doc, i) => ({\n          id: String(i),\n          title: doc.title,\n          fullText: doc.description,\n          tags: doc.tags,\n          readTime: doc.readTime,\n          releaseDate: doc.releaseDate,\n          isRead: doc.isRead\n        }));\n        let links = documentSimilaritiesData.filter(link => {\n          return link.source in visibleDocIndicesMap && link.target in visibleDocIndicesMap;\n        }).map(link => ({\n          ...link,\n          source: String(visibleDocIndicesMap[link.source]),\n          target: String(visibleDocIndicesMap[link.target])\n        }));\n        if (!links || links.length === 0) {\n          links = [];\n        }\n        initializeSimulation(nodes, links, width, height, g, svg, visibleDocsForGraph.map(doc => doc.readTime));\n      } catch (error) {\n        setError(\"Error initializing graph. See console for details.\");\n      }\n    };\n    const initializeSimulation = (nodes, links, width, height, g, svg, readTimes) => {\n      nodes.forEach(node => {\n        node.x = width / 2 + (Math.random() - 0.5) * 40;\n        node.y = height / 2 + (Math.random() - 0.5) * 40;\n      });\n      simulationRef.current = d3.forceSimulation().nodes(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(50).strength(0.5)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(width / 2, height / 2)).force(\"x\", d3.forceX(width / 2).strength(0.1)).force(\"y\", d3.forceY(height / 2).strength(0.1)).force(\"collision\", d3.forceCollide().strength(0.1).radius(d => normalizeReadTime(d.readTime, Math.min(...readTimes), Math.max(...readTimes)) + 10)).force(\"boundary\", forceBoundary(width, height, nodes)).alpha(0.3).velocityDecay(0.4).alphaDecay(0.05).alphaMin(0.001);\n      const link = g.append(\"g\").selectAll(\"line\").data(links).join(\"line\").attr(\"stroke\", \"var(--edge-color)\").attr(\"stroke-width\", d => d.width).attr(\"stroke-opacity\", \"var(--edge-opacity)\");\n      const nodeGroup = g.append(\"g\").attr(\"className\", \"nodes\");\n      const node = nodeGroup.selectAll(\"g\").data(nodes).join(\"g\").attr(\"transform\", d => `translate(${d.x},${d.y})`).call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n      node.append(\"circle\").attr(\"r\", d => normalizeReadTime(d.readTime, Math.min(...readTimes), Math.max(...readTimes))).attr(\"fill\", d => d.isRead ? \"#4a9eff\" : \"var(--node-color)\").attr(\"stroke\", \"var(--node-stroke-color)\").on(\"mouseover\", function (event, d) {\n        d3.select(this).attr(\"fill\", \"#8ACE00\");\n        link.attr(\"stroke\", l => l.source.id === d.id || l.target.id === d.id ? \"#8ACE00\" : \"var(--edge-color)\").attr(\"stroke-width\", l => l.source.id === d.id || l.target.id === d.id ? 3 : l.width);\n        const titleGroup = nodeGroup.append(\"g\").attr(\"className\", \"node-title-group\").attr(\"transform\", `translate(${d.x},${d.y})`);\n        nodeTitleGroupRef.current = titleGroup;\n        titleGroup.append(\"text\").attr(\"className\", \"node-title\").attr(\"x\", 10).attr(\"y\", 5).attr(\"fill\", \"var(--text-color)\").text(d.title);\n      }).on(\"mouseout\", function (event, d) {\n        d3.select(this).attr(\"fill\", d => d.isRead ? \"#4a9eff\" : \"var(--node-color)\");\n        link.attr(\"stroke\", \"var(--edge-color)\").attr(\"stroke-width\", l => l.width);\n        if (nodeTitleGroupRef.current) {\n          nodeTitleGroupRef.current.remove();\n          nodeTitleGroupRef.current = null;\n        }\n      });\n      simulationRef.current.on(\"tick\", () => {\n        link.attr(\"x1\", d => boundPosition(d.source.x, width, -200)).attr(\"y1\", d => boundPosition(d.source.y, height, -200)).attr(\"x2\", d => boundPosition(d.target.x, width, -200)).attr(\"y2\", d => boundPosition(d.target.y, height, -200));\n        node.attr(\"transform\", d => {\n          const x = boundPosition(d.x, width, -200);\n          const y = boundPosition(d.y, height, -200);\n          return `translate(${x},${y})`;\n        });\n      });\n    };\n    const dragstarted = (event, d) => {\n      if (!event.active) simulationRef.current.alphaTarget(0.01).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n      simulationRef.current.force(\"link\").strength(0.8);\n      simulationRef.current.alphaTarget(0.3).restart();\n    };\n    const dragged = (event, d) => {\n      simulationRef.current.alphaTarget(0.01);\n      d.fx = boundPosition(event.x, width, -200);\n      d.fy = boundPosition(event.y, height, -200);\n    };\n    const dragended = (event, d) => {\n      if (!event.active) simulationRef.current.alphaTarget(0.01);\n      d.fx = null;\n      d.fy = null;\n    };\n    const forceBoundary = (width, height, nodes) => {\n      const padding = 4;\n      const xMin = padding;\n      const xMax = width - padding;\n      const yMin = padding;\n      const yMax = height - padding;\n      const strength = 0.05;\n      function force(alpha) {\n        nodes.forEach(node => {\n          if (node.x < xMin) node.vx += (xMin - node.x) * strength * alpha;\n          if (node.x > xMax) node.vx += (xMax - node.x) * strength * alpha;\n          if (node.y < yMin) node.vy += (yMin - node.y) * strength * alpha;\n          if (node.y > yMax) node.vy += (yMax - node.y) * strength * alpha;\n        });\n      }\n      return force;\n    };\n    const boundPosition = (position, dimension, padding) => {\n      return Math.max(padding, Math.min(dimension - padding, position));\n    };\n    const normalizeReadTime = (readTime, minReadTime, maxReadTime) => {\n      const minRadius = 5;\n      const maxRadius = 20;\n      if (maxReadTime === minReadTime) return (minRadius + maxRadius) / 2;\n      const logMin = Math.log(minReadTime + 1);\n      const logMax = Math.log(maxReadTime + 1);\n      const logReadTime = Math.log(readTime + 1);\n      return (logReadTime - logMin) / (logMax - logMin) * (maxRadius - minRadius) + minRadius;\n    };\n    if (isSmallScreen) return null;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-32 rounded-lg\",\n        style: {\n          backgroundColor: \"var(--graph-background)\",\n          color: \"var(--text-color)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 14\n    }, this);\n  }, \"fFD2JOfB2rGB+f5ImdeVQqMyX84=\")), \"fFD2JOfB2rGB+f5ImdeVQqMyX84=\");\n  DocumentGraph.displayName = \"DocumentGraph\";\n\n  // --- useEffect for Scroll to Top Button Visibility ---\n  useEffect(() => {\n    const button = scrollToTopButtonRef.current;\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        // Adjust scroll threshold as needed\n        button.classList.remove(\"opacity-0\");\n        button.classList.add(\"opacity-100\");\n      } else {\n        button.classList.remove(\"opacity-100\");\n        button.classList.add(\"opacity-0\");\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial check on mount\n\n    return () => window.removeEventListener(\"scroll\", handleScroll); // Cleanup on unmount\n  }, []);\n\n  // --- JSX Markup ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"UTF-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"bb.radz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"gameOfLife\",\n      className: \"game-of-life\",\n      width: \"200\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"logo\",\n          children: \"BBradz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          \"aria-label\": \"Toggle theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts\",\n          className: \"nav-link\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/library\",\n          className: \"nav-link\",\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"nav-link\",\n          children: \"About Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reading-list-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lib-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"name\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search\",\n            placeholder: \"Search by term...\",\n            onInput: handleSearchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sort-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-bar-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sort-release\",\n              onClick: event => toggleSort(event.target, \"release\"),\n              children: [\"Sort by Release Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sort-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1048,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sort-time\",\n              onClick: event => toggleSort(event.target, \"time\"),\n              children: [\"Sort by Time to Read \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sort-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"filter-read\",\n              onClick: toggleReadFilter,\n              className: readFilterState !== 0 ? \"active\" : \"\" // ADDED CLASS HERE\n              ,\n              children: [\"Filter:\", \" \", readFilterState === 0 ? \"All\" : readFilterState === 1 ? \"Read\" : \"Unread\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"filter-YT\",\n              onClick: event => toggleFilterType(event.target, \"YT\"),\n              className: activeTypeFilter === \"YT\" ? \"active\" : \"\" // ADD active class conditionally\n              ,\n              children: \"YT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"filter-Arxiv\",\n              onClick: event => toggleFilterType(event.target, \"Arxiv\"),\n              className: activeTypeFilter === \"Arxiv\" ? \"active\" : \"\" // ADD active class conditionally\n              ,\n              children: \"Arxiv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"filter-Site\",\n              onClick: event => toggleFilterType(event.target, \"Site\"),\n              className: activeTypeFilter === \"Site\" ? \"active\" : \"\" // ADD active class conditionally\n              ,\n              children: \"Site\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"active-tags\",\n            className: \"active-tag\",\n            children: activeTagFilters.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n              tag: tag,\n              onTagFilter: handleTagFilter,\n              isActive: true\n            }, tag, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this) // isActive always true here as these are active tags\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"reading-list\",\n          children: [console.log(\"displayedReadingListData before render:\", displayedReadingListData), displayedReadingListData.map((item // Use displayedReadingListData here\n          ) => /*#__PURE__*/_jsxDEV(ReadingListItem, {\n            item: item,\n            onTagFilter: handleTagFilter,\n            activeTagFilters: activeTagFilters // Pass activeTagFilters as prop\n          }, item.originalIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"root\",\n          className: \"graph-inner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [console.log(\"Before DocumentGraph - memoizedGraphData:\", memoizedGraphData), /*#__PURE__*/_jsxDEV(DocumentGraph, {\n              width: 400,\n              height: 400,\n              graphDisplayData: memoizedGraphData // Use memoizedGraphData\n              ,\n              documentSimilaritiesData: similaritiesRawData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: scrollToTopButtonRef,\n      onClick: scrollToTop,\n      className: \"scroll-to-top fixed bottom-6 right-6 opacity-0 transition-opacity duration-200 cursor-pointer\" // Added classes here\n      ,\n      \"aria-label\": \"Scroll to top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          className: \"text-zinc-200\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M18 15l-6-6-6 6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(Library, \"D2bB8Ji26Agi3AndJEt8roS2rU8=\");\n_c5 = Library;\nexport default Library;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Tag$React.memo\");\n$RefreshReg$(_c2, \"Tag\");\n$RefreshReg$(_c3, \"ReadingListItem$React.memo\");\n$RefreshReg$(_c4, \"ReadingListItem\");\n$RefreshReg$(_c5, \"Library\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","Link","d3","runGameOfLife","getTagColor","getTextColor","formatDate","sourcesRawData","similaritiesRawData","jsxDEV","_jsxDEV","Fragment","_Fragment","Tag","memo","_c","tag","onTagFilter","isActive","onClick","style","backgroundColor","color","cursor","marginRight","padding","borderRadius","fontSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","ReadingListItem","_c3","item","activeTagFilters","releaseDate","readTime","String","isRead","title","author","tags","map","includes","description","downloadLink","href","download","_c4","Library","_s2","_s","$RefreshSig$","console","log","theme","setTheme","scrollToTopButtonRef","readingListData","setReadingListData","graphData","setGraphData","displayedReadingListData","setDisplayedReadingListData","originalSourcesRawData","setActiveTagFilters","readFilterState","setReadFilterState","activeTypeFilter","setActiveTypeFilter","toggleTheme","current","scrollToTop","window","scrollTo","top","behavior","document","body","setAttribute","initialReadingListData","index","embedding","originalIndex","error","filteredData","applyTagFilters","filterByType","filterReadStatus","undefined","debounceFunc","func","wait","timeout","args","clearTimeout","setTimeout","apply","performSearch","query","data","filter","toLowerCase","handleSearchInput","e","target","value","sortReadingList","sortBy","sortOrder","sortedData","sort","a","b","comparison","dateA","Date","dateB","filterType","currentData","dataToFilter","onlyUnread","handleTagFilter","newActiveTagFilters","activeTag","length","every","filterTag","toggleReadFilter","button","prevState","toggleSort","criteria","currentOrder","dataset","order","newOrder","buttons","querySelectorAll","forEach","btn","classList","remove","arrowSpan","querySelector","textContent","add","toggleFilterType","type","contains","getElementById","removeProperty","setProperty","memoizedGraphData","DocumentGraph","width","height","graphDisplayData","documentSimilaritiesData","count","containerRef","setError","isSmallScreen","setIsSmallScreen","svgRef","simulationRef","nodeTitleGroupRef","prevGraphDataRef","JSON","stringify","checkScreenSize","innerWidth","debouncedCheckScreenSize","addEventListener","removeEventListener","cleanupGraph","stop","svg","select","selectAll","initializeGraph","container","empty","append","attr","node","textGroup","text","visibleDocsForGraph","initialTranslateX","initialTranslateY","initialScale","g","zoom","scaleExtent","translateExtent","on","event","transform","call","zoomIdentity","translate","scale","visibleDocIndicesMap","doc","nodes","i","id","fullText","links","link","source","initializeSimulation","readTimes","x","Math","random","y","forceSimulation","force","forceLink","d","distance","strength","forceManyBody","forceCenter","forceX","forceY","forceCollide","radius","normalizeReadTime","min","max","forceBoundary","alpha","velocityDecay","alphaDecay","alphaMin","join","nodeGroup","drag","dragstarted","dragged","dragended","l","titleGroup","boundPosition","active","alphaTarget","restart","fx","fy","xMin","xMax","yMin","yMax","vx","vy","position","dimension","minReadTime","maxReadTime","minRadius","maxRadius","logMin","logMax","logReadTime","ref","handleScroll","scrollY","charSet","name","content","to","marginBottom","placeholder","onInput","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c5","$RefreshReg$"],"sources":["/Users/benbradley/Desktop/CS_Classwork/bbradz.github.io/src/components/Library.js"],"sourcesContent":["// library.js - DEBUGGING VERSION - PLEASE RUN THIS AND CHECK CONSOLE\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as d3 from \"d3\";\nimport {\n  runGameOfLife,\n  getTagColor,\n  getTextColor,\n  formatDate,\n} from \"../functionality.js\";\nimport sourcesRawData from \"../input.json\";\nimport similaritiesRawData from \"../document_similarities.json\";\nimport \"../css/library.css\";\n\n// ===================== Tag Component =====================\nconst Tag = React.memo(({ tag, onTagFilter, isActive }) => {\n  // isActive prop is already here - correct\n  return (\n    <span\n      key={tag}\n      data-type={tag}\n      onClick={() => onTagFilter(tag)}\n      style={{\n        backgroundColor: isActive ? getTagColor(tag) : null, // Conditionally apply background color\n        color: isActive ? getTextColor(tag) : null, // Conditionally apply text color\n        cursor: \"pointer\",\n        marginRight: \"4px\",\n        padding: \"2px 6px\",\n        borderRadius: \"3px\",\n        fontSize: \"0.85em\",\n        ...(isActive ? {} : { backgroundColor: null, color: null }), // Ensure default styles when not active\n      }}\n      className={isActive ? \"active-tag-filter\" : \"\"} // Add class for potential CSS styling\n    >\n      {tag}\n    </span>\n  );\n});\nTag.displayName = \"Tag\";\n\n// ===================== ReadingListItem Component =====================\nconst ReadingListItem = React.memo(\n  ({ item, onTagFilter, activeTagFilters }) => {\n    // Receive activeTagFilters as prop\n    return (\n      <li\n        data-release={item.releaseDate}\n        data-time={item.readTime}\n        data-read={String(item.isRead)}\n      >\n        {item.isRead ? <span className=\"read-indicator\">✓</span> : null}\n        <div className=\"item-header\">\n          <div className=\"item-title\">\n            <strong>\n              \"{item.title}\" by {item.author}\n            </strong>\n            <span className=\"meta\">\n              {item.isRead ? \"Read: \" : null}\n              {formatDate(item.releaseDate)} |\n              <span className=\"no-break\">Est. Time {item.readTime} hours</span>\n            </span>\n          </div>\n          <div className=\"tags\">\n            {item.tags.map((tag) => (\n              <Tag\n                key={tag}\n                tag={tag}\n                onTagFilter={onTagFilter}\n                isActive={activeTagFilters.includes(tag)}\n              /> // isActive prop here based on activeTagFilters\n            ))}\n          </div>\n        </div>\n        <div className=\"description\">{item.description}</div>\n        {item.downloadLink ? (\n          <a className=\"download-link\" href={item.downloadLink} download>\n            Source\n          </a>\n        ) : null}\n      </li>\n    );\n  }\n);\nReadingListItem.displayName = \"ReadingListItem\";\n\n// ===================== Library Component =====================\nfunction Library() {\n  console.log(\"Library Component RENDER\");\n\n  // --- State Declarations ---\n  const [theme, setTheme] = useState(\"dark\");\n  const scrollToTopButtonRef = useRef(null);\n  const [readingListData, setReadingListData] = useState([]);\n  const [graphData, setGraphData] = useState([]); // Keep graphData state\n  const [displayedReadingListData, setDisplayedReadingListData] = useState([]); // New state for list display\n  const originalSourcesRawData = useRef(null); // Ref to store initial data\n  const [activeTagFilters, setActiveTagFilters] = useState([]);\n  const [readFilterState, setReadFilterState] = useState(0);\n  const [activeTypeFilter, setActiveTypeFilter] = useState(\"all\"); // Track active type filter\n\n  const toggleTheme = () => {\n    setTheme((current) => (current === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    document.body.setAttribute(\"data-theme\", theme);\n  }, [theme]);\n\n  useEffect(() => {\n    runGameOfLife(\"gameOfLife\");\n  }, []);\n\n  // --- 1st useEffect: Load raw data only ---\n  useEffect(() => {\n    try {\n      const initialReadingListData = sourcesRawData.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n      originalSourcesRawData.current = [...initialReadingListData];\n      console.log(\"1st useEffect - sourcesRawData loaded:\", sourcesRawData);\n    } catch (error) {\n      console.error(\n        \"Library useEffect (data load) - Error importing reading list data:\",\n        error\n      );\n    }\n  }, []); // Empty dependency array - runs only once on mount\n\n  // --- 2nd useEffect: Apply initial filters and set states based on loaded data ---\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded\n      console.log(\n        \"2nd useEffect - originalSourcesRawData.current is now available, applying initial filters.\"\n      );\n\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Pass data explicitly\n      filteredData = filterByType(\"all\", filteredData); // Ensure \"all\" types are shown initially, pass data\n      filteredData = filterReadStatus(undefined, filteredData); // Ensure all read statuses are shown initially, pass data\n\n      console.log(\n        \"2nd useEffect - finalFilteredData after initial filters:\",\n        filteredData\n      );\n      setReadingListData(filteredData); // Set readingListData with final filtered data\n      setGraphData(filteredData); // *Now* set graphData using the *same* final filtered data\n      setDisplayedReadingListData([...filteredData]); // Initialize displayed list as a copy\n      console.log(\n        \"2nd useEffect - readingListData, graphData, and displayedReadingListData states updated.\"\n      );\n    } else {\n      console.log(\n        \"2nd useEffect - originalSourcesRawData.current is not yet available.\"\n      );\n    }\n  }, [originalSourcesRawData]); // Dependency on originalSourcesRawData - runs after data loads\n\n  const debounceFunc = (func, wait) => {\n    let timeout;\n    return function (...args) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  };\n\n  const performSearch = (query, data) => {\n    if (!query) return data;\n    return data.filter((item) =>\n      item.title.toLowerCase().includes(query.toLowerCase())\n    );\n  };\n\n  const handleSearchInput = (e) => {\n    const query = e.target.value;\n    const filteredData = performSearch(\n      query,\n      originalSourcesRawData.current.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }))\n    );\n    console.log(\n      \"handleSearchInput - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"handleSearchInput - Before setGraphData, graphData:\",\n      graphData\n    );\n    console.log(\n      \"graphData state before setGraphData in handleSearchInput:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on search\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in handleSearchInput:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"handleSearchInput - After setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"handleSearchInput - After setGraphData, graphData:\",\n      graphData\n    );\n  };\n\n  const sortReadingList = (sortBy, sortOrder) => {\n    let sortedData = [...displayedReadingListData]; // Sort based on displayed list\n    sortedData.sort((a, b) => {\n      let comparison = 0;\n      if (sortBy === \"release\") {\n        const dateA = new Date(a.releaseDate);\n        const dateB = new Date(b.releaseDate);\n        comparison = dateA - dateB;\n      } else if (sortBy === \"time\") {\n        comparison = a.readTime - b.readTime;\n      }\n      return sortOrder === \"asc\" ? comparison : comparison * -1;\n    });\n    console.log(\n      \"sortReadingList - Before setDisplayedReadingListData, displayedReadingListData:\",\n      displayedReadingListData\n    );\n    console.log(\"graphData state in sortReadingList:\", graphData); // DEBUG LOG\n    setDisplayedReadingListData(sortedData); // Update ONLY displayed list\n    console.log(\n      \"sortReadingList - After setDisplayedReadingListData, displayedReadingListData:\",\n      sortedData\n    );\n    // DO NOT UPDATE graphData or readingListData\n  };\n\n  const filterByType = (filterType, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (filterType === \"all\") {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n      setActiveTypeFilter(\"all\"); // Reset activeTypeFilter when \"all\" is selected\n    } else {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => item.tags.includes(filterType));\n      setActiveTypeFilter(filterType); // Set activeTypeFilter when a type is selected\n    }\n    console.log(\n      \"filterByType - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\"filterByType - Before setGraphData, graphData:\", graphData);\n    console.log(\n      \"graphData state before setGraphData in filterByType:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on type filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in filterByType:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"filterByType - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"filterByType - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n\n  const filterReadStatus = (onlyUnread, currentData) => {\n    // Modified: Accepts currentData\n    const dataToFilter = currentData || originalSourcesRawData.current; // Use currentData or original\n    let filteredData;\n    if (onlyUnread === true) {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => !item.isRead);\n    } else if (onlyUnread === false) {\n      filteredData = dataToFilter\n        .map((item, index) => ({\n          ...item,\n          embedding: item.embedding || [],\n          originalIndex: index,\n        }))\n        .filter((item) => item.isRead);\n    } else {\n      filteredData = dataToFilter.map((item, index) => ({\n        ...item,\n        embedding: item.embedding || [],\n        originalIndex: index,\n      }));\n    }\n    console.log(\n      \"filterReadStatus - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\n      \"filterReadStatus - Before setGraphData, graphData:\",\n      graphData\n    );\n    console.log(\n      \"graphData state before setGraphData in filterReadStatus:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on read status filter\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in filterReadStatus:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"filterReadStatus - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"filterReadStatus - After setGraphData, graphData:\", graphData);\n    return filteredData; // Modified: Return filteredData\n  };\n\n  const handleTagFilter = (tag) => {\n    let newActiveTagFilters = [...activeTagFilters];\n    if (newActiveTagFilters.includes(tag)) {\n      newActiveTagFilters = newActiveTagFilters.filter(\n        (activeTag) => activeTag !== tag\n      );\n    } else {\n      newActiveTagFilters = [...newActiveTagFilters, tag];\n    }\n    setActiveTagFilters(newActiveTagFilters);\n  };\n\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying tag filters\n      applyTagFilters(originalSourcesRawData.current);\n    }\n  }, [activeTagFilters, originalSourcesRawData]); // Added originalSourcesRawData dependency\n\n  const applyTagFilters = () => {\n    // Modified: No arguments needed - always uses original data\n    const dataToFilter = originalSourcesRawData.current; // Always filter against original data\n    if (!dataToFilter) return []; // Handle no data case\n\n    let filteredData = dataToFilter.map((item, index) => ({\n      // Filter original data\n      ...item,\n      embedding: item.embedding || [],\n      originalIndex: index,\n    }));\n    if (activeTagFilters.length > 0) {\n      filteredData = filteredData.filter((item) => {\n        return activeTagFilters.every((filterTag) =>\n          item.tags.includes(filterTag)\n        );\n      });\n    }\n    console.log(\n      \"applyTagFilters - Before setReadingListData, readingListData:\",\n      readingListData\n    );\n    console.log(\"applyTagFilters - Before setGraphData, graphData:\", graphData);\n    console.log(\n      \"graphData state before setGraphData in applyTagFilters:\",\n      graphData\n    ); // DEBUG LOG\n    setReadingListData(filteredData);\n    setGraphData(filteredData); // Update graph data on tag filter change\n    setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    console.log(\n      \"graphData state after setGraphData in applyTagFilters:\",\n      graphData\n    ); // DEBUG LOG\n    console.log(\n      \"applyTagFilters - After setReadingListData, readingListData:\",\n      filteredData\n    );\n    console.log(\"applyTagFilters - After setGraphData, graphData:\", graphData);\n    return filteredData;\n  };\n\n  const toggleReadFilter = (button) => {\n    setReadFilterState((prevState) => (prevState + 1) % 3);\n  };\n\n  useEffect(() => {\n    if (originalSourcesRawData.current) {\n      // Ensure data is loaded before applying read filter\n      let filteredData = applyTagFilters(originalSourcesRawData.current); // Start with tag-filtered data\n      if (readFilterState === 1) {\n        filteredData = filterReadStatus(false, filteredData); // Pass tag-filtered data\n      } else if (readFilterState === 2) {\n        filteredData = filterReadStatus(true, filteredData); // Pass tag-filtered data\n      } else {\n        filteredData = filterByType(activeTypeFilter, filteredData); // Re-apply type filter, pass tag-filtered data\n      }\n      console.log(\n        \"useEffect [readFilterState] - filteredData before setGraphData:\",\n        filteredData\n      );\n      setGraphData(filteredData); // Update graph data on read filter change\n      setDisplayedReadingListData([...filteredData]); // Update displayed list as a copy\n    }\n  }, [\n    readFilterState,\n    originalSourcesRawData,\n    activeTagFilters,\n    activeTypeFilter,\n  ]); // Added activeTypeFilter dependency\n\n  const toggleSort = (button, criteria) => {\n    const currentOrder = button.dataset.order || \"unsorted\";\n    let newOrder;\n\n    if (currentOrder === \"unsorted\") {\n      newOrder = \"asc\";\n    } else if (currentOrder === \"asc\") {\n      newOrder = \"desc\";\n    } else {\n      newOrder = \"unsorted\";\n    }\n\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach((btn) => {\n      btn.classList.remove(\"active\");\n      const arrowSpan = btn.querySelector(\".sort-arrow\");\n      if (arrowSpan) arrowSpan.textContent = \"\";\n    });\n\n    if (newOrder !== \"unsorted\") {\n      button.classList.add(\"active\");\n      button.dataset.order = newOrder;\n      const arrowSpan = button.querySelector(\".sort-arrow\");\n      if (arrowSpan) {\n        arrowSpan.textContent = newOrder === \"asc\" ? \"↑\" : \"↓\";\n      }\n      sortReadingList(criteria, newOrder);\n    } else {\n      button.dataset.order = \"unsorted\";\n      setDisplayedReadingListData([...readingListData]); // Reset displayed list using copy from readingListData\n    }\n  };\n\n  const toggleFilterType = (button, type) => {\n    const isActive = button.classList.contains(\"active\");\n    const buttons = document.querySelectorAll(\".sort-bar button\");\n    buttons.forEach((btn) => {\n      if (btn !== document.getElementById(\"filter-read\")) {\n        btn.classList.remove(\"active\");\n        btn.style.removeProperty(\"--active-color\");\n        btn.style.removeProperty(\"--active-text-color\");\n      }\n    });\n\n    if (!isActive) {\n      button.classList.add(\"active\");\n      switch (type) {\n        case \"YT\":\n          button.style.setProperty(\"--active-color\", \"#FF0000\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Arxiv\":\n          button.style.setProperty(\"--active-color\", \"#A51C30\");\n          button.style.setProperty(\"--active-text-color\", \"#FFFFFF\");\n          break;\n        case \"Site\":\n          button.style.setProperty(\"--active-color\", \"#F5F5DC\");\n          button.style.setProperty(\"--active-text-color\", \"#000000\");\n          break;\n        default:\n          break;\n      }\n      filterByType(type);\n    } else {\n      button.classList.remove(\"active\"); // Remove active class to reset style based on CSS\n      button.style.removeProperty(\"--active-color\");\n      button.style.removeProperty(\"--active-text-color\");\n      filterByType(\"all\");\n    }\n  };\n\n  // Memoize graphData to prevent unnecessary re-renders of DocumentGraph\n  const memoizedGraphData = useMemo(() => {\n    console.log(\"memoizedGraphData useMemo called, graphData:\", graphData); // DEBUG LOG\n    return graphData;\n  }, [graphData]);\n\n  // ===================== DocumentGraph Component =====================\n  const DocumentGraph = React.memo(\n    ({ width, height, graphDisplayData, documentSimilaritiesData }) => {\n      console.count(\"DocumentGraph RENDER\"); // <--- Add render counter\n      console.log(\n        \"DocumentGraph RENDER - graphDisplayData prop received:\",\n        graphDisplayData\n      );\n      const containerRef = useRef(null);\n      const [error, setError] = useState(null);\n      const [isSmallScreen, setIsSmallScreen] = useState(false);\n      const svgRef = useRef(null); // Keep svgRef to check if SVG exists\n      const simulationRef = useRef(null);\n      const nodeTitleGroupRef = useRef(null);\n      const prevGraphDataRef = useRef(graphDisplayData); // Ref to store previous prop\n\n      useEffect(() => {\n        if (\n          JSON.stringify(graphDisplayData) !==\n          JSON.stringify(prevGraphDataRef.current)\n        ) {\n          console.log(\n            \"DocumentGraph useEffect - graphDisplayData prop CHANGED:\",\n            graphDisplayData\n          );\n          prevGraphDataRef.current = graphDisplayData; // Update previous prop\n        } else {\n          console.log(\n            \"DocumentGraph useEffect - graphDisplayData prop UNCHANGED (shallowly equal):\",\n            graphDisplayData\n          );\n        }\n      }, [graphDisplayData]);\n\n      const checkScreenSize = () => {\n        setIsSmallScreen(window.innerWidth <= 768);\n      };\n      const debouncedCheckScreenSize = debounceFunc(checkScreenSize, 100);\n\n      useEffect(() => {\n        checkScreenSize();\n        window.addEventListener(\"resize\", debouncedCheckScreenSize);\n        return () => {\n          window.removeEventListener(\"resize\", debouncedCheckScreenSize);\n        };\n      }, []);\n\n      const cleanupGraph = useCallback(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          simulationRef.current = null;\n        }\n        if (containerRef.current && svgRef.current) {\n          // Make sure svgRef.current exists\n          const svg = d3.select(svgRef.current);\n          svg.selectAll(\"*\").remove(); // Clear the SVG content, not the container\n        }\n      }, []);\n\n      useEffect(() => {\n        console.log(\n          \"DocumentGraph useEffect - graphDisplayData prop in useEffect:\",\n          graphDisplayData\n        ); // Log renamed prop\n        if (!documentSimilaritiesData) {\n          console.log(\n            \"DocumentGraph useEffect - No documentSimilaritiesData, returning early.\"\n          );\n          return;\n        }\n\n        console.log(\n          \"DocumentGraph useEffect - graphDisplayData:\",\n          graphDisplayData\n        ); // DEBUG\n        if (!isSmallScreen && graphDisplayData && graphDisplayData.length > 0) {\n          // Use graphDisplayData\n          console.log(\n            \"DocumentGraph useEffect - Initializing graph with graphDisplayData:\",\n            graphDisplayData\n          );\n          initializeGraph(graphDisplayData); // Use graphDisplayData\n        } else if (\n          !isSmallScreen &&\n          (!graphDisplayData || graphDisplayData.length === 0) // Use graphDisplayData\n        ) {\n          console.log(\n            \"DocumentGraph useEffect - Cleaning up graph - No data or small screen.\"\n          );\n          cleanupGraph();\n          if (containerRef.current) {\n            const container = d3.select(containerRef.current);\n            let svg = d3.select(svgRef.current);\n\n            if (svg.empty()) {\n              // Check if SVG is not yet created or was removed somehow\n              svg = container\n                .append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"className\", \"rounded-lg\");\n              svgRef.current = svg.node(); // Update the ref to the created SVG node\n            }\n\n            svg.selectAll(\"*\").remove(); // Ensure any previous content is cleared before adding \"No documents\" text\n\n            svg\n              .append(\"rect\")\n              .attr(\"width\", \"100%\")\n              .attr(\"height\", \"100%\")\n              .attr(\"fill\", \"var(--graph-background)\");\n            const textGroup = svg\n              .append(\"g\")\n              .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            textGroup\n              .append(\"text\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(\"No documents to display\");\n          }\n        } else {\n          console.log(\n            \"DocumentGraph useEffect - Condition not met - No graph update.\"\n          );\n        }\n      }, [\n        isSmallScreen,\n        width,\n        height,\n        documentSimilaritiesData,\n        memoizedGraphData, // Re-add memoizedGraphData dependency as it should trigger graph updates when filters/search change\n      ]);\n\n      const initializeGraph = async (visibleDocsForGraph) => {\n        if (!containerRef.current) return;\n        if (!documentSimilaritiesData) return;\n        cleanupGraph();\n\n        try {\n          const container = d3.select(containerRef.current);\n          // Ensure SVG is created if it doesn't exist, or select existing one\n          let svg = d3.select(svgRef.current);\n          if (svg.empty()) {\n            svg = container\n              .append(\"svg\")\n              .attr(\"width\", width)\n              .attr(\"height\", height)\n              .attr(\"className\", \"rounded-lg\");\n            svgRef.current = svg.node(); // Update the ref to the created SVG node\n          }\n\n          svg.selectAll(\"*\").remove(); // Clear previous content before drawing graph\n\n          svg\n            .append(\"rect\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .attr(\"fill\", \"var(--graph-background)\");\n\n          if (!visibleDocsForGraph.length) {\n            const textGroup = svg\n              .append(\"g\")\n              .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n            textGroup\n              .append(\"text\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(\"No documents to display\");\n            return;\n          }\n\n          const initialTranslateX = width / 3 - 25;\n          const initialTranslateY = height / 4 + 10;\n          const initialScale = 0.45;\n\n          const g = svg.append(\"g\");\n          const zoom = d3\n            .zoom()\n            .scaleExtent([initialScale, 3])\n            .translateExtent([\n              [0, 0],\n              [width, height],\n            ])\n            .on(\"zoom\", (event) => {\n              g.attr(\"transform\", event.transform);\n            });\n\n          svg.call(\n            zoom.transform,\n            d3.zoomIdentity\n              .translate(initialTranslateX, initialTranslateY)\n              .scale(initialScale)\n          );\n          svg.call(zoom);\n\n          const visibleDocIndicesMap = {};\n          visibleDocsForGraph.forEach((doc, index) => {\n            visibleDocIndicesMap[doc.originalIndex] = index;\n          });\n\n          const nodes = visibleDocsForGraph.map((doc, i) => ({\n            id: String(i),\n            title: doc.title,\n            fullText: doc.description,\n            tags: doc.tags,\n            readTime: doc.readTime,\n            releaseDate: doc.releaseDate,\n            isRead: doc.isRead,\n          }));\n\n          let links = documentSimilaritiesData\n            .filter((link) => {\n              return (\n                link.source in visibleDocIndicesMap &&\n                link.target in visibleDocIndicesMap\n              );\n            })\n            .map((link) => ({\n              ...link,\n              source: String(visibleDocIndicesMap[link.source]),\n              target: String(visibleDocIndicesMap[link.target]),\n            }));\n\n          if (!links || links.length === 0) {\n            links = [];\n          }\n\n          initializeSimulation(\n            nodes,\n            links,\n            width,\n            height,\n            g,\n            svg,\n            visibleDocsForGraph.map((doc) => doc.readTime)\n          );\n        } catch (error) {\n          setError(\"Error initializing graph. See console for details.\");\n        }\n      };\n\n      const initializeSimulation = (\n        nodes,\n        links,\n        width,\n        height,\n        g,\n        svg,\n        readTimes\n      ) => {\n        nodes.forEach((node) => {\n          node.x = width / 2 + (Math.random() - 0.5) * 40;\n          node.y = height / 2 + (Math.random() - 0.5) * 40;\n        });\n\n        simulationRef.current = d3\n          .forceSimulation()\n          .nodes(nodes)\n          .force(\n            \"link\",\n            d3\n              .forceLink(links)\n              .id((d) => d.id)\n              .distance(50)\n              .strength(0.5)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(-300))\n          .force(\"center\", d3.forceCenter(width / 2, height / 2))\n          .force(\"x\", d3.forceX(width / 2).strength(0.1))\n          .force(\"y\", d3.forceY(height / 2).strength(0.1))\n          .force(\n            \"collision\",\n            d3\n              .forceCollide()\n              .strength(0.1)\n              .radius(\n                (d) =>\n                  normalizeReadTime(\n                    d.readTime,\n                    Math.min(...readTimes),\n                    Math.max(...readTimes)\n                  ) + 10\n              )\n          )\n          .force(\"boundary\", forceBoundary(width, height, nodes))\n          .alpha(0.3)\n          .velocityDecay(0.4)\n          .alphaDecay(0.05)\n          .alphaMin(0.001);\n\n        const link = g\n          .append(\"g\")\n          .selectAll(\"line\")\n          .data(links)\n          .join(\"line\")\n          .attr(\"stroke\", \"var(--edge-color)\")\n          .attr(\"stroke-width\", (d) => d.width)\n          .attr(\"stroke-opacity\", \"var(--edge-opacity)\");\n\n        const nodeGroup = g.append(\"g\").attr(\"className\", \"nodes\");\n        const node = nodeGroup\n          .selectAll(\"g\")\n          .data(nodes)\n          .join(\"g\")\n          .attr(\"transform\", (d) => `translate(${d.x},${d.y})`)\n          .call(\n            d3\n              .drag()\n              .on(\"start\", dragstarted)\n              .on(\"drag\", dragged)\n              .on(\"end\", dragended)\n          );\n\n        node\n          .append(\"circle\")\n          .attr(\"r\", (d) =>\n            normalizeReadTime(\n              d.readTime,\n              Math.min(...readTimes),\n              Math.max(...readTimes)\n            )\n          )\n          .attr(\"fill\", (d) => (d.isRead ? \"#4a9eff\" : \"var(--node-color)\"))\n          .attr(\"stroke\", \"var(--node-stroke-color)\")\n          .on(\"mouseover\", function (event, d) {\n            d3.select(this).attr(\"fill\", \"#8ACE00\");\n            link\n              .attr(\"stroke\", (l) =>\n                l.source.id === d.id || l.target.id === d.id\n                  ? \"#8ACE00\"\n                  : \"var(--edge-color)\"\n              )\n              .attr(\"stroke-width\", (l) =>\n                l.source.id === d.id || l.target.id === d.id ? 3 : l.width\n              );\n            const titleGroup = nodeGroup\n              .append(\"g\")\n              .attr(\"className\", \"node-title-group\")\n              .attr(\"transform\", `translate(${d.x},${d.y})`);\n            nodeTitleGroupRef.current = titleGroup;\n\n            titleGroup\n              .append(\"text\")\n              .attr(\"className\", \"node-title\")\n              .attr(\"x\", 10)\n              .attr(\"y\", 5)\n              .attr(\"fill\", \"var(--text-color)\")\n              .text(d.title);\n          })\n          .on(\"mouseout\", function (event, d) {\n            d3.select(this).attr(\"fill\", (d) =>\n              d.isRead ? \"#4a9eff\" : \"var(--node-color)\"\n            );\n            link\n              .attr(\"stroke\", \"var(--edge-color)\")\n              .attr(\"stroke-width\", (l) => l.width);\n            if (nodeTitleGroupRef.current) {\n              nodeTitleGroupRef.current.remove();\n              nodeTitleGroupRef.current = null;\n            }\n          });\n\n        simulationRef.current.on(\"tick\", () => {\n          link\n            .attr(\"x1\", (d) => boundPosition(d.source.x, width, -200))\n            .attr(\"y1\", (d) => boundPosition(d.source.y, height, -200))\n            .attr(\"x2\", (d) => boundPosition(d.target.x, width, -200))\n            .attr(\"y2\", (d) => boundPosition(d.target.y, height, -200));\n          node.attr(\"transform\", (d) => {\n            const x = boundPosition(d.x, width, -200);\n            const y = boundPosition(d.y, height, -200);\n            return `translate(${x},${y})`;\n          });\n        });\n      };\n\n      const dragstarted = (event, d) => {\n        if (!event.active) simulationRef.current.alphaTarget(0.01).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n        simulationRef.current.force(\"link\").strength(0.8);\n        simulationRef.current.alphaTarget(0.3).restart();\n      };\n\n      const dragged = (event, d) => {\n        simulationRef.current.alphaTarget(0.01);\n        d.fx = boundPosition(event.x, width, -200);\n        d.fy = boundPosition(event.y, height, -200);\n      };\n\n      const dragended = (event, d) => {\n        if (!event.active) simulationRef.current.alphaTarget(0.01);\n        d.fx = null;\n        d.fy = null;\n      };\n\n      const forceBoundary = (width, height, nodes) => {\n        const padding = 4;\n        const xMin = padding;\n        const xMax = width - padding;\n        const yMin = padding;\n        const yMax = height - padding;\n        const strength = 0.05;\n\n        function force(alpha) {\n          nodes.forEach((node) => {\n            if (node.x < xMin) node.vx += (xMin - node.x) * strength * alpha;\n            if (node.x > xMax) node.vx += (xMax - node.x) * strength * alpha;\n            if (node.y < yMin) node.vy += (yMin - node.y) * strength * alpha;\n            if (node.y > yMax) node.vy += (yMax - node.y) * strength * alpha;\n          });\n        }\n        return force;\n      };\n\n      const boundPosition = (position, dimension, padding) => {\n        return Math.max(padding, Math.min(dimension - padding, position));\n      };\n\n      const normalizeReadTime = (readTime, minReadTime, maxReadTime) => {\n        const minRadius = 5;\n        const maxRadius = 20;\n        if (maxReadTime === minReadTime) return (minRadius + maxRadius) / 2;\n        const logMin = Math.log(minReadTime + 1);\n        const logMax = Math.log(maxReadTime + 1);\n        const logReadTime = Math.log(readTime + 1);\n        return (\n          ((logReadTime - logMin) / (logMax - logMin)) *\n            (maxRadius - minRadius) +\n          minRadius\n        );\n      };\n\n      if (isSmallScreen) return null;\n\n      if (error) {\n        return (\n          <div\n            className=\"flex items-center justify-center h-32 rounded-lg\"\n            style={{\n              backgroundColor: \"var(--graph-background)\",\n              color: \"var(--text-color)\",\n            }}\n          >\n            <p className=\"text-red-600\">{error}</p>\n          </div>\n        );\n      }\n\n      return <div ref={containerRef} className=\"w-full h-full\" />;\n    }\n  );\n  DocumentGraph.displayName = \"DocumentGraph\";\n\n  // --- useEffect for Scroll to Top Button Visibility ---\n  useEffect(() => {\n    const button = scrollToTopButtonRef.current;\n\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        // Adjust scroll threshold as needed\n        button.classList.remove(\"opacity-0\");\n        button.classList.add(\"opacity-100\");\n      } else {\n        button.classList.remove(\"opacity-100\");\n        button.classList.add(\"opacity-0\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial check on mount\n\n    return () => window.removeEventListener(\"scroll\", handleScroll); // Cleanup on unmount\n  }, []);\n\n  // --- JSX Markup ---\n  return (\n    <>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <title>bb.radz</title>\n\n      <canvas\n        id=\"gameOfLife\"\n        className=\"game-of-life\"\n        width=\"200\"\n        height=\"400\"\n      ></canvas>\n\n      <header className=\"header\">\n        <div className=\"logo-section\">\n          <p className=\"logo\">BBradz</p>\n          <button\n            className=\"theme-toggle\"\n            onClick={toggleTheme}\n            aria-label=\"Toggle theme\"\n          >\n            {/* Theme Toggle SVG Icons */}\n          </button>\n        </div>\n        <nav className=\"nav-links\">\n          <Link to=\"/posts\" className=\"nav-link\">\n            Posts\n          </Link>\n          <Link to=\"/library\" className=\"nav-link\">\n            Library\n          </Link>\n          <Link to=\"/\" className=\"nav-link\">\n            About Me\n          </Link>\n        </nav>\n      </header>\n\n      <div className=\"reading-list-layout\">\n        <div className=\"lib-container\">\n          <h1 className=\"name\" style={{ marginBottom: \"10px\" }}>\n            Library\n          </h1>\n          <div className=\"search-bar\">\n            <input\n              type=\"text\"\n              id=\"search\"\n              placeholder=\"Search by term...\"\n              onInput={handleSearchInput}\n            />\n          </div>\n          <div className=\"sort-bar\">\n            <div className=\"sort-bar-buttons\">\n              <button\n                id=\"sort-release\"\n                onClick={(event) => toggleSort(event.target, \"release\")}\n              >\n                Sort by Release Date <span className=\"sort-arrow\"></span>\n              </button>\n              <button\n                id=\"sort-time\"\n                onClick={(event) => toggleSort(event.target, \"time\")}\n              >\n                Sort by Time to Read <span className=\"sort-arrow\"></span>\n              </button>\n              <button\n                id=\"filter-read\"\n                onClick={toggleReadFilter}\n                className={readFilterState !== 0 ? \"active\" : \"\"} // ADDED CLASS HERE\n              >\n                Filter:{\" \"}\n                {readFilterState === 0\n                  ? \"All\"\n                  : readFilterState === 1\n                  ? \"Read\"\n                  : \"Unread\"}\n              </button>\n              <button\n                id=\"filter-YT\"\n                onClick={(event) => toggleFilterType(event.target, \"YT\")}\n                className={activeTypeFilter === \"YT\" ? \"active\" : \"\"} // ADD active class conditionally\n              >\n                YT\n              </button>\n              <button\n                id=\"filter-Arxiv\"\n                onClick={(event) => toggleFilterType(event.target, \"Arxiv\")}\n                className={activeTypeFilter === \"Arxiv\" ? \"active\" : \"\"} // ADD active class conditionally\n              >\n                Arxiv\n              </button>\n              <button\n                id=\"filter-Site\"\n                onClick={(event) => toggleFilterType(event.target, \"Site\")}\n                className={activeTypeFilter === \"Site\" ? \"active\" : \"\"} // ADD active class conditionally\n              >\n                Site\n              </button>\n            </div>\n            <div id=\"active-tags\" className=\"active-tag\">\n              {activeTagFilters.map((tag) => (\n                <Tag\n                  key={tag}\n                  tag={tag}\n                  onTagFilter={handleTagFilter}\n                  isActive={true}\n                /> // isActive always true here as these are active tags\n              ))}\n            </div>\n          </div>\n\n          <ul id=\"reading-list\">\n            {console.log(\n              \"displayedReadingListData before render:\",\n              displayedReadingListData\n            )}\n            {displayedReadingListData.map(\n              (\n                item // Use displayedReadingListData here\n              ) => (\n                <ReadingListItem\n                  key={item.originalIndex}\n                  item={item}\n                  onTagFilter={handleTagFilter}\n                  activeTagFilters={activeTagFilters} // Pass activeTagFilters as prop\n                />\n              )\n            )}\n          </ul>\n        </div>\n\n        <div className=\"graph-container\">\n          <div id=\"root\" className=\"graph-inner\">\n            <div className=\"space-y-6\">\n              {console.log(\n                \"Before DocumentGraph - memoizedGraphData:\",\n                memoizedGraphData\n              )}\n              <DocumentGraph\n                width={400}\n                height={400}\n                graphDisplayData={memoizedGraphData} // Use memoizedGraphData\n                documentSimilaritiesData={similaritiesRawData}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button\n        ref={scrollToTopButtonRef}\n        onClick={scrollToTop}\n        className=\"scroll-to-top fixed bottom-6 right-6 opacity-0 transition-opacity duration-200 cursor-pointer\" // Added classes here\n        aria-label=\"Scroll to top\"\n      >\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"text-zinc-200\"\n          >\n            <path d=\"M18 15l-6-6-6 6\" />\n          </svg>\n        </div>\n      </button>\n    </>\n  );\n}\n\nexport default Library;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}